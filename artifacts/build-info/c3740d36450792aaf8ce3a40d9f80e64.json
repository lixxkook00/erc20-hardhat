{"id":"c3740d36450792aaf8ce3a40d9f80e64","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/Vault.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity <=0.8.17;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/access/AccessControlEnumerable.sol\";\n\ncontract Vault is Ownable, AccessControlEnumerable {\n    IERC20 private token;\n    uint256 public maxWithdrawAmount;\n    bool public withdrawEnable;\n    bytes32 public constant WITHDRAWER_ROLE = keccak256(\"WITHDRAWER_ROLE\");\n\n    function setWithdrawEnable(bool _isEnable) public onlyOwner {\n        withdrawEnable = _isEnable;\n    }\n    function setMaxWithdrawAmount(uint256 _maxAmount) public onlyOwner {\n        maxWithdrawAmount = _maxAmount;\n    }\n    function setToken(IERC20 _token) public onlyOwner {\n        token = _token;\n    }\n    constructor() {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n    }\n    function withdraw(\n        uint256 _amount,\n        address _to\n    ) external onlyWithdrawer {\n        require(withdrawEnable,\"Withdraw is not available\");\n        require(_amount<=maxWithdrawAmount,\"Exceed maximum amount\");\n        token.transfer(_to, _amount);\n    }\n\n    function deposit(uint256 _amount) external {\n        require(\n            token.balanceOf(msg.sender) >= _amount,\n            \"Insufficient account balance\"\n        );\n        SafeERC20.safeTransferFrom(token, msg.sender, address(this), _amount);\n    }\n    modifier onlyWithdrawer() {\n        require(owner() == _msgSender()||hasRole(WITHDRAWER_ROLE,_msgSender()), \"Caller is not a withdrawer\");\n        _;\n    }\n}"},"openzeppelin-solidity/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"openzeppelin-solidity/contracts/access/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"},"openzeppelin-solidity/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"openzeppelin-solidity/contracts/access/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"openzeppelin-solidity/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"openzeppelin-solidity/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"openzeppelin-solidity/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"openzeppelin-solidity/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"},"openzeppelin-solidity/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"contracts/Vault.sol":{"ast":{"absolutePath":"contracts/Vault.sol","exportedSymbols":{"AccessControl":[467],"AccessControlEnumerable":[592],"Address":[1392],"Context":[1414],"ERC165":[1641],"EnumerableSet":[2252],"IAccessControl":[665],"IAccessControlEnumerable":[690],"IERC165":[1653],"IERC20":[873],"Ownable":[795],"SafeERC20":[1097],"Strings":[1617],"Vault":[147]},"id":148,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","<=","0.8",".17"],"nodeType":"PragmaDirective","src":"38:25:0"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1098,"src":"65:73:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":874,"src":"139:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/access/Ownable.sol","file":"openzeppelin-solidity/contracts/access/Ownable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":796,"src":"204:60:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/access/AccessControlEnumerable.sol","file":"openzeppelin-solidity/contracts/access/AccessControlEnumerable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":593,"src":"265:76:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":795,"src":"361:7:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"361:7:0"},{"baseName":{"id":8,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":592,"src":"370:23:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"370:23:0"}],"canonicalName":"Vault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,592,467,1641,1653,690,665,795,1414],"name":"Vault","nameLocation":"352:5:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":12,"mutability":"mutable","name":"token","nameLocation":"415:5:0","nodeType":"VariableDeclaration","scope":147,"src":"400:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},"typeName":{"id":11,"nodeType":"UserDefinedTypeName","pathNode":{"id":10,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":873,"src":"400:6:0"},"referencedDeclaration":873,"src":"400:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"visibility":"private"},{"constant":false,"functionSelector":"f516440c","id":14,"mutability":"mutable","name":"maxWithdrawAmount","nameLocation":"441:17:0","nodeType":"VariableDeclaration","scope":147,"src":"426:32:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b5b68afe","id":16,"mutability":"mutable","name":"withdrawEnable","nameLocation":"476:14:0","nodeType":"VariableDeclaration","scope":147,"src":"464:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15,"name":"bool","nodeType":"ElementaryTypeName","src":"464:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":true,"functionSelector":"85f438c1","id":21,"mutability":"constant","name":"WITHDRAWER_ROLE","nameLocation":"520:15:0","nodeType":"VariableDeclaration","scope":147,"src":"496:70:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"496:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"574954484452415745525f524f4c45","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"548:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e4","typeString":"literal_string \"WITHDRAWER_ROLE\""},"value":"WITHDRAWER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e4","typeString":"literal_string \"WITHDRAWER_ROLE\""}],"id":18,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"538:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"538:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":32,"nodeType":"Block","src":"633:43:0","statements":[{"expression":{"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":28,"name":"withdrawEnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"643:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":29,"name":"_isEnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"660:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"643:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":31,"nodeType":"ExpressionStatement","src":"643:26:0"}]},"functionSelector":"827a560b","id":33,"implemented":true,"kind":"function","modifiers":[{"id":26,"kind":"modifierInvocation","modifierName":{"id":25,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":737,"src":"623:9:0"},"nodeType":"ModifierInvocation","src":"623:9:0"}],"name":"setWithdrawEnable","nameLocation":"582:17:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"_isEnable","nameLocation":"605:9:0","nodeType":"VariableDeclaration","scope":33,"src":"600:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":22,"name":"bool","nodeType":"ElementaryTypeName","src":"600:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"599:16:0"},"returnParameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"633:0:0"},"scope":147,"src":"573:103:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":44,"nodeType":"Block","src":"748:47:0","statements":[{"expression":{"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40,"name":"maxWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"758:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41,"name":"_maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"778:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"758:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43,"nodeType":"ExpressionStatement","src":"758:30:0"}]},"functionSelector":"df74e028","id":45,"implemented":true,"kind":"function","modifiers":[{"id":38,"kind":"modifierInvocation","modifierName":{"id":37,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":737,"src":"738:9:0"},"nodeType":"ModifierInvocation","src":"738:9:0"}],"name":"setMaxWithdrawAmount","nameLocation":"690:20:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"_maxAmount","nameLocation":"719:10:0","nodeType":"VariableDeclaration","scope":45,"src":"711:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"710:20:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"748:0:0"},"scope":147,"src":"681:114:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":57,"nodeType":"Block","src":"850:31:0","statements":[{"expression":{"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":53,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"860:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":54,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"868:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"src":"860:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":56,"nodeType":"ExpressionStatement","src":"860:14:0"}]},"functionSelector":"144fa6d7","id":58,"implemented":true,"kind":"function","modifiers":[{"id":51,"kind":"modifierInvocation","modifierName":{"id":50,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":737,"src":"840:9:0"},"nodeType":"ModifierInvocation","src":"840:9:0"}],"name":"setToken","nameLocation":"809:8:0","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"_token","nameLocation":"825:6:0","nodeType":"VariableDeclaration","scope":58,"src":"818:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},"typeName":{"id":47,"nodeType":"UserDefinedTypeName","pathNode":{"id":46,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":873,"src":"818:6:0"},"referencedDeclaration":873,"src":"818:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"817:15:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"850:0:0"},"scope":147,"src":"800:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"900:61:0","statements":[{"expression":{"arguments":[{"id":62,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"921:18:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":63,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"941:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":61,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"910:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"910:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"910:44:0"}]},"id":68,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"897:2:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"900:0:0"},"scope":147,"src":"886:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":96,"nodeType":"Block","src":"1060:175:0","statements":[{"expression":{"arguments":[{"id":78,"name":"withdrawEnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"1078:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177206973206e6f7420617661696c61626c65","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1093:27:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62","typeString":"literal_string \"Withdraw is not available\""},"value":"Withdraw is not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62","typeString":"literal_string \"Withdraw is not available\""}],"id":77,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1070:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1070:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"1070:51:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":83,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"1139:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":84,"name":"maxWithdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1148:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1139:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457863656564206d6178696d756d20616d6f756e74","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1166:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b","typeString":"literal_string \"Exceed maximum amount\""},"value":"Exceed maximum amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b","typeString":"literal_string \"Exceed maximum amount\""}],"id":82,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1131:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1131:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":88,"nodeType":"ExpressionStatement","src":"1131:59:0"},{"expression":{"arguments":[{"id":92,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"1215:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":93,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"1220:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":89,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1200:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":840,"src":"1200:14:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1200:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":95,"nodeType":"ExpressionStatement","src":"1200:28:0"}]},"functionSelector":"00f714ce","id":97,"implemented":true,"kind":"function","modifiers":[{"id":75,"kind":"modifierInvocation","modifierName":{"id":74,"name":"onlyWithdrawer","nodeType":"IdentifierPath","referencedDeclaration":146,"src":"1045:14:0"},"nodeType":"ModifierInvocation","src":"1045:14:0"}],"name":"withdraw","nameLocation":"975:8:0","nodeType":"FunctionDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"_amount","nameLocation":"1001:7:0","nodeType":"VariableDeclaration","scope":97,"src":"993:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"_to","nameLocation":"1026:3:0","nodeType":"VariableDeclaration","scope":97,"src":"1018:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"983:52:0"},"returnParameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"1060:0:0"},"scope":147,"src":"966:269:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":126,"nodeType":"Block","src":"1284:209:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":105,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1331:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1331:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":103,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1315:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":830,"src":"1315:15:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1315:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":108,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"1346:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1315:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206163636f756e742062616c616e6365","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1367:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b","typeString":"literal_string \"Insufficient account balance\""},"value":"Insufficient account balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b","typeString":"literal_string \"Insufficient account balance\""}],"id":102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1294:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1294:113:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"ExpressionStatement","src":"1294:113:0"},{"expression":{"arguments":[{"id":116,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1444:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},{"expression":{"id":117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1451:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1451:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":121,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1471:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$147","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$147","typeString":"contract Vault"}],"id":120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1463:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:0","typeDescriptions":{}}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1463:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":123,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"1478:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":113,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"1417:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$1097_$","typeString":"type(library SafeERC20)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":930,"src":"1417:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$873_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1417:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"1417:69:0"}]},"functionSelector":"b6b55f25","id":127,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"1250:7:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"_amount","nameLocation":"1266:7:0","nodeType":"VariableDeclaration","scope":127,"src":"1258:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"1258:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1257:17:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"1284:0:0"},"scope":147,"src":"1241:252:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":145,"nodeType":"Block","src":"1524:129:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":130,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"1542:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1542:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":132,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1553:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1553:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1542:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":136,"name":"WITHDRAWER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"1575:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":137,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1591:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1591:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":135,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"1567:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1567:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1542:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420612077697468647261776572","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1606:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","typeString":"literal_string \"Caller is not a withdrawer\""},"value":"Caller is not a withdrawer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","typeString":"literal_string \"Caller is not a withdrawer\""}],"id":129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1534:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1534:101:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"ExpressionStatement","src":"1534:101:0"},{"id":144,"nodeType":"PlaceholderStatement","src":"1645:1:0"}]},"id":146,"name":"onlyWithdrawer","nameLocation":"1507:14:0","nodeType":"ModifierDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"1521:2:0"},"src":"1498:155:0","virtual":false,"visibility":"internal"}],"scope":148,"src":"343:1312:0","usedErrors":[]}],"src":"38:1617:0"},"id":0},"openzeppelin-solidity/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[467],"Context":[1414],"ERC165":[1641],"IAccessControl":[665],"IERC165":[1653],"Strings":[1617]},"id":468,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"openzeppelin-solidity/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":468,"sourceUnit":666,"src":"133:30:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/utils/Context.sol","file":"../utils/Context.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":468,"sourceUnit":1415,"src":"164:30:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":468,"sourceUnit":1618,"src":"195:30:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":468,"sourceUnit":1642,"src":"226:43:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":155,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1414,"src":"1841:7:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"1841:7:1"},{"baseName":{"id":157,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":665,"src":"1850:14:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"1850:14:1"},{"baseName":{"id":159,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1641,"src":"1866:6:1"},"id":160,"nodeType":"InheritanceSpecifier","src":"1866:6:1"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"271:1534:1","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":467,"linearizedBaseContracts":[467,1641,1653,665,1414],"name":"AccessControl","nameLocation":"1824:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":167,"members":[{"constant":false,"id":164,"mutability":"mutable","name":"members","nameLocation":"1930:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1905:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":163,"keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":162,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:1","nodeType":"VariableDeclaration","scope":167,"src":"1947:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:1","nodeType":"StructDefinition","scope":467,"src":"1879:92:1","visibility":"public"},{"constant":false,"id":172,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:1","nodeType":"VariableDeclaration","scope":467,"src":"1977:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$167_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":171,"keyType":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$167_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":170,"nodeType":"UserDefinedTypeName","pathNode":{"id":169,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":167,"src":"1996:8:1"},"referencedDeclaration":167,"src":"1996:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$167_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":175,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:1","nodeType":"VariableDeclaration","scope":467,"src":"2027:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":185,"nodeType":"Block","src":"2495:44:1","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2516:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":180,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[240,283],"referencedDeclaration":240,"src":"2505:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2505:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":183,"nodeType":"ExpressionStatement","src":"2505:16:1"},{"id":184,"nodeType":"PlaceholderStatement","src":"2531:1:1"}]},"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"2083:375:1","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":186,"name":"onlyRole","nameLocation":"2472:8:1","nodeType":"ModifierDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"role","nameLocation":"2489:4:1","nodeType":"VariableDeclaration","scope":186,"src":"2481:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:1"},"src":"2463:76:1","virtual":false,"visibility":"internal"},{"baseFunctions":[1640],"body":{"id":207,"nodeType":"Block","src":"2697:111:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":195,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2714:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":197,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"2734:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$665_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$665_$","typeString":"type(contract IAccessControl)"}],"id":196,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2729:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2729:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$665","typeString":"type(contract IAccessControl)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2729:32:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2714:47:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":203,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2789:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":201,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2765:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$467_$","typeString":"type(contract super AccessControl)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1640,"src":"2765:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2765:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2714:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":194,"id":206,"nodeType":"Return","src":"2707:94:1"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"2545:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":208,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2615:17:1","nodeType":"FunctionDefinition","overrides":{"id":191,"nodeType":"OverrideSpecifier","overrides":[],"src":"2673:8:1"},"parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"interfaceId","nameLocation":"2640:11:1","nodeType":"VariableDeclaration","scope":208,"src":"2633:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":188,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2633:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2632:20:1"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":208,"src":"2691:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":192,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2690:6:1"},"scope":467,"src":"2606:202:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[632],"body":{"id":226,"nodeType":"Block","src":"2987:53:1","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":219,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3004:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$167_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":221,"indexExpression":{"id":220,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3011:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$167_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":164,"src":"3004:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":224,"indexExpression":{"id":223,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3025:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":218,"id":225,"nodeType":"Return","src":"2997:36:1"}]},"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"2814:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":227,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2904:7:1","nodeType":"FunctionDefinition","overrides":{"id":215,"nodeType":"OverrideSpecifier","overrides":[],"src":"2963:8:1"},"parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"role","nameLocation":"2920:4:1","nodeType":"VariableDeclaration","scope":227,"src":"2912:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2912:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"account","nameLocation":"2934:7:1","nodeType":"VariableDeclaration","scope":227,"src":"2926:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:31:1"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"2981:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":216,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2980:6:1"},"scope":467,"src":"2895:145:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":239,"nodeType":"Block","src":"3390:47:1","statements":[{"expression":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3411:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":235,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"3417:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3417:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":233,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[240,283],"referencedDeclaration":283,"src":"3400:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3400:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":238,"nodeType":"ExpressionStatement","src":"3400:30:1"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"3046:283:1","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":240,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3343:10:1","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"role","nameLocation":"3362:4:1","nodeType":"VariableDeclaration","scope":240,"src":"3354:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3354:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3353:14:1"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"3390:0:1"},"scope":467,"src":"3334:103:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"3791:419:1","statements":[{"condition":{"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3805:23:1","subExpression":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3814:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":250,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"3820:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":248,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3806:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3806:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"3801:403:1","trueBody":{"id":280,"nodeType":"Block","src":"3830:374:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"arguments":[{"id":263,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"4017:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4009:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":261,"name":"uint160","nodeType":"ElementaryTypeName","src":"4009:7:1","typeDescriptions":{}}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4009:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"hexValue":"3230","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4027:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"expression":{"id":259,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"3989:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1617_$","typeString":"type(library Strings)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"3989:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3989:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4056:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"4129:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"4121:7:1","typeDescriptions":{}}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4121:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4136:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":268,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4101:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1617_$","typeString":"type(library Strings)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"4101:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4101:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":256,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3896:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3896:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:265:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":254,"name":"string","nodeType":"ElementaryTypeName","src":"3868:6:1","typeDescriptions":{}}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3868:311:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":253,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3844:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3844:349:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"ExpressionStatement","src":"3844:349:1"}]}}]},"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"3443:270:1","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3727:10:1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"role","nameLocation":"3746:4:1","nodeType":"VariableDeclaration","scope":283,"src":"3738:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3738:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"account","nameLocation":"3760:7:1","nodeType":"VariableDeclaration","scope":283,"src":"3752:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3737:31:1"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[],"src":"3791:0:1"},"scope":467,"src":"3718:492:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[640],"body":{"id":297,"nodeType":"Block","src":"4474:46:1","statements":[{"expression":{"expression":{"baseExpression":{"id":292,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"4491:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$167_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":294,"indexExpression":{"id":293,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"4498:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4491:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$167_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":166,"src":"4491:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":291,"id":296,"nodeType":"Return","src":"4484:29:1"}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"4216:170:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":298,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4400:12:1","nodeType":"FunctionDefinition","overrides":{"id":288,"nodeType":"OverrideSpecifier","overrides":[],"src":"4447:8:1"},"parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":298,"src":"4413:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4412:14:1"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":298,"src":"4465:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4465:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4464:9:1"},"scope":467,"src":"4391:129:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[648],"body":{"id":317,"nodeType":"Block","src":"4873:42:1","statements":[{"expression":{"arguments":[{"id":313,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4894:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":314,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4900:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":312,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"4883:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4883:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"ExpressionStatement","src":"4883:25:1"}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"4526:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":318,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":308,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"4866:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":307,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"4853:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4853:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":310,"kind":"modifierInvocation","modifierName":{"id":306,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":186,"src":"4844:8:1"},"nodeType":"ModifierInvocation","src":"4844:28:1"}],"name":"grantRole","nameLocation":"4779:9:1","nodeType":"FunctionDefinition","overrides":{"id":305,"nodeType":"OverrideSpecifier","overrides":[],"src":"4835:8:1"},"parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"role","nameLocation":"4797:4:1","nodeType":"VariableDeclaration","scope":318,"src":"4789:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4789:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"account","nameLocation":"4811:7:1","nodeType":"VariableDeclaration","scope":318,"src":"4803:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"4803:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4788:31:1"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"4873:0:1"},"scope":467,"src":"4770:145:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[656],"body":{"id":337,"nodeType":"Block","src":"5253:43:1","statements":[{"expression":{"arguments":[{"id":333,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"5275:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":334,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5281:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":332,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"5263:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5263:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":336,"nodeType":"ExpressionStatement","src":"5263:26:1"}]},"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"4921:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":338,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":328,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"5246:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":327,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"5233:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5233:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":330,"kind":"modifierInvocation","modifierName":{"id":326,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":186,"src":"5224:8:1"},"nodeType":"ModifierInvocation","src":"5224:28:1"}],"name":"revokeRole","nameLocation":"5158:10:1","nodeType":"FunctionDefinition","overrides":{"id":325,"nodeType":"OverrideSpecifier","overrides":[],"src":"5215:8:1"},"parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"role","nameLocation":"5177:4:1","nodeType":"VariableDeclaration","scope":338,"src":"5169:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"account","nameLocation":"5191:7:1","nodeType":"VariableDeclaration","scope":338,"src":"5183:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"5183:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5168:31:1"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[],"src":"5253:0:1"},"scope":467,"src":"5149:147:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[664],"body":{"id":360,"nodeType":"Block","src":"5864:137:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"5882:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"5893:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5893:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5882:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5907:49:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5874:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5874:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"5874:83:1"},{"expression":{"arguments":[{"id":356,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5980:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":357,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"5986:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":355,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"5968:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5968:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"5968:26:1"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"5302:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":361,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5796:12:1","nodeType":"FunctionDefinition","overrides":{"id":345,"nodeType":"OverrideSpecifier","overrides":[],"src":"5855:8:1"},"parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"role","nameLocation":"5817:4:1","nodeType":"VariableDeclaration","scope":361,"src":"5809:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5809:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"account","nameLocation":"5831:7:1","nodeType":"VariableDeclaration","scope":361,"src":"5823:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"5823:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5808:31:1"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"5864:0:1"},"scope":467,"src":"5787:214:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":374,"nodeType":"Block","src":"6708:42:1","statements":[{"expression":{"arguments":[{"id":370,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"6729:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":371,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"6735:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":369,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"6718:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6718:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"ExpressionStatement","src":"6718:25:1"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"6007:628:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":375,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6649:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"6668:4:1","nodeType":"VariableDeclaration","scope":375,"src":"6660:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6660:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"6682:7:1","nodeType":"VariableDeclaration","scope":375,"src":"6674:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"6674:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6659:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"6708:0:1"},"scope":467,"src":"6640:110:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"6948:174:1","statements":[{"assignments":[384],"declarations":[{"constant":false,"id":384,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6966:17:1","nodeType":"VariableDeclaration","scope":402,"src":"6958:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6958:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":388,"initialValue":{"arguments":[{"id":386,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"6999:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":385,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"6986:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6986:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6958:46:1"},{"expression":{"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":389,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"7014:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$167_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":391,"indexExpression":{"id":390,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"7021:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7014:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$167_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":166,"src":"7014:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":393,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"7039:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7014:34:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":395,"nodeType":"ExpressionStatement","src":"7014:34:1"},{"eventCall":{"arguments":[{"id":397,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"7080:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":398,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7086:17:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":399,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"7105:9:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":396,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"7063:16:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7063:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"EmitStatement","src":"7058:57:1"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"6756:114:1","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6884:13:1","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"role","nameLocation":"6906:4:1","nodeType":"VariableDeclaration","scope":403,"src":"6898:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6898:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"adminRole","nameLocation":"6920:9:1","nodeType":"VariableDeclaration","scope":403,"src":"6912:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6912:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6897:33:1"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"6948:0:1"},"scope":467,"src":"6875:247:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":434,"nodeType":"Block","src":"7312:165:1","statements":[{"condition":{"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7326:23:1","subExpression":{"arguments":[{"id":412,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"7335:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":413,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"7341:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":411,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"7327:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7327:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":433,"nodeType":"IfStatement","src":"7322:149:1","trueBody":{"id":432,"nodeType":"Block","src":"7351:120:1","statements":[{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":416,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"7365:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$167_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":418,"indexExpression":{"id":417,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"7372:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7365:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$167_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":164,"src":"7365:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":421,"indexExpression":{"id":420,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"7386:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7365:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7397:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7365:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":424,"nodeType":"ExpressionStatement","src":"7365:36:1"},{"eventCall":{"arguments":[{"id":426,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"7432:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":427,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"7438:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":428,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"7447:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7447:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":425,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"7420:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7420:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"EmitStatement","src":"7415:45:1"}]}}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"7128:111:1","text":" @dev Grants `role` to `account`.\n Internal function without access restriction."},"id":435,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7253:10:1","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"role","nameLocation":"7272:4:1","nodeType":"VariableDeclaration","scope":435,"src":"7264:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7264:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"account","nameLocation":"7286:7:1","nodeType":"VariableDeclaration","scope":435,"src":"7278:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"7278:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7263:31:1"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"7312:0:1"},"scope":467,"src":"7244:233:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"7671:165:1","statements":[{"condition":{"arguments":[{"id":444,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7693:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":445,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7699:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":443,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"7685:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7685:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":464,"nodeType":"IfStatement","src":"7681:149:1","trueBody":{"id":463,"nodeType":"Block","src":"7709:121:1","statements":[{"expression":{"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":447,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"7723:6:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$167_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":449,"indexExpression":{"id":448,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7730:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7723:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$167_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":164,"src":"7723:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":452,"indexExpression":{"id":451,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7744:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7723:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7755:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7723:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":455,"nodeType":"ExpressionStatement","src":"7723:37:1"},{"eventCall":{"arguments":[{"id":457,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7791:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":458,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7797:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":459,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"7806:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7806:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"7779:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7779:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"EmitStatement","src":"7774:45:1"}]}}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"7483:114:1","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction."},"id":466,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7611:11:1","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"role","nameLocation":"7631:4:1","nodeType":"VariableDeclaration","scope":466,"src":"7623:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7623:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"account","nameLocation":"7645:7:1","nodeType":"VariableDeclaration","scope":466,"src":"7637:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"7637:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7622:31:1"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"7671:0:1"},"scope":467,"src":"7602:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":468,"src":"1806:6032:1","usedErrors":[]}],"src":"108:7731:1"},"id":1},"openzeppelin-solidity/contracts/access/AccessControlEnumerable.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/access/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[467],"AccessControlEnumerable":[592],"Context":[1414],"ERC165":[1641],"EnumerableSet":[2252],"IAccessControl":[665],"IAccessControlEnumerable":[690],"IERC165":[1653],"Strings":[1617]},"id":593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":469,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/access/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":593,"sourceUnit":691,"src":"143:40:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/access/AccessControl.sol","file":"./AccessControl.sol","id":471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":593,"sourceUnit":468,"src":"184:29:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/utils/structs/EnumerableSet.sol","file":"../utils/structs/EnumerableSet.sol","id":472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":593,"sourceUnit":2253,"src":"214:44:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":474,"name":"IAccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":690,"src":"400:24:2"},"id":475,"nodeType":"InheritanceSpecifier","src":"400:24:2"},{"baseName":{"id":476,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":467,"src":"426:13:2"},"id":477,"nodeType":"InheritanceSpecifier","src":"426:13:2"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"260:94:2","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":592,"linearizedBaseContracts":[592,467,1641,1653,690,665,1414],"name":"AccessControlEnumerable","nameLocation":"373:23:2","nodeType":"ContractDefinition","nodes":[{"id":481,"libraryName":{"id":478,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":2252,"src":"452:13:2"},"nodeType":"UsingForDirective","src":"446:49:2","typeName":{"id":480,"nodeType":"UserDefinedTypeName","pathNode":{"id":479,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"470:24:2"},"referencedDeclaration":1965,"src":"470:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":486,"mutability":"mutable","name":"_roleMembers","nameLocation":"554:12:2","nodeType":"VariableDeclaration","scope":592,"src":"501:65:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1965_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":485,"keyType":{"id":482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"501:44:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1965_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueType":{"id":484,"nodeType":"UserDefinedTypeName","pathNode":{"id":483,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"520:24:2"},"referencedDeclaration":1965,"src":"520:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[208],"body":{"id":507,"nodeType":"Block","src":"725:121:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":495,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"742:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":497,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"762:24:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$690_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$690_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$690","typeString":"type(contract IAccessControlEnumerable)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"757:42:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:57:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":503,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"827:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":501,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"803:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$592_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":208,"src":"803:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"803:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:97:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":494,"id":506,"nodeType":"Return","src":"735:104:2"}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"573:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":508,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"643:17:2","nodeType":"FunctionDefinition","overrides":{"id":491,"nodeType":"OverrideSpecifier","overrides":[],"src":"701:8:2"},"parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"interfaceId","nameLocation":"668:11:2","nodeType":"VariableDeclaration","scope":508,"src":"661:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":488,"name":"bytes4","nodeType":"ElementaryTypeName","src":"661:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"660:20:2"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"719:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":492,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:2"},"scope":592,"src":"634:212:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[681],"body":{"id":526,"nodeType":"Block","src":"1530:52:2","statements":[{"expression":{"arguments":[{"id":523,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"1569:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":519,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1547:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1965_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":521,"indexExpression":{"id":520,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"1560:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2088,"src":"1547:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1965_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$1965_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1547:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":518,"id":525,"nodeType":"Return","src":"1540:35:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"852:574:2","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":527,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1440:13:2","nodeType":"FunctionDefinition","overrides":{"id":515,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:2"},"parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"role","nameLocation":"1462:4:2","nodeType":"VariableDeclaration","scope":527,"src":"1454:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"index","nameLocation":"1476:5:2","nodeType":"VariableDeclaration","scope":527,"src":"1468:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:29:2"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":527,"src":"1521:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:9:2"},"scope":592,"src":"1431:151:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[689],"body":{"id":542,"nodeType":"Block","src":"1839:51:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":536,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1856:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1965_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":538,"indexExpression":{"id":537,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1869:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2061,"src":"1856:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1965_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$1965_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1856:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":535,"id":541,"nodeType":"Return","src":"1849:34:2"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"1588:157:2","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":543,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1759:18:2","nodeType":"FunctionDefinition","overrides":{"id":532,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:2"},"parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"role","nameLocation":"1786:4:2","nodeType":"VariableDeclaration","scope":543,"src":"1778:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1777:14:2"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"1830:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:9:2"},"scope":592,"src":"1750:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[435],"body":{"id":566,"nodeType":"Block","src":"2055:89:2","statements":[{"expression":{"arguments":[{"id":555,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2082:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":556,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2088:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":552,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2065:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$592_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":435,"src":"2065:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2065:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"ExpressionStatement","src":"2065:31:2"},{"expression":{"arguments":[{"id":563,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2129:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":559,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"2106:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1965_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":561,"indexExpression":{"id":560,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2119:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2106:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1992,"src":"2106:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1965_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1965_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2106:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":565,"nodeType":"ExpressionStatement","src":"2106:31:2"}]},"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"1896:77:2","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":567,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"1987:10:2","nodeType":"FunctionDefinition","overrides":{"id":550,"nodeType":"OverrideSpecifier","overrides":[],"src":"2046:8:2"},"parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"role","nameLocation":"2006:4:2","nodeType":"VariableDeclaration","scope":567,"src":"1998:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"account","nameLocation":"2020:7:2","nodeType":"VariableDeclaration","scope":567,"src":"2012:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:31:2"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[],"src":"2055:0:2"},"scope":592,"src":"1978:166:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[466],"body":{"id":590,"nodeType":"Block","src":"2311:93:2","statements":[{"expression":{"arguments":[{"id":579,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"2339:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":580,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2345:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":576,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$592_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":466,"src":"2321:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"ExpressionStatement","src":"2321:32:2"},{"expression":{"arguments":[{"id":587,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2389:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":583,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"2363:12:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1965_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":585,"indexExpression":{"id":584,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"2376:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2363:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2019,"src":"2363:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1965_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1965_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2363:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":589,"nodeType":"ExpressionStatement","src":"2363:34:2"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"2150:78:2","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":591,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2242:11:2","nodeType":"FunctionDefinition","overrides":{"id":574,"nodeType":"OverrideSpecifier","overrides":[],"src":"2302:8:2"},"parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"role","nameLocation":"2262:4:2","nodeType":"VariableDeclaration","scope":591,"src":"2254:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"account","nameLocation":"2276:7:2","nodeType":"VariableDeclaration","scope":591,"src":"2268:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:31:2"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[],"src":"2311:0:2"},"scope":592,"src":"2233:171:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":593,"src":"355:2051:2","usedErrors":[]}],"src":"118:2289:2"},"id":2},"openzeppelin-solidity/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[665]},"id":666,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":594,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"119:89:3","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":665,"linearizedBaseContracts":[665],"name":"IAccessControl","nameLocation":"219:14:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"240:292:3","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":604,"name":"RoleAdminChanged","nameLocation":"543:16:3","nodeType":"EventDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:3","nodeType":"VariableDeclaration","scope":604,"src":"560:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":600,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:3","nodeType":"VariableDeclaration","scope":604,"src":"582:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":602,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:3","nodeType":"VariableDeclaration","scope":604,"src":"617:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:3"},"src":"537:110:3"},{"anonymous":false,"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"653:212:3","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":613,"name":"RoleGranted","nameLocation":"876:11:3","nodeType":"EventDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:3","nodeType":"VariableDeclaration","scope":613,"src":"888:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":609,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:3","nodeType":"VariableDeclaration","scope":613,"src":"910:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:3","nodeType":"VariableDeclaration","scope":613,"src":"935:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:3"},"src":"870:89:3"},{"anonymous":false,"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"965:275:3","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":622,"name":"RoleRevoked","nameLocation":"1251:11:3","nodeType":"EventDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:3","nodeType":"VariableDeclaration","scope":622,"src":"1263:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":618,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:3","nodeType":"VariableDeclaration","scope":622,"src":"1285:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:3","nodeType":"VariableDeclaration","scope":622,"src":"1310:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:3"},"src":"1245:89:3"},{"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"1340:76:3","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":632,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:3","nodeType":"FunctionDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"role","nameLocation":"1446:4:3","nodeType":"VariableDeclaration","scope":632,"src":"1438:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"account","nameLocation":"1460:7:3","nodeType":"VariableDeclaration","scope":632,"src":"1452:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:3"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":632,"src":"1492:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":629,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:3"},"scope":665,"src":"1421:77:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"1504:184:3","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":640,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:3","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"role","nameLocation":"1723:4:3","nodeType":"VariableDeclaration","scope":640,"src":"1715:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:3"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":640,"src":"1752:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:3"},"scope":665,"src":"1693:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"1767:239:3","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":648,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:3","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"role","nameLocation":"2038:4:3","nodeType":"VariableDeclaration","scope":648,"src":"2030:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"account","nameLocation":"2052:7:3","nodeType":"VariableDeclaration","scope":648,"src":"2044:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"2069:0:3"},"scope":665,"src":"2011:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"2076:223:3","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":656,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:3","nodeType":"FunctionDefinition","parameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"role","nameLocation":"2332:4:3","nodeType":"VariableDeclaration","scope":656,"src":"2324:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"account","nameLocation":"2346:7:3","nodeType":"VariableDeclaration","scope":656,"src":"2338:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:3"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[],"src":"2363:0:3"},"scope":665,"src":"2304:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"2370:480:3","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":664,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:3","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"role","nameLocation":"2885:4:3","nodeType":"VariableDeclaration","scope":664,"src":"2877:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"account","nameLocation":"2899:7:3","nodeType":"VariableDeclaration","scope":664,"src":"2891:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:3"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"2916:0:3"},"scope":665,"src":"2855:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":666,"src":"209:2710:3","usedErrors":[]}],"src":"94:2826:3"},"id":3},"openzeppelin-solidity/contracts/access/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/access/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[665],"IAccessControlEnumerable":[690]},"id":691,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":667,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:4"},{"absolutePath":"openzeppelin-solidity/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":691,"sourceUnit":666,"src":"129:30:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":670,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":665,"src":"299:14:4"},"id":671,"nodeType":"InheritanceSpecifier","src":"299:14:4"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"161:99:4","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":690,"linearizedBaseContracts":[690,665],"name":"IAccessControlEnumerable","nameLocation":"271:24:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"320:574:4","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":681,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"908:13:4","nodeType":"FunctionDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"role","nameLocation":"930:4:4","nodeType":"VariableDeclaration","scope":681,"src":"922:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"index","nameLocation":"944:5:4","nodeType":"VariableDeclaration","scope":681,"src":"936:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:29:4"},"returnParameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"974:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:9:4"},"scope":690,"src":"899:84:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"989:157:4","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":689,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1160:18:4","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"role","nameLocation":"1187:4:4","nodeType":"VariableDeclaration","scope":689,"src":"1179:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1178:14:4"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":689,"src":"1216:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:9:4"},"scope":690,"src":"1151:74:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":691,"src":"261:966:4","usedErrors":[]}],"src":"104:1124:4"},"id":4},"openzeppelin-solidity/contracts/access/Ownable.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1414],"Ownable":[795]},"id":796,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":692,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:5"},{"absolutePath":"openzeppelin-solidity/contracts/utils/Context.sol","file":"../utils/Context.sol","id":693,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":796,"sourceUnit":1415,"src":"112:30:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":695,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1414,"src":"668:7:5"},"id":696,"nodeType":"InheritanceSpecifier","src":"668:7:5"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"144:494:5","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":795,"linearizedBaseContracts":[795,1414],"name":"Ownable","nameLocation":"657:7:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":698,"mutability":"mutable","name":"_owner","nameLocation":"698:6:5","nodeType":"VariableDeclaration","scope":795,"src":"682:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":704,"name":"OwnershipTransferred","nameLocation":"717:20:5","nodeType":"EventDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"754:13:5","nodeType":"VariableDeclaration","scope":704,"src":"738:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"785:8:5","nodeType":"VariableDeclaration","scope":704,"src":"769:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:57:5"},"src":"711:84:5"},{"body":{"id":713,"nodeType":"Block","src":"911:49:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":709,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"940:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"940:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"921:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"921:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"ExpressionStatement","src":"921:32:5"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"801:91:5","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":714,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"908:2:5"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[],"src":"911:0:5"},"scope":795,"src":"897:63:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"1091:30:5","statements":[{"expression":{"id":720,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"1108:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":719,"id":721,"nodeType":"Return","src":"1101:13:5"}]},"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"966:65:5","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":723,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1045:5:5","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"1050:2:5"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"1082:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1081:9:5"},"scope":795,"src":"1036:85:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":736,"nodeType":"Block","src":"1230:96:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"1248:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1248:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":729,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1259:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1259:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1248:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1273:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1240:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"1240:68:5"},{"id":735,"nodeType":"PlaceholderStatement","src":"1318:1:5"}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"1127:77:5","text":" @dev Throws if called by any account other than the owner."},"id":737,"name":"onlyOwner","nameLocation":"1218:9:5","nodeType":"ModifierDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[],"src":"1227:2:5"},"src":"1209:117:5","virtual":false,"visibility":"internal"},{"body":{"id":750,"nodeType":"Block","src":"1722:47:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1751:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:5","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1751:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"1732:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1732:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"ExpressionStatement","src":"1732:30:5"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"1332:331:5","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":751,"implemented":true,"kind":"function","modifiers":[{"id":741,"kind":"modifierInvocation","modifierName":{"id":740,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":737,"src":"1712:9:5"},"nodeType":"ModifierInvocation","src":"1712:9:5"}],"name":"renounceOwnership","nameLocation":"1677:17:5","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[],"src":"1694:2:5"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"1722:0:5"},"scope":795,"src":"1668:101:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":773,"nodeType":"Block","src":"1988:128:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":760,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2006:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:5","typeDescriptions":{}}},"id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2030:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":759,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1998:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1998:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"1998:73:5"},{"expression":{"arguments":[{"id":770,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2100:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":769,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"2081:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2081:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"2081:28:5"}]},"documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"1775:138:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":774,"implemented":true,"kind":"function","modifiers":[{"id":757,"kind":"modifierInvocation","modifierName":{"id":756,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":737,"src":"1978:9:5"},"nodeType":"ModifierInvocation","src":"1978:9:5"}],"name":"transferOwnership","nameLocation":"1927:17:5","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":754,"mutability":"mutable","name":"newOwner","nameLocation":"1953:8:5","nodeType":"VariableDeclaration","scope":774,"src":"1945:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1944:18:5"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"1988:0:5"},"scope":795,"src":"1918:198:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":793,"nodeType":"Block","src":"2333:124:5","statements":[{"assignments":[781],"declarations":[{"constant":false,"id":781,"mutability":"mutable","name":"oldOwner","nameLocation":"2351:8:5","nodeType":"VariableDeclaration","scope":793,"src":"2343:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":783,"initialValue":{"id":782,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"2362:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2343:25:5"},{"expression":{"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":784,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"2378:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":785,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2387:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":787,"nodeType":"ExpressionStatement","src":"2378:17:5"},{"eventCall":{"arguments":[{"id":789,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"2431:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2441:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":788,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"2410:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2410:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"EmitStatement","src":"2405:45:5"}]},"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"2122:143:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":794,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2279:18:5","nodeType":"FunctionDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"newOwner","nameLocation":"2306:8:5","nodeType":"VariableDeclaration","scope":794,"src":"2298:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2297:18:5"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[],"src":"2333:0:5"},"scope":795,"src":"2270:187:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":796,"src":"639:1820:5","usedErrors":[]}],"src":"87:2373:5"},"id":5},"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[873]},"id":874,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":797,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"131:70:6","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":873,"linearizedBaseContracts":[873],"name":"IERC20","nameLocation":"212:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"225:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":807,"name":"Transfer","nameLocation":"394:8:6","nodeType":"EventDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:6","nodeType":"VariableDeclaration","scope":807,"src":"403:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:6","nodeType":"VariableDeclaration","scope":807,"src":"425:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":805,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:6","nodeType":"VariableDeclaration","scope":807,"src":"445:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:6"},"src":"388:72:6"},{"anonymous":false,"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"466:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":816,"name":"Approval","nameLocation":"625:8:6","nodeType":"EventDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:6","nodeType":"VariableDeclaration","scope":816,"src":"634:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:6","nodeType":"VariableDeclaration","scope":816,"src":"657:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:6","nodeType":"VariableDeclaration","scope":816,"src":"682:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:6"},"src":"619:78:6"},{"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"703:66:6","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":822,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:6","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"794:2:6"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"820:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:6"},"scope":873,"src":"774:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"835:72:6","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":830,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":830,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":873,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"986:202:6","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":840,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:6","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"to","nameLocation":"1219:2:6","nodeType":"VariableDeclaration","scope":840,"src":"1211:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"amount","nameLocation":"1231:6:6","nodeType":"VariableDeclaration","scope":840,"src":"1223:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:6"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":840,"src":"1257:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":837,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:6"},"scope":873,"src":"1193:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"1269:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":850,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:6","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"owner","nameLocation":"1565:5:6","nodeType":"VariableDeclaration","scope":850,"src":"1557:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"spender","nameLocation":"1580:7:6","nodeType":"VariableDeclaration","scope":850,"src":"1572:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:6"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":850,"src":"1612:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:6"},"scope":873,"src":"1538:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"1627:642:6","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":860,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:6","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"spender","nameLocation":"2299:7:6","nodeType":"VariableDeclaration","scope":860,"src":"2291:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"amount","nameLocation":"2316:6:6","nodeType":"VariableDeclaration","scope":860,"src":"2308:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:6"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":860,"src":"2342:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:6"},"scope":873,"src":"2274:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"2354:287:6","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":872,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:6","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"from","nameLocation":"2685:4:6","nodeType":"VariableDeclaration","scope":872,"src":"2677:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"to","nameLocation":"2707:2:6","nodeType":"VariableDeclaration","scope":872,"src":"2699:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"amount","nameLocation":"2727:6:6","nodeType":"VariableDeclaration","scope":872,"src":"2719:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:6"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":872,"src":"2758:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":869,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:6"},"scope":873,"src":"2646:118:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":874,"src":"202:2564:6","usedErrors":[]}],"src":"106:2661:6"},"id":6},"openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1392],"IERC20":[873],"SafeERC20":[1097]},"id":1098,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":875,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:7"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":876,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1098,"sourceUnit":874,"src":"125:23:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":877,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1098,"sourceUnit":1393,"src":"149:36:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"187:457:7","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1097,"linearizedBaseContracts":[1097],"name":"SafeERC20","nameLocation":"653:9:7","nodeType":"ContractDefinition","nodes":[{"id":881,"libraryName":{"id":879,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1392,"src":"675:7:7"},"nodeType":"UsingForDirective","src":"669:26:7","typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"687:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":903,"nodeType":"Block","src":"803:103:7","statements":[{"expression":{"arguments":[{"id":892,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"833:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":895,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"863:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":840,"src":"863:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"863:23:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":898,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"888:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"892:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":893,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"840:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"840:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"840:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":891,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"813:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$873_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"813:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"ExpressionStatement","src":"813:86:7"}]},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"710:12:7","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"token","nameLocation":"739:5:7","nodeType":"VariableDeclaration","scope":904,"src":"732:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},"typeName":{"id":883,"nodeType":"UserDefinedTypeName","pathNode":{"id":882,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":873,"src":"732:6:7"},"referencedDeclaration":873,"src":"732:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"to","nameLocation":"762:2:7","nodeType":"VariableDeclaration","scope":904,"src":"754:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"754:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"value","nameLocation":"782:5:7","nodeType":"VariableDeclaration","scope":904,"src":"774:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"774:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"722:71:7"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[],"src":"803:0:7"},"scope":1097,"src":"701:205:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":929,"nodeType":"Block","src":"1040:113:7","statements":[{"expression":{"arguments":[{"id":917,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1070:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":920,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"1100:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":872,"src":"1100:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1100:27:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":923,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"1129:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"1135:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"1139:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":918,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1077:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1077:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1077:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":916,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1050:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$873_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1050:96:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"1050:96:7"}]},"id":930,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"921:16:7","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"token","nameLocation":"954:5:7","nodeType":"VariableDeclaration","scope":930,"src":"947:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},"typeName":{"id":906,"nodeType":"UserDefinedTypeName","pathNode":{"id":905,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":873,"src":"947:6:7"},"referencedDeclaration":873,"src":"947:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"from","nameLocation":"977:4:7","nodeType":"VariableDeclaration","scope":930,"src":"969:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"to","nameLocation":"999:2:7","nodeType":"VariableDeclaration","scope":930,"src":"991:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"value","nameLocation":"1019:5:7","nodeType":"VariableDeclaration","scope":930,"src":"1011:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"937:93:7"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[],"src":"1040:0:7"},"scope":1097,"src":"912:241:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"1519:497:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"1768:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1768:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1767:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":950,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1808:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1097","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1097","typeString":"library SafeERC20"}],"id":949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1800:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"1800:7:7","typeDescriptions":{}}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1800:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":952,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"1815:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":946,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1784:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":850,"src":"1784:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1784:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1827:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1784:44:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1783:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1767:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1843:56:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":941,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1746:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1746:163:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"ExpressionStatement","src":"1746:163:7"},{"expression":{"arguments":[{"id":962,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1939:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":965,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"1969:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":860,"src":"1969:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1969:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":968,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"1993:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2002:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":963,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1946:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1946:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1946:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":961,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1919:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$873_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1919:90:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"1919:90:7"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"1159:249:7","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1422:11:7","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"token","nameLocation":"1450:5:7","nodeType":"VariableDeclaration","scope":974,"src":"1443:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},"typeName":{"id":933,"nodeType":"UserDefinedTypeName","pathNode":{"id":932,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":873,"src":"1443:6:7"},"referencedDeclaration":873,"src":"1443:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"spender","nameLocation":"1473:7:7","nodeType":"VariableDeclaration","scope":974,"src":"1465:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"value","nameLocation":"1498:5:7","nodeType":"VariableDeclaration","scope":974,"src":"1490:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1490:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1433:76:7"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"1519:0:7"},"scope":1097,"src":"1413:603:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1009,"nodeType":"Block","src":"2138:194:7","statements":[{"assignments":[985],"declarations":[{"constant":false,"id":985,"mutability":"mutable","name":"newAllowance","nameLocation":"2156:12:7","nodeType":"VariableDeclaration","scope":1009,"src":"2148:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"2148:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":996,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":990,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2195:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1097","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1097","typeString":"library SafeERC20"}],"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2187:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"2187:7:7","typeDescriptions":{}}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2187:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":992,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"2202:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":986,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"2171:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":850,"src":"2171:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2171:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"2213:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2171:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2148:70:7"},{"expression":{"arguments":[{"id":998,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"2248:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1001,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"2278:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":860,"src":"2278:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2278:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1004,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"2302:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"2311:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":999,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2255:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2255:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2255:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":997,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2228:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$873_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2228:97:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"2228:97:7"}]},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2031:21:7","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"token","nameLocation":"2069:5:7","nodeType":"VariableDeclaration","scope":1010,"src":"2062:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},"typeName":{"id":976,"nodeType":"UserDefinedTypeName","pathNode":{"id":975,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":873,"src":"2062:6:7"},"referencedDeclaration":873,"src":"2062:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"spender","nameLocation":"2092:7:7","nodeType":"VariableDeclaration","scope":1010,"src":"2084:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"value","nameLocation":"2117:5:7","nodeType":"VariableDeclaration","scope":1010,"src":"2109:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2109:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2052:76:7"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"2138:0:7"},"scope":1097,"src":"2022:310:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1057,"nodeType":"Block","src":"2454:370:7","statements":[{"id":1056,"nodeType":"UncheckedBlock","src":"2464:354:7","statements":[{"assignments":[1021],"declarations":[{"constant":false,"id":1021,"mutability":"mutable","name":"oldAllowance","nameLocation":"2496:12:7","nodeType":"VariableDeclaration","scope":1056,"src":"2488:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"2488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1030,"initialValue":{"arguments":[{"arguments":[{"id":1026,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2535:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1097","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1097","typeString":"library SafeERC20"}],"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2527:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"2527:7:7","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2527:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1028,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2542:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1022,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"2511:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":850,"src":"2511:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2511:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2488:62:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1032,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"2572:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"2588:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2572:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2595:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2564:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2564:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"2564:75:7"},{"assignments":[1039],"declarations":[{"constant":false,"id":1039,"mutability":"mutable","name":"newAllowance","nameLocation":"2661:12:7","nodeType":"VariableDeclaration","scope":1056,"src":"2653:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"2653:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1043,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1040,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"2676:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"2691:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2676:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2653:43:7"},{"expression":{"arguments":[{"id":1045,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"2730:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1048,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"2760:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":860,"src":"2760:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2760:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1051,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2784:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1052,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2793:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1046,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2737:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2737:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2737:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1044,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2710:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$873_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2710:97:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"ExpressionStatement","src":"2710:97:7"}]}]},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2347:21:7","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"token","nameLocation":"2385:5:7","nodeType":"VariableDeclaration","scope":1058,"src":"2378:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},"typeName":{"id":1012,"nodeType":"UserDefinedTypeName","pathNode":{"id":1011,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":873,"src":"2378:6:7"},"referencedDeclaration":873,"src":"2378:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1015,"mutability":"mutable","name":"spender","nameLocation":"2408:7:7","nodeType":"VariableDeclaration","scope":1058,"src":"2400:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"2400:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"value","nameLocation":"2433:5:7","nodeType":"VariableDeclaration","scope":1058,"src":"2425:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"2425:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2368:76:7"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"2454:0:7"},"scope":1097,"src":"2338:486:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"3277:636:7","statements":[{"assignments":[1068],"declarations":[{"constant":false,"id":1068,"mutability":"mutable","name":"returndata","nameLocation":"3639:10:7","nodeType":"VariableDeclaration","scope":1095,"src":"3626:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1067,"name":"bytes","nodeType":"ElementaryTypeName","src":"3626:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1077,"initialValue":{"arguments":[{"id":1074,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"3680:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3686:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1071,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"3660:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:7","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3652:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1186,"src":"3652:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3652:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3626:95:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1078,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"3735:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3735:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3755:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3735:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1094,"nodeType":"IfStatement","src":"3731:176:7","trueBody":{"id":1093,"nodeType":"Block","src":"3758:149:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1085,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"3830:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3843:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1086,"name":"bool","nodeType":"ElementaryTypeName","src":"3843:4:7","typeDescriptions":{}}}],"id":1088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3842:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1083,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3819:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"3819:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3819:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3851:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3811:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3811:85:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1092,"nodeType":"ExpressionStatement","src":"3811:85:7"}]}}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"2830:372:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3216:19:7","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"token","nameLocation":"3243:5:7","nodeType":"VariableDeclaration","scope":1096,"src":"3236:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"},"typeName":{"id":1061,"nodeType":"UserDefinedTypeName","pathNode":{"id":1060,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":873,"src":"3236:6:7"},"referencedDeclaration":873,"src":"3236:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$873","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"data","nameLocation":"3263:4:7","nodeType":"VariableDeclaration","scope":1096,"src":"3250:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1063,"name":"bytes","nodeType":"ElementaryTypeName","src":"3250:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3235:33:7"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"3277:0:7"},"scope":1097,"src":"3207:706:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1098,"src":"645:3270:7","usedErrors":[]}],"src":"100:3816:7"},"id":7},"openzeppelin-solidity/contracts/utils/Address.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/utils/Address.sol","exportedSymbols":{"Address":[1392]},"id":1393,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1099,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1392,"linearizedBaseContracts":[1392],"name":"Address","nameLocation":"202:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1114,"nodeType":"Block","src":"1241:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"1465:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1107,"id":1113,"nodeType":"Return","src":"1458:30:8"}]},"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"216:954:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1115,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:8","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"account","nameLocation":"1203:7:8","nodeType":"VariableDeclaration","scope":1115,"src":"1195:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:8"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"1235:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1105,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:8"},"scope":1392,"src":"1175:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1148,"nodeType":"Block","src":"2483:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1126,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1392","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1392","typeString":"library Address"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:8","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1129,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"2526:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"ExpressionStatement","src":"2493:73:8"},{"assignments":[1135,null],"declarations":[{"constant":false,"id":1135,"mutability":"mutable","name":"success","nameLocation":"2583:7:8","nodeType":"VariableDeclaration","scope":1148,"src":"2578:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1134,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1142,"initialValue":{"arguments":[{"hexValue":"","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1136,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"2596:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1138,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"2618:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:8"},{"expression":{"arguments":[{"id":1144,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"2647:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1147,"nodeType":"ExpressionStatement","src":"2639:78:8"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"1501:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1149,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:8","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:8","nodeType":"VariableDeclaration","scope":1149,"src":"2431:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"amount","nameLocation":"2466:6:8","nodeType":"VariableDeclaration","scope":1149,"src":"2458:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:8"},"returnParameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"2483:0:8"},"scope":1392,"src":"2412:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1165,"nodeType":"Block","src":"3555:84:8","statements":[{"expression":{"arguments":[{"id":1160,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3585:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1161,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"3593:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1159,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1166,1186],"referencedDeclaration":1186,"src":"3572:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1158,"id":1164,"nodeType":"Return","src":"3565:67:8"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"2730:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1166,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:8","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"target","nameLocation":"3496:6:8","nodeType":"VariableDeclaration","scope":1166,"src":"3488:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"data","nameLocation":"3517:4:8","nodeType":"VariableDeclaration","scope":1166,"src":"3504:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1153,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:8"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1166,"src":"3541:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1156,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:8"},"scope":1392,"src":"3466:173:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1185,"nodeType":"Block","src":"4008:76:8","statements":[{"expression":{"arguments":[{"id":1179,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"4047:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"4055:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1182,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4064:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1178,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1206,1256],"referencedDeclaration":1256,"src":"4025:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1177,"id":1184,"nodeType":"Return","src":"4018:59:8"}]},"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"3645:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1186,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:8","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"target","nameLocation":"3900:6:8","nodeType":"VariableDeclaration","scope":1186,"src":"3892:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"data","nameLocation":"3929:4:8","nodeType":"VariableDeclaration","scope":1186,"src":"3916:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1170,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:8","nodeType":"VariableDeclaration","scope":1186,"src":"3943:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1172,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:8"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1186,"src":"3994:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:8"},"scope":1392,"src":"3861:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"4589:111:8","statements":[{"expression":{"arguments":[{"id":1199,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"4628:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1200,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4636:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"4642:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1198,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1206,1256],"referencedDeclaration":1256,"src":"4606:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1197,"id":1204,"nodeType":"Return","src":"4599:94:8"}]},"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"4090:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:8","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"target","nameLocation":"4494:6:8","nodeType":"VariableDeclaration","scope":1206,"src":"4486:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"data","nameLocation":"4523:4:8","nodeType":"VariableDeclaration","scope":1206,"src":"4510:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1190,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"value","nameLocation":"4545:5:8","nodeType":"VariableDeclaration","scope":1206,"src":"4537:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:8"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"4575:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1195,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:8"},"scope":1392,"src":"4446:254:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1255,"nodeType":"Block","src":"5127:320:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1223,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1392","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1392","typeString":"library Address"}],"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:8","typeDescriptions":{}}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"5170:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"ExpressionStatement","src":"5137:81:8"},{"expression":{"arguments":[{"arguments":[{"id":1233,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"5247:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1232,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"5236:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1237,"nodeType":"ExpressionStatement","src":"5228:60:8"},{"assignments":[1239,1241],"declarations":[{"constant":false,"id":1239,"mutability":"mutable","name":"success","nameLocation":"5305:7:8","nodeType":"VariableDeclaration","scope":1255,"src":"5300:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1238,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:8","nodeType":"VariableDeclaration","scope":1255,"src":"5314:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1240,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1248,"initialValue":{"arguments":[{"id":1246,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"5367:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1242,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"5341:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"5360:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:8"},{"expression":{"arguments":[{"id":1250,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"5406:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1251,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"5415:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1252,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"5427:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1249,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"5389:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1219,"id":1254,"nodeType":"Return","src":"5382:58:8"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"4706:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1256,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:8","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"target","nameLocation":"4996:6:8","nodeType":"VariableDeclaration","scope":1256,"src":"4988:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"data","nameLocation":"5025:4:8","nodeType":"VariableDeclaration","scope":1256,"src":"5012:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1210,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"value","nameLocation":"5047:5:8","nodeType":"VariableDeclaration","scope":1256,"src":"5039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:8","nodeType":"VariableDeclaration","scope":1256,"src":"5062:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1214,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:8"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1256,"src":"5113:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1217,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:8"},"scope":1392,"src":"4948:499:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1272,"nodeType":"Block","src":"5724:97:8","statements":[{"expression":{"arguments":[{"id":1267,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"5760:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1268,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"5768:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1266,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1273,1308],"referencedDeclaration":1308,"src":"5741:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1265,"id":1271,"nodeType":"Return","src":"5734:80:8"}]},"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"5453:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1273,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:8","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"target","nameLocation":"5660:6:8","nodeType":"VariableDeclaration","scope":1273,"src":"5652:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"data","nameLocation":"5681:4:8","nodeType":"VariableDeclaration","scope":1273,"src":"5668:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1260,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:8"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1273,"src":"5710:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1263,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:8"},"scope":1392,"src":"5624:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1307,"nodeType":"Block","src":"6163:228:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1287,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6192:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1286,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"6181:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1291,"nodeType":"ExpressionStatement","src":"6173:67:8"},{"assignments":[1293,1295],"declarations":[{"constant":false,"id":1293,"mutability":"mutable","name":"success","nameLocation":"6257:7:8","nodeType":"VariableDeclaration","scope":1307,"src":"6252:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1292,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:8","nodeType":"VariableDeclaration","scope":1307,"src":"6266:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1294,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1300,"initialValue":{"arguments":[{"id":1298,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"6311:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1296,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6293:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:8"},{"expression":{"arguments":[{"id":1302,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"6350:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1303,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6359:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1304,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"6371:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1301,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"6333:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1284,"id":1306,"nodeType":"Return","src":"6326:58:8"}]},"documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"5827:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1308,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:8","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"target","nameLocation":"6050:6:8","nodeType":"VariableDeclaration","scope":1308,"src":"6042:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"data","nameLocation":"6079:4:8","nodeType":"VariableDeclaration","scope":1308,"src":"6066:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:8","nodeType":"VariableDeclaration","scope":1308,"src":"6093:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1279,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:8"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1308,"src":"6149:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1282,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:8"},"scope":1392,"src":"6005:386:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1324,"nodeType":"Block","src":"6667:101:8","statements":[{"expression":{"arguments":[{"id":1319,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"6705:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1320,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"6713:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1318,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1325,1360],"referencedDeclaration":1360,"src":"6684:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1317,"id":1323,"nodeType":"Return","src":"6677:84:8"}]},"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"6397:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:8","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"target","nameLocation":"6608:6:8","nodeType":"VariableDeclaration","scope":1325,"src":"6600:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"data","nameLocation":"6629:4:8","nodeType":"VariableDeclaration","scope":1325,"src":"6616:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1312,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:8"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1325,"src":"6653:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1315,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:8"},"scope":1392,"src":"6570:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1359,"nodeType":"Block","src":"7109:232:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1339,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"7138:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1338,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"7127:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1343,"nodeType":"ExpressionStatement","src":"7119:69:8"},{"assignments":[1345,1347],"declarations":[{"constant":false,"id":1345,"mutability":"mutable","name":"success","nameLocation":"7205:7:8","nodeType":"VariableDeclaration","scope":1359,"src":"7200:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1344,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:8","nodeType":"VariableDeclaration","scope":1359,"src":"7214:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1346,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1352,"initialValue":{"arguments":[{"id":1350,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"7261:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1348,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"7241:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:8"},{"expression":{"arguments":[{"id":1354,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"7300:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1355,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"7309:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1356,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"7321:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1353,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"7283:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1336,"id":1358,"nodeType":"Return","src":"7276:58:8"}]},"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"6774:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1360,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:8","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"target","nameLocation":"7001:6:8","nodeType":"VariableDeclaration","scope":1360,"src":"6993:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"data","nameLocation":"7030:4:8","nodeType":"VariableDeclaration","scope":1360,"src":"7017:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1329,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:8","nodeType":"VariableDeclaration","scope":1360,"src":"7044:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1331,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:8"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1360,"src":"7095:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1334,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:8"},"scope":1392,"src":"6954:387:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1390,"nodeType":"Block","src":"7721:532:8","statements":[{"condition":{"id":1372,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"7735:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1388,"nodeType":"Block","src":"7792:455:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1376,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"7876:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1386,"nodeType":"Block","src":"8184:53:8","statements":[{"expression":{"arguments":[{"id":1383,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"8209:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1382,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8202:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8202:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1385,"nodeType":"ExpressionStatement","src":"8202:20:8"}]},"id":1387,"nodeType":"IfStatement","src":"7872:365:8","trueBody":{"id":1381,"nodeType":"Block","src":"7899:279:8","statements":[{"AST":{"nodeType":"YulBlock","src":"8019:145:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8041:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8070:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8064:5:8"},"nodeType":"YulFunctionCall","src":"8064:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8045:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8113:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8117:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8109:3:8"},"nodeType":"YulFunctionCall","src":"8109:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8130:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8102:6:8"},"nodeType":"YulFunctionCall","src":"8102:44:8"},"nodeType":"YulExpressionStatement","src":"8102:44:8"}]},"evmVersion":"london","externalReferences":[{"declaration":1365,"isOffset":false,"isSlot":false,"src":"8070:10:8","valueSize":1},{"declaration":1365,"isOffset":false,"isSlot":false,"src":"8117:10:8","valueSize":1}],"id":1380,"nodeType":"InlineAssembly","src":"8010:154:8"}]}}]},"id":1389,"nodeType":"IfStatement","src":"7731:516:8","trueBody":{"id":1375,"nodeType":"Block","src":"7744:42:8","statements":[{"expression":{"id":1373,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"7765:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1371,"id":1374,"nodeType":"Return","src":"7758:17:8"}]}}]},"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"7347:209:8","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1391,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:8","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"success","nameLocation":"7601:7:8","nodeType":"VariableDeclaration","scope":1391,"src":"7596:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1362,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:8","nodeType":"VariableDeclaration","scope":1391,"src":"7618:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1364,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:8","nodeType":"VariableDeclaration","scope":1391,"src":"7651:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1366,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:8"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1391,"src":"7707:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1369,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:8"},"scope":1392,"src":"7561:692:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1393,"src":"194:8061:8","usedErrors":[]}],"src":"101:8155:8"},"id":8},"openzeppelin-solidity/contracts/utils/Context.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/utils/Context.sol","exportedSymbols":{"Context":[1414]},"id":1415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1394,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"111:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1414,"linearizedBaseContracts":[1414],"name":"Context","nameLocation":"626:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1403,"nodeType":"Block","src":"702:34:9","statements":[{"expression":{"expression":{"id":1400,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1399,"id":1402,"nodeType":"Return","src":"712:17:9"}]},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:9","nodeType":"FunctionDefinition","parameters":{"id":1396,"nodeType":"ParameterList","parameters":[],"src":"659:2:9"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1404,"src":"693:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:9"},"scope":1414,"src":"640:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1412,"nodeType":"Block","src":"809:32:9","statements":[{"expression":{"expression":{"id":1409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1408,"id":1411,"nodeType":"Return","src":"819:15:9"}]},"id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:9","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"759:2:9"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1413,"src":"793:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1406,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:9"},"scope":1414,"src":"742:99:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1415,"src":"608:235:9","usedErrors":[]}],"src":"86:758:9"},"id":9},"openzeppelin-solidity/contracts/utils/Strings.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[1617]},"id":1618,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1416,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"111:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":1617,"linearizedBaseContracts":[1617],"name":"Strings","nameLocation":"154:7:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1420,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"193:12:10","nodeType":"VariableDeclaration","scope":1617,"src":"168:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1418,"name":"bytes16","nodeType":"ElementaryTypeName","src":"168:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"208:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"body":{"id":1498,"nodeType":"Block","src":"399:632:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"601:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"610:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"601:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1434,"nodeType":"IfStatement","src":"597:51:10","trueBody":{"id":1433,"nodeType":"Block","src":"613:35:10","statements":[{"expression":{"hexValue":"30","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"634:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":1427,"id":1432,"nodeType":"Return","src":"627:10:10"}]}},{"assignments":[1436],"declarations":[{"constant":false,"id":1436,"mutability":"mutable","name":"temp","nameLocation":"665:4:10","nodeType":"VariableDeclaration","scope":1498,"src":"657:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1435,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1438,"initialValue":{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"672:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"657:20:10"},{"assignments":[1440],"declarations":[{"constant":false,"id":1440,"mutability":"mutable","name":"digits","nameLocation":"695:6:10","nodeType":"VariableDeclaration","scope":1498,"src":"687:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1441,"nodeType":"VariableDeclarationStatement","src":"687:14:10"},{"body":{"id":1452,"nodeType":"Block","src":"729:57:10","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"743:8:10","subExpression":{"id":1445,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"743:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"743:8:10"},{"expression":{"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1448,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"765:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"773:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"765:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1451,"nodeType":"ExpressionStatement","src":"765:10:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"718:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"726:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"718:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1453,"nodeType":"WhileStatement","src":"711:75:10"},{"assignments":[1455],"declarations":[{"constant":false,"id":1455,"mutability":"mutable","name":"buffer","nameLocation":"808:6:10","nodeType":"VariableDeclaration","scope":1498,"src":"795:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1454,"name":"bytes","nodeType":"ElementaryTypeName","src":"795:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1460,"initialValue":{"arguments":[{"id":1458,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"827:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1456,"name":"bytes","nodeType":"ElementaryTypeName","src":"821:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"817:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"795:39:10"},{"body":{"id":1491,"nodeType":"Block","src":"863:131:10","statements":[{"expression":{"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1464,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"877:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"887:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"877:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1467,"nodeType":"ExpressionStatement","src":"877:11:10"},{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1468,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"902:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1470,"indexExpression":{"id":1469,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"909:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"902:14:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"932:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"945:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"953:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"945:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"937:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:10","typeDescriptions":{}}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"937:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"932:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1473,"name":"uint8","nodeType":"ElementaryTypeName","src":"926:5:10","typeDescriptions":{}}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"926:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"919:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1471,"name":"bytes1","nodeType":"ElementaryTypeName","src":"919:6:10","typeDescriptions":{}}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"919:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"902:56:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1486,"nodeType":"ExpressionStatement","src":"902:56:10"},{"expression":{"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"972:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"981:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"972:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1490,"nodeType":"ExpressionStatement","src":"972:11:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"851:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"860:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"851:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1492,"nodeType":"WhileStatement","src":"844:150:10"},{"expression":{"arguments":[{"id":1495,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"1017:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1010:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1493,"name":"string","nodeType":"ElementaryTypeName","src":"1010:6:10","typeDescriptions":{}}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1010:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1427,"id":1497,"nodeType":"Return","src":"1003:21:10"}]},"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"233:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1499,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"337:8:10","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"value","nameLocation":"354:5:10","nodeType":"VariableDeclaration","scope":1499,"src":"346:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"346:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"345:15:10"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"384:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1425,"name":"string","nodeType":"ElementaryTypeName","src":"384:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"383:15:10"},"scope":1617,"src":"328:703:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1539,"nodeType":"Block","src":"1210:255:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"1224:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1224:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"1220:54:10","trueBody":{"id":1512,"nodeType":"Block","src":"1236:38:10","statements":[{"expression":{"hexValue":"30783030","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1257:6:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":1506,"id":1511,"nodeType":"Return","src":"1250:13:10"}]}},{"assignments":[1515],"declarations":[{"constant":false,"id":1515,"mutability":"mutable","name":"temp","nameLocation":"1291:4:10","nodeType":"VariableDeclaration","scope":1539,"src":"1283:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1517,"initialValue":{"id":1516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"1298:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1283:20:10"},{"assignments":[1519],"declarations":[{"constant":false,"id":1519,"mutability":"mutable","name":"length","nameLocation":"1321:6:10","nodeType":"VariableDeclaration","scope":1539,"src":"1313:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1313:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1521,"initialValue":{"hexValue":"30","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1330:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1313:18:10"},{"body":{"id":1532,"nodeType":"Block","src":"1359:57:10","statements":[{"expression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1373:8:10","subExpression":{"id":1525,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1373:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1527,"nodeType":"ExpressionStatement","src":"1373:8:10"},{"expression":{"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1528,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"1395:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1404:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1395:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1531,"nodeType":"ExpressionStatement","src":"1395:10:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"1348:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1356:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1348:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"WhileStatement","src":"1341:75:10"},{"expression":{"arguments":[{"id":1535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"1444:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1536,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1451:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1534,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1540,1616],"referencedDeclaration":1616,"src":"1432:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1432:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1506,"id":1538,"nodeType":"Return","src":"1425:33:10"}]},"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"1037:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1145:11:10","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"value","nameLocation":"1165:5:10","nodeType":"VariableDeclaration","scope":1540,"src":"1157:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:15:10"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1540,"src":"1195:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1504,"name":"string","nodeType":"ElementaryTypeName","src":"1195:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1194:15:10"},"scope":1617,"src":"1136:329:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1615,"nodeType":"Block","src":"1678:351:10","statements":[{"assignments":[1551],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"buffer","nameLocation":"1701:6:10","nodeType":"VariableDeclaration","scope":1615,"src":"1688:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1550,"name":"bytes","nodeType":"ElementaryTypeName","src":"1688:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1560,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1720:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1555,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"1724:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1720:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1733:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1720:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1710:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1552,"name":"bytes","nodeType":"ElementaryTypeName","src":"1714:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1710:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1688:47:10"},{"expression":{"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1561,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"1745:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1563,"indexExpression":{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1752:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1745:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1757:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1745:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1566,"nodeType":"ExpressionStatement","src":"1745:15:10"},{"expression":{"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1567,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"1770:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1569,"indexExpression":{"hexValue":"31","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1770:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1782:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1770:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1572,"nodeType":"ExpressionStatement","src":"1770:15:10"},{"body":{"id":1601,"nodeType":"Block","src":"1840:87:10","statements":[{"expression":{"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1587,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"1854:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1589,"indexExpression":{"id":1588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1861:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1854:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1590,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1866:12:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1594,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"1879:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1887:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1879:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1866:25:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1854:37:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1596,"nodeType":"ExpressionStatement","src":"1854:37:10"},{"expression":{"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"1905:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1905:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1600,"nodeType":"ExpressionStatement","src":"1905:11:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1828:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1832:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1828:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1602,"initializationExpression":{"assignments":[1574],"declarations":[{"constant":false,"id":1574,"mutability":"mutable","name":"i","nameLocation":"1808:1:10","nodeType":"VariableDeclaration","scope":1602,"src":"1800:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1800:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1580,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1812:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1576,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"1816:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1812:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1825:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1812:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1800:26:10"},"loopExpression":{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1835:3:10","subExpression":{"id":1584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1837:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1586,"nodeType":"ExpressionStatement","src":"1835:3:10"},"nodeType":"ForStatement","src":"1795:132:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"1944:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1953:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1944:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1956:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1936:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1936:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"ExpressionStatement","src":"1936:55:10"},{"expression":{"arguments":[{"id":1612,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"2015:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1610,"name":"string","nodeType":"ElementaryTypeName","src":"2008:6:10","typeDescriptions":{}}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1549,"id":1614,"nodeType":"Return","src":"2001:21:10"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"1471:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1597:11:10","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"value","nameLocation":"1617:5:10","nodeType":"VariableDeclaration","scope":1616,"src":"1609:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"length","nameLocation":"1632:6:10","nodeType":"VariableDeclaration","scope":1616,"src":"1624:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1608:31:10"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"1663:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1547,"name":"string","nodeType":"ElementaryTypeName","src":"1663:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1662:15:10"},"scope":1617,"src":"1588:441:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1618,"src":"146:1885:10","usedErrors":[]}],"src":"86:1946:10"},"id":10},"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1641],"IERC165":[1653]},"id":1642,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1619,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:11"},{"absolutePath":"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1642,"sourceUnit":1654,"src":"124:23:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1622,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1653,"src":"754:7:11"},"id":1623,"nodeType":"InheritanceSpecifier","src":"754:7:11"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1621,"nodeType":"StructuredDocumentation","src":"149:576:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1641,"linearizedBaseContracts":[1641,1653],"name":"ERC165","nameLocation":"744:6:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1652],"body":{"id":1639,"nodeType":"Block","src":"920:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1632,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"937:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1634,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"957:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1653_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1653_$","typeString":"type(contract IERC165)"}],"id":1633,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1653","typeString":"type(contract IERC165)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1631,"id":1638,"nodeType":"Return","src":"930:47:11"}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"768:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:11","nodeType":"FunctionDefinition","overrides":{"id":1628,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:11"},"parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:11","nodeType":"VariableDeclaration","scope":1640,"src":"856:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1625,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:11"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1640,"src":"914:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1629,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:11"},"scope":1641,"src":"829:155:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1642,"src":"726:260:11","usedErrors":[]}],"src":"99:888:11"},"id":11},"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1653]},"id":1654,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1643,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"125:279:12","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1653,"linearizedBaseContracts":[1653],"name":"IERC165","nameLocation":"415:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1645,"nodeType":"StructuredDocumentation","src":"429:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1652,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:12","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:12","nodeType":"VariableDeclaration","scope":1652,"src":"801:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1646,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:12"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1652,"src":"844:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1649,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:12"},"scope":1653,"src":"774:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1654,"src":"405:447:12","usedErrors":[]}],"src":"100:753:12"},"id":12},"openzeppelin-solidity/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"openzeppelin-solidity/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2252]},"id":2253,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1655,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"140:686:13","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."},"fullyImplemented":true,"id":2252,"linearizedBaseContracts":[2252],"name":"EnumerableSet","nameLocation":"835:13:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":1664,"members":[{"constant":false,"id":1659,"mutability":"mutable","name":"_values","nameLocation":"1359:7:13","nodeType":"VariableDeclaration","scope":1664,"src":"1349:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1349:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1658,"nodeType":"ArrayTypeName","src":"1349:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"_indexes","nameLocation":"1527:8:13","nodeType":"VariableDeclaration","scope":1664,"src":"1499:36:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1662,"keyType":{"id":1660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1507:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1499:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1518:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1302:3:13","nodeType":"StructDefinition","scope":2252,"src":"1295:247:13","visibility":"public"},{"body":{"id":1705,"nodeType":"Block","src":"1781:335:13","statements":[{"condition":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1795:22:13","subExpression":{"arguments":[{"id":1676,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1806:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":1677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"1811:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1675,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"1796:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1796:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1703,"nodeType":"Block","src":"2073:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2094:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1674,"id":1702,"nodeType":"Return","src":"2087:12:13"}]},"id":1704,"nodeType":"IfStatement","src":"1791:319:13","trueBody":{"id":1700,"nodeType":"Block","src":"1819:248:13","statements":[{"expression":{"arguments":[{"id":1685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"1850:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1680,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1833:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"1833:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1833:16:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1833:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1687,"nodeType":"ExpressionStatement","src":"1833:23:13"},{"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1688,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1991:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1663,"src":"1991:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1692,"indexExpression":{"id":1690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2004:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1991:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1693,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2013:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"2013:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2013:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1991:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"nodeType":"ExpressionStatement","src":"1991:40:13"},{"expression":{"hexValue":"74727565","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2052:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1674,"id":1699,"nodeType":"Return","src":"2045:11:13"}]}}]},"documentation":{"id":1665,"nodeType":"StructuredDocumentation","src":"1548:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"1721:4:13","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"set","nameLocation":"1738:3:13","nodeType":"VariableDeclaration","scope":1706,"src":"1726:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1667,"nodeType":"UserDefinedTypeName","pathNode":{"id":1666,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"1726:3:13"},"referencedDeclaration":1664,"src":"1726:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"value","nameLocation":"1751:5:13","nodeType":"VariableDeclaration","scope":1706,"src":"1743:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1743:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:32:13"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"1775:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1672,"name":"bool","nodeType":"ElementaryTypeName","src":"1775:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1774:6:13"},"scope":2252,"src":"1712:404:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1789,"nodeType":"Block","src":"2356:1316:13","statements":[{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"valueIndex","nameLocation":"2474:10:13","nodeType":"VariableDeclaration","scope":1789,"src":"2466:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"2466:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1723,"initialValue":{"baseExpression":{"expression":{"id":1719,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2487:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1663,"src":"2487:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1722,"indexExpression":{"id":1721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"2500:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2487:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2466:40:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1724,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"2521:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2535:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2521:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1787,"nodeType":"Block","src":"3629:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3650:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1716,"id":1786,"nodeType":"Return","src":"3643:12:13"}]},"id":1788,"nodeType":"IfStatement","src":"2517:1149:13","trueBody":{"id":1784,"nodeType":"Block","src":"2538:1085:13","statements":[{"assignments":[1728],"declarations":[{"constant":false,"id":1728,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"2898:13:13","nodeType":"VariableDeclaration","scope":1784,"src":"2890:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2890:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1732,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1729,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"2914:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2927:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2914:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2890:38:13"},{"assignments":[1734],"declarations":[{"constant":false,"id":1734,"mutability":"mutable","name":"lastIndex","nameLocation":"2950:9:13","nodeType":"VariableDeclaration","scope":1784,"src":"2942:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2942:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1740,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1735,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2962:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"2962:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2962:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2962:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2942:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"3003:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1742,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3016:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3003:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1768,"nodeType":"IfStatement","src":"2999:398:13","trueBody":{"id":1767,"nodeType":"Block","src":"3031:366:13","statements":[{"assignments":[1745],"declarations":[{"constant":false,"id":1745,"mutability":"mutable","name":"lastValue","nameLocation":"3057:9:13","nodeType":"VariableDeclaration","scope":1767,"src":"3049:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3049:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1750,"initialValue":{"baseExpression":{"expression":{"id":1746,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3069:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"3069:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1749,"indexExpression":{"id":1748,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"3081:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3069:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3049:42:13"},{"expression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1751,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3191:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"3191:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1755,"indexExpression":{"id":1753,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3203:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3191:26:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1756,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"3220:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3191:38:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1758,"nodeType":"ExpressionStatement","src":"3191:38:13"},{"expression":{"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1759,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3303:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1663,"src":"3303:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1763,"indexExpression":{"id":1761,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"3316:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3303:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1764,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"3329:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3303:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1766,"nodeType":"ExpressionStatement","src":"3303:36:13"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1769,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3475:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"3475:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3475:15:13","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3475:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1775,"nodeType":"ExpressionStatement","src":"3475:17:13"},{"expression":{"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3560:26:13","subExpression":{"baseExpression":{"expression":{"id":1776,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3567:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1663,"src":"3567:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1779,"indexExpression":{"id":1778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3580:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3567:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1781,"nodeType":"ExpressionStatement","src":"3560:26:13"},{"expression":{"hexValue":"74727565","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3608:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1716,"id":1783,"nodeType":"Return","src":"3601:11:13"}]}}]},"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"2122:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1790,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2293:7:13","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"set","nameLocation":"2313:3:13","nodeType":"VariableDeclaration","scope":1790,"src":"2301:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1709,"nodeType":"UserDefinedTypeName","pathNode":{"id":1708,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"2301:3:13"},"referencedDeclaration":1664,"src":"2301:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"value","nameLocation":"2326:5:13","nodeType":"VariableDeclaration","scope":1790,"src":"2318:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2318:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2300:32:13"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1790,"src":"2350:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1714,"name":"bool","nodeType":"ElementaryTypeName","src":"2350:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2349:6:13"},"scope":2252,"src":"2284:1388:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1808,"nodeType":"Block","src":"3832:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1801,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"3849:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1663,"src":"3849:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1804,"indexExpression":{"id":1803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"3862:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3849:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3872:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3849:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1800,"id":1807,"nodeType":"Return","src":"3842:31:13"}]},"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"3678:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":1809,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"3762:9:13","nodeType":"FunctionDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"set","nameLocation":"3784:3:13","nodeType":"VariableDeclaration","scope":1809,"src":"3772:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1793,"nodeType":"UserDefinedTypeName","pathNode":{"id":1792,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"3772:3:13"},"referencedDeclaration":1664,"src":"3772:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"value","nameLocation":"3797:5:13","nodeType":"VariableDeclaration","scope":1809,"src":"3789:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3789:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3771:32:13"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1809,"src":"3826:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1798,"name":"bool","nodeType":"ElementaryTypeName","src":"3826:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3825:6:13"},"scope":2252,"src":"3753:127:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1822,"nodeType":"Block","src":"4026:42:13","statements":[{"expression":{"expression":{"expression":{"id":1818,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"4043:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"4043:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4043:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1817,"id":1821,"nodeType":"Return","src":"4036:25:13"}]},"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"3886:70:13","text":" @dev Returns the number of values on the set. O(1)."},"id":1823,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"3970:7:13","nodeType":"FunctionDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"set","nameLocation":"3990:3:13","nodeType":"VariableDeclaration","scope":1823,"src":"3978:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1812,"nodeType":"UserDefinedTypeName","pathNode":{"id":1811,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"3978:3:13"},"referencedDeclaration":1664,"src":"3978:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"3977:17:13"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1823,"src":"4017:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"4017:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4016:9:13"},"scope":2252,"src":"3961:107:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1839,"nodeType":"Block","src":"4486:42:13","statements":[{"expression":{"baseExpression":{"expression":{"id":1834,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"4503:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"4503:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1837,"indexExpression":{"id":1836,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"4515:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4503:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1833,"id":1838,"nodeType":"Return","src":"4496:25:13"}]},"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"4074:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4419:3:13","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"set","nameLocation":"4435:3:13","nodeType":"VariableDeclaration","scope":1840,"src":"4423:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1826,"nodeType":"UserDefinedTypeName","pathNode":{"id":1825,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"4423:3:13"},"referencedDeclaration":1664,"src":"4423:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"index","nameLocation":"4448:5:13","nodeType":"VariableDeclaration","scope":1840,"src":"4440:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"4440:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4422:32:13"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"4477:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4477:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4476:9:13"},"scope":2252,"src":"4410:118:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1853,"nodeType":"Block","src":"5142:35:13","statements":[{"expression":{"expression":{"id":1850,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"5159:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1659,"src":"5159:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1849,"id":1852,"nodeType":"Return","src":"5152:18:13"}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"4534:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1854,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5077:7:13","nodeType":"FunctionDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"set","nameLocation":"5097:3:13","nodeType":"VariableDeclaration","scope":1854,"src":"5085:15:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1843,"nodeType":"UserDefinedTypeName","pathNode":{"id":1842,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"5085:3:13"},"referencedDeclaration":1664,"src":"5085:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5084:17:13"},"returnParameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1854,"src":"5124:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5124:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1847,"nodeType":"ArrayTypeName","src":"5124:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5123:18:13"},"scope":2252,"src":"5068:109:13","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":1858,"members":[{"constant":false,"id":1857,"mutability":"mutable","name":"_inner","nameLocation":"5234:6:13","nodeType":"VariableDeclaration","scope":1858,"src":"5230:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1856,"nodeType":"UserDefinedTypeName","pathNode":{"id":1855,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"5230:3:13"},"referencedDeclaration":1664,"src":"5230:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5209:10:13","nodeType":"StructDefinition","scope":2252,"src":"5202:45:13","visibility":"public"},{"body":{"id":1875,"nodeType":"Block","src":"5493:47:13","statements":[{"expression":{"arguments":[{"expression":{"id":1870,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"5515:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"5515:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"5527:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1869,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"5510:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1664_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5510:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1868,"id":1874,"nodeType":"Return","src":"5503:30:13"}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"5253:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5426:3:13","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"set","nameLocation":"5449:3:13","nodeType":"VariableDeclaration","scope":1876,"src":"5430:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1861,"nodeType":"UserDefinedTypeName","pathNode":{"id":1860,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"5430:10:13"},"referencedDeclaration":1858,"src":"5430:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"value","nameLocation":"5462:5:13","nodeType":"VariableDeclaration","scope":1876,"src":"5454:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5454:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5429:39:13"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1876,"src":"5487:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1866,"name":"bool","nodeType":"ElementaryTypeName","src":"5487:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5486:6:13"},"scope":2252,"src":"5417:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1893,"nodeType":"Block","src":"5787:50:13","statements":[{"expression":{"arguments":[{"expression":{"id":1888,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"5812:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"5812:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"5824:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1887,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5804:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1664_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5804:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1886,"id":1892,"nodeType":"Return","src":"5797:33:13"}]},"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"5546:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1894,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"5717:6:13","nodeType":"FunctionDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"set","nameLocation":"5743:3:13","nodeType":"VariableDeclaration","scope":1894,"src":"5724:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1879,"nodeType":"UserDefinedTypeName","pathNode":{"id":1878,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"5724:10:13"},"referencedDeclaration":1858,"src":"5724:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"value","nameLocation":"5756:5:13","nodeType":"VariableDeclaration","scope":1894,"src":"5748:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5748:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5723:39:13"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1894,"src":"5781:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1884,"name":"bool","nodeType":"ElementaryTypeName","src":"5781:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5780:6:13"},"scope":2252,"src":"5708:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1911,"nodeType":"Block","src":"6004:52:13","statements":[{"expression":{"arguments":[{"expression":{"id":1906,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"6031:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"6031:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"6043:5:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1905,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"6021:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6021:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1904,"id":1910,"nodeType":"Return","src":"6014:35:13"}]},"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"5843:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"5927:8:13","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"set","nameLocation":"5955:3:13","nodeType":"VariableDeclaration","scope":1912,"src":"5936:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1897,"nodeType":"UserDefinedTypeName","pathNode":{"id":1896,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"5936:10:13"},"referencedDeclaration":1858,"src":"5936:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"value","nameLocation":"5968:5:13","nodeType":"VariableDeclaration","scope":1912,"src":"5960:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5960:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5935:39:13"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"5998:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1902,"name":"bool","nodeType":"ElementaryTypeName","src":"5998:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5997:6:13"},"scope":2252,"src":"5918:138:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"6209:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":1922,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"6234:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"6234:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1921,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6226:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6226:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1920,"id":1925,"nodeType":"Return","src":"6219:26:13"}]},"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"6062:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6146:6:13","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"set","nameLocation":"6172:3:13","nodeType":"VariableDeclaration","scope":1927,"src":"6153:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1915,"nodeType":"UserDefinedTypeName","pathNode":{"id":1914,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"6153:10:13"},"referencedDeclaration":1858,"src":"6153:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6152:24:13"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"6200:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"6200:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6199:9:13"},"scope":2252,"src":"6137:115:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1944,"nodeType":"Block","src":"6677:46:13","statements":[{"expression":{"arguments":[{"expression":{"id":1939,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"6698:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"6698:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":1941,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"6710:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1938,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"6694:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6694:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1937,"id":1943,"nodeType":"Return","src":"6687:29:13"}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"6258:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"6603:2:13","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"set","nameLocation":"6625:3:13","nodeType":"VariableDeclaration","scope":1945,"src":"6606:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1930,"nodeType":"UserDefinedTypeName","pathNode":{"id":1929,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"6606:10:13"},"referencedDeclaration":1858,"src":"6606:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"index","nameLocation":"6638:5:13","nodeType":"VariableDeclaration","scope":1945,"src":"6630:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"6630:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6605:39:13"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"6668:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6668:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6667:9:13"},"scope":2252,"src":"6594:129:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1960,"nodeType":"Block","src":"7344:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":1956,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"7369:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":1957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"7369:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":1955,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"7361:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7361:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1954,"id":1959,"nodeType":"Return","src":"7354:26:13"}]},"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"6729:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1961,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7272:6:13","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"set","nameLocation":"7298:3:13","nodeType":"VariableDeclaration","scope":1961,"src":"7279:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":1948,"nodeType":"UserDefinedTypeName","pathNode":{"id":1947,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"7279:10:13"},"referencedDeclaration":1858,"src":"7279:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1858_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7278:24:13"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"7326:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7326:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1952,"nodeType":"ArrayTypeName","src":"7326:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7325:18:13"},"scope":2252,"src":"7263:124:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":1965,"members":[{"constant":false,"id":1964,"mutability":"mutable","name":"_inner","nameLocation":"7444:6:13","nodeType":"VariableDeclaration","scope":1965,"src":"7440:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1963,"nodeType":"UserDefinedTypeName","pathNode":{"id":1962,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"7440:3:13"},"referencedDeclaration":1664,"src":"7440:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"7419:10:13","nodeType":"StructDefinition","scope":2252,"src":"7412:45:13","visibility":"public"},{"body":{"id":1991,"nodeType":"Block","src":"7703:74:13","statements":[{"expression":{"arguments":[{"expression":{"id":1977,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"7725:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":1978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1964,"src":"7725:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"7761:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7753:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1983,"name":"uint160","nodeType":"ElementaryTypeName","src":"7753:7:13","typeDescriptions":{}}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7753:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7745:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"7745:7:13","typeDescriptions":{}}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7745:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7737:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7737:7:13","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7737:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1976,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"7720:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1664_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7720:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1975,"id":1990,"nodeType":"Return","src":"7713:57:13"}]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"7463:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"7636:3:13","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"set","nameLocation":"7659:3:13","nodeType":"VariableDeclaration","scope":1992,"src":"7640:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1968,"nodeType":"UserDefinedTypeName","pathNode":{"id":1967,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"7640:10:13"},"referencedDeclaration":1965,"src":"7640:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"value","nameLocation":"7672:5:13","nodeType":"VariableDeclaration","scope":1992,"src":"7664:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"7664:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7639:39:13"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1992,"src":"7697:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1973,"name":"bool","nodeType":"ElementaryTypeName","src":"7697:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7696:6:13"},"scope":2252,"src":"7627:150:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2018,"nodeType":"Block","src":"8024:77:13","statements":[{"expression":{"arguments":[{"expression":{"id":2004,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"8049:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1964,"src":"8049:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"8085:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8077:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2010,"name":"uint160","nodeType":"ElementaryTypeName","src":"8077:7:13","typeDescriptions":{}}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8077:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"8069:7:13","typeDescriptions":{}}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8069:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8061:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8061:7:13","typeDescriptions":{}}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8061:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2003,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"8041:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1664_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8041:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2002,"id":2017,"nodeType":"Return","src":"8034:60:13"}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"7783:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2019,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"7954:6:13","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"set","nameLocation":"7980:3:13","nodeType":"VariableDeclaration","scope":2019,"src":"7961:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":1995,"nodeType":"UserDefinedTypeName","pathNode":{"id":1994,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"7961:10:13"},"referencedDeclaration":1965,"src":"7961:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1998,"mutability":"mutable","name":"value","nameLocation":"7993:5:13","nodeType":"VariableDeclaration","scope":2019,"src":"7985:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1997,"name":"address","nodeType":"ElementaryTypeName","src":"7985:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7960:39:13"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2019,"src":"8018:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2000,"name":"bool","nodeType":"ElementaryTypeName","src":"8018:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8017:6:13"},"scope":2252,"src":"7945:156:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2045,"nodeType":"Block","src":"8268:79:13","statements":[{"expression":{"arguments":[{"expression":{"id":2031,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"8295:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1964,"src":"8295:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"8331:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8323:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2037,"name":"uint160","nodeType":"ElementaryTypeName","src":"8323:7:13","typeDescriptions":{}}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8323:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8315:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"8315:7:13","typeDescriptions":{}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8315:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8307:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8307:7:13","typeDescriptions":{}}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8307:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2030,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"8285:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8285:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2029,"id":2044,"nodeType":"Return","src":"8278:62:13"}]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"8107:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2046,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8191:8:13","nodeType":"FunctionDefinition","parameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"set","nameLocation":"8219:3:13","nodeType":"VariableDeclaration","scope":2046,"src":"8200:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2022,"nodeType":"UserDefinedTypeName","pathNode":{"id":2021,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"8200:10:13"},"referencedDeclaration":1965,"src":"8200:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"value","nameLocation":"8232:5:13","nodeType":"VariableDeclaration","scope":2046,"src":"8224:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"8224:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8199:39:13"},"returnParameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2046,"src":"8262:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2027,"name":"bool","nodeType":"ElementaryTypeName","src":"8262:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8261:6:13"},"scope":2252,"src":"8182:165:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2060,"nodeType":"Block","src":"8500:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2056,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"8525:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1964,"src":"8525:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2055,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"8517:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8517:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2054,"id":2059,"nodeType":"Return","src":"8510:26:13"}]},"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"8353:70:13","text":" @dev Returns the number of values in the set. O(1)."},"id":2061,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"8437:6:13","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"set","nameLocation":"8463:3:13","nodeType":"VariableDeclaration","scope":2061,"src":"8444:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2049,"nodeType":"UserDefinedTypeName","pathNode":{"id":2048,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"8444:10:13"},"referencedDeclaration":1965,"src":"8444:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"8443:24:13"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2061,"src":"8491:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"8491:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8490:9:13"},"scope":2252,"src":"8428:115:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2087,"nodeType":"Block","src":"8968:73:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2079,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"9013:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1964,"src":"9013:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2081,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"9025:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2078,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"9009:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9009:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"9001:7:13","typeDescriptions":{}}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9001:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2074,"name":"uint160","nodeType":"ElementaryTypeName","src":"8993:7:13","typeDescriptions":{}}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"8985:7:13","typeDescriptions":{}}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8985:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2071,"id":2086,"nodeType":"Return","src":"8978:56:13"}]},"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"8549:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"8894:2:13","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"set","nameLocation":"8916:3:13","nodeType":"VariableDeclaration","scope":2088,"src":"8897:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2064,"nodeType":"UserDefinedTypeName","pathNode":{"id":2063,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"8897:10:13"},"referencedDeclaration":1965,"src":"8897:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"index","nameLocation":"8929:5:13","nodeType":"VariableDeclaration","scope":2088,"src":"8921:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"8921:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8896:39:13"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"8959:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"8959:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8958:9:13"},"scope":2252,"src":"8885:156:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2117,"nodeType":"Block","src":"9662:176:13","statements":[{"assignments":[2102],"declarations":[{"constant":false,"id":2102,"mutability":"mutable","name":"store","nameLocation":"9689:5:13","nodeType":"VariableDeclaration","scope":2117,"src":"9672:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9672:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2101,"nodeType":"ArrayTypeName","src":"9672:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2107,"initialValue":{"arguments":[{"expression":{"id":2104,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"9705:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1964,"src":"9705:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2103,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"9697:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9697:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9672:44:13"},{"assignments":[2112],"declarations":[{"constant":false,"id":2112,"mutability":"mutable","name":"result","nameLocation":"9743:6:13","nodeType":"VariableDeclaration","scope":2117,"src":"9726:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2110,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2111,"nodeType":"ArrayTypeName","src":"9726:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2113,"nodeType":"VariableDeclarationStatement","src":"9726:23:13"},{"AST":{"nodeType":"YulBlock","src":"9769:39:13","statements":[{"nodeType":"YulAssignment","src":"9783:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"9793:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9783:6:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2112,"isOffset":false,"isSlot":false,"src":"9783:6:13","valueSize":1},{"declaration":2102,"isOffset":false,"isSlot":false,"src":"9793:5:13","valueSize":1}],"id":2114,"nodeType":"InlineAssembly","src":"9760:48:13"},{"expression":{"id":2115,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"9825:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2097,"id":2116,"nodeType":"Return","src":"9818:13:13"}]},"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"9047:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2118,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"9590:6:13","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"set","nameLocation":"9616:3:13","nodeType":"VariableDeclaration","scope":2118,"src":"9597:22:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2091,"nodeType":"UserDefinedTypeName","pathNode":{"id":2090,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":1965,"src":"9597:10:13"},"referencedDeclaration":1965,"src":"9597:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1965_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9596:24:13"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2118,"src":"9644:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"9644:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2095,"nodeType":"ArrayTypeName","src":"9644:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9643:18:13"},"scope":2252,"src":"9581:257:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":2122,"members":[{"constant":false,"id":2121,"mutability":"mutable","name":"_inner","nameLocation":"9889:6:13","nodeType":"VariableDeclaration","scope":2122,"src":"9885:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2120,"nodeType":"UserDefinedTypeName","pathNode":{"id":2119,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"9885:3:13"},"referencedDeclaration":1664,"src":"9885:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"9867:7:13","nodeType":"StructDefinition","scope":2252,"src":"9860:42:13","visibility":"public"},{"body":{"id":2142,"nodeType":"Block","src":"10145:56:13","statements":[{"expression":{"arguments":[{"expression":{"id":2134,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"10167:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"10167:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"10187:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10179:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10179:7:13","typeDescriptions":{}}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10179:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2133,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"10162:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1664_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10162:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2132,"id":2141,"nodeType":"Return","src":"10155:39:13"}]},"documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"9908:159:13","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2143,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10081:3:13","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"set","nameLocation":"10101:3:13","nodeType":"VariableDeclaration","scope":2143,"src":"10085:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2125,"nodeType":"UserDefinedTypeName","pathNode":{"id":2124,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"10085:7:13"},"referencedDeclaration":2122,"src":"10085:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"value","nameLocation":"10114:5:13","nodeType":"VariableDeclaration","scope":2143,"src":"10106:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"10106:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10084:36:13"},"returnParameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2143,"src":"10139:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2130,"name":"bool","nodeType":"ElementaryTypeName","src":"10139:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10138:6:13"},"scope":2252,"src":"10072:129:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2163,"nodeType":"Block","src":"10445:59:13","statements":[{"expression":{"arguments":[{"expression":{"id":2155,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"10470:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"10470:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"10490:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10482:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10482:7:13","typeDescriptions":{}}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10482:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2154,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"10462:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1664_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10462:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2153,"id":2162,"nodeType":"Return","src":"10455:42:13"}]},"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"10207:157:13","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"10378:6:13","nodeType":"FunctionDefinition","parameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"set","nameLocation":"10401:3:13","nodeType":"VariableDeclaration","scope":2164,"src":"10385:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2146,"nodeType":"UserDefinedTypeName","pathNode":{"id":2145,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"10385:7:13"},"referencedDeclaration":2122,"src":"10385:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2149,"mutability":"mutable","name":"value","nameLocation":"10414:5:13","nodeType":"VariableDeclaration","scope":2164,"src":"10406:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"10406:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10384:36:13"},"returnParameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"10439:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2151,"name":"bool","nodeType":"ElementaryTypeName","src":"10439:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10438:6:13"},"scope":2252,"src":"10369:135:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2184,"nodeType":"Block","src":"10668:61:13","statements":[{"expression":{"arguments":[{"expression":{"id":2176,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"10695:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"10695:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"10715:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10707:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10707:7:13","typeDescriptions":{}}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10707:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2175,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"10685:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10685:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2174,"id":2183,"nodeType":"Return","src":"10678:44:13"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"10510:70:13","text":" @dev Returns true if the value is in the set. O(1)."},"id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"10594:8:13","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"set","nameLocation":"10619:3:13","nodeType":"VariableDeclaration","scope":2185,"src":"10603:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"10603:7:13"},"referencedDeclaration":2122,"src":"10603:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"value","nameLocation":"10632:5:13","nodeType":"VariableDeclaration","scope":2185,"src":"10624:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"10624:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10602:36:13"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2185,"src":"10662:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2172,"name":"bool","nodeType":"ElementaryTypeName","src":"10662:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10661:6:13"},"scope":2252,"src":"10585:144:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"10879:43:13","statements":[{"expression":{"arguments":[{"expression":{"id":2195,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"10904:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"10904:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2194,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"10896:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10896:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2193,"id":2198,"nodeType":"Return","src":"10889:26:13"}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"10735:70:13","text":" @dev Returns the number of values on the set. O(1)."},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10819:6:13","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"set","nameLocation":"10842:3:13","nodeType":"VariableDeclaration","scope":2200,"src":"10826:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2188,"nodeType":"UserDefinedTypeName","pathNode":{"id":2187,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"10826:7:13"},"referencedDeclaration":2122,"src":"10826:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"10825:21:13"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"10870:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"10870:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10869:9:13"},"scope":2252,"src":"10810:112:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2220,"nodeType":"Block","src":"11344:55:13","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2214,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"11373:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"11373:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2216,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"11385:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2213,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"11369:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11369:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11361:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"11361:7:13","typeDescriptions":{}}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11361:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2210,"id":2219,"nodeType":"Return","src":"11354:38:13"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"10928:331:13","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2221,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11273:2:13","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"set","nameLocation":"11292:3:13","nodeType":"VariableDeclaration","scope":2221,"src":"11276:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2203,"nodeType":"UserDefinedTypeName","pathNode":{"id":2202,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"11276:7:13"},"referencedDeclaration":2122,"src":"11276:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2206,"mutability":"mutable","name":"index","nameLocation":"11305:5:13","nodeType":"VariableDeclaration","scope":2221,"src":"11297:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"11297:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:36:13"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2221,"src":"11335:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:9:13"},"scope":2252,"src":"11264:135:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2250,"nodeType":"Block","src":"12017:176:13","statements":[{"assignments":[2235],"declarations":[{"constant":false,"id":2235,"mutability":"mutable","name":"store","nameLocation":"12044:5:13","nodeType":"VariableDeclaration","scope":2250,"src":"12027:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12027:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2234,"nodeType":"ArrayTypeName","src":"12027:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2240,"initialValue":{"arguments":[{"expression":{"id":2237,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"12060:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"12060:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1664_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2236,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"12052:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1664_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12052:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12027:44:13"},{"assignments":[2245],"declarations":[{"constant":false,"id":2245,"mutability":"mutable","name":"result","nameLocation":"12098:6:13","nodeType":"VariableDeclaration","scope":2250,"src":"12081:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"12081:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2244,"nodeType":"ArrayTypeName","src":"12081:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2246,"nodeType":"VariableDeclarationStatement","src":"12081:23:13"},{"AST":{"nodeType":"YulBlock","src":"12124:39:13","statements":[{"nodeType":"YulAssignment","src":"12138:15:13","value":{"name":"store","nodeType":"YulIdentifier","src":"12148:5:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12138:6:13"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2245,"isOffset":false,"isSlot":false,"src":"12138:6:13","valueSize":1},{"declaration":2235,"isOffset":false,"isSlot":false,"src":"12148:5:13","valueSize":1}],"id":2247,"nodeType":"InlineAssembly","src":"12115:48:13"},{"expression":{"id":2248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"12180:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2230,"id":2249,"nodeType":"Return","src":"12173:13:13"}]},"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"11405:529:13","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"11948:6:13","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"set","nameLocation":"11971:3:13","nodeType":"VariableDeclaration","scope":2251,"src":"11955:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2224,"nodeType":"UserDefinedTypeName","pathNode":{"id":2223,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"11955:7:13"},"referencedDeclaration":2122,"src":"11955:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2122_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11954:21:13"},"returnParameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2251,"src":"11999:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"11999:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2228,"nodeType":"ArrayTypeName","src":"11999:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11998:18:13"},"scope":2252,"src":"11939:254:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2253,"src":"827:11368:13","usedErrors":[]}],"src":"115:12081:13"},"id":13}},"contracts":{"contracts/Vault.sol":{"Vault":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WITHDRAWER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxWithdrawAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxAmount","type":"uint256"}],"name":"setMaxWithdrawAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"}],"name":"setToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_isEnable","type":"bool"}],"name":"setWithdrawEnable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawEnable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_68":{"entryPoint":null,"id":68,"parameterSlots":0,"returnSlots":0},"@_714":{"entryPoint":null,"id":714,"parameterSlots":0,"returnSlots":0},"@_add_1706":{"entryPoint":794,"id":1706,"parameterSlots":2,"returnSlots":1},"@_contains_1809":{"entryPoint":916,"id":1809,"parameterSlots":2,"returnSlots":1},"@_grantRole_435":{"entryPoint":390,"id":435,"parameterSlots":2,"returnSlots":0},"@_grantRole_567":{"entryPoint":318,"id":567,"parameterSlots":2,"returnSlots":0},"@_msgSender_1404":{"entryPoint":92,"id":1404,"parameterSlots":0,"returnSlots":1},"@_setupRole_375":{"entryPoint":296,"id":375,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_794":{"entryPoint":100,"id":794,"parameterSlots":1,"returnSlots":0},"@add_1992":{"entryPoint":631,"id":1992,"parameterSlots":2,"returnSlots":1},"@hasRole_227":{"entryPoint":687,"id":227,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x32 PUSH3 0x26 PUSH3 0x5C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x64 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x56 PUSH1 0x0 DUP1 SHL PUSH3 0x4A PUSH3 0x5C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3B7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x13A DUP3 DUP3 PUSH3 0x13E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x155 DUP3 DUP3 PUSH3 0x186 PUSH1 0x20 SHL PUSH3 0xCBF OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x181 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x277 PUSH1 0x20 SHL PUSH3 0xD9F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x198 DUP3 DUP3 PUSH3 0x2AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x273 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x218 PUSH3 0x5C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A7 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x31A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x32E DUP4 DUP4 PUSH3 0x394 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x389 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x38E JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2758 DUP1 PUSH3 0x3C7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9010D07C GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xDF74E028 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xF516440C EQ PUSH2 0x39E JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x9010D07C EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xB5B68AFE EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2FE JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x827A560B EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x85F438C1 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x244 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1B8A JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1B8A JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH2 0x7B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1B8A JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1B8A JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E2 PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x431 JUMPI POP PUSH2 0x430 PUSH32 0x10DAC8C06A04BEC0B551627DAD28BC00D6516B0CAACD1C7B345FCDB5211334E4 PUSH2 0x42B PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST JUMPDEST PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP3 GT ISZERO PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FB SWAP1 PUSH2 0x1E46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x561 SWAP3 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x62B JUMPI POP PUSH2 0x62A DUP3 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x63A PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x658 PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71B DUP3 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x724 DUP2 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x72E DUP4 DUP4 PUSH2 0xE65 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x73B PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 DUP3 DUP3 PUSH2 0xE99 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7BE PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7DC PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x829 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83C PUSH1 0x0 PUSH2 0xECD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x846 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x864 PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x10DAC8C06A04BEC0B551627DAD28BC00D6516B0CAACD1C7B345FCDB5211334E4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94B DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF91 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x1FE4 JUMP JUMPDEST LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xFAB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB13 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB23 DUP3 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xB2C DUP2 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xB36 DUP4 DUP4 PUSH2 0xE99 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB43 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB61 PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAE SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xBC9 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE7 PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC34 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA4 SWAP1 PUSH2 0x20EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP2 PUSH2 0xECD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCC9 DUP3 DUP3 PUSH2 0x953 JUMP JUMPDEST PUSH2 0xD9B JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD40 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC7 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1049 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xE4A JUMPI POP PUSH2 0xE49 DUP3 PUSH2 0x10B9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE62 DUP2 PUSH2 0xE5D PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x1123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE6F DUP3 DUP3 PUSH2 0xCBF JUMP JUMPDEST PUSH2 0xE94 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xD9F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xEA3 DUP3 DUP3 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0xEC8 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x12A2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA0 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102E DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xFCC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x210F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12FD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1042 DUP3 PUSH1 0x0 ADD PUSH2 0x13C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1055 DUP4 DUP4 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x10AE JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112D DUP3 DUP3 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x11BC JUMPI PUSH2 0x1152 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x1160 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1171 SWAP3 SWAP2 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11CA DUP3 DUP3 PUSH2 0x953 JUMP JUMPDEST ISZERO PUSH2 0x129E JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1243 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CA DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1634 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12EA JUMPI PUSH2 0x12E9 PUSH2 0x22FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1748 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x13BF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x137F SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST PUSH2 0x13BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B5 SWAP1 PUSH2 0x239F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x140B SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x2448 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x142E JUMPI PUSH2 0x142D PUSH2 0x249E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1460 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1498 JUMPI PUSH2 0x1497 PUSH2 0x22FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x14FC JUMPI PUSH2 0x14FB PUSH2 0x22FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x153C SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x1546 SWAP2 SWAP1 PUSH2 0x2448 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x15E6 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1588 JUMPI PUSH2 0x1587 PUSH2 0x22FE JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x159F JUMPI PUSH2 0x159E PUSH2 0x22FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x15DF SWAP1 PUSH2 0x24CD JUMP JUMPDEST SWAP1 POP PUSH2 0x1549 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1621 SWAP1 PUSH2 0x2543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x173C JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1666 SWAP2 SWAP1 PUSH2 0x2563 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x167E SWAP2 SWAP1 PUSH2 0x2563 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x16ED JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x169F JUMPI PUSH2 0x169E PUSH2 0x22FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x16C3 JUMPI PUSH2 0x16C2 PUSH2 0x22FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1701 JUMPI PUSH2 0x1700 PUSH2 0x2597 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1757 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1760 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179C SWAP1 PUSH2 0x2638 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17AE DUP6 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x17ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E4 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1816 SWAP2 SWAP1 PUSH2 0x270B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1853 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1868 DUP3 DUP3 DUP7 PUSH2 0x1897 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x18A7 JUMPI DUP3 SWAP1 POP PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x18BA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1916 DUP2 PUSH2 0x1903 JUMP JUMPDEST DUP2 EQ PUSH2 0x1921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1933 DUP2 PUSH2 0x190D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1964 DUP3 PUSH2 0x1939 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1974 DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP2 EQ PUSH2 0x197F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1991 DUP2 PUSH2 0x196B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AE JUMPI PUSH2 0x19AD PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BC DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19CD DUP6 DUP3 DUP7 ADD PUSH2 0x1982 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0C DUP2 PUSH2 0x19D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A29 DUP2 PUSH2 0x1A03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A53 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A71 DUP2 PUSH2 0x1A5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9D DUP3 PUSH2 0x1959 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAD DUP2 PUSH2 0x1A92 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACA DUP2 PUSH2 0x1AA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH2 0x1AE5 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x1AFD JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2D DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH2 0x1B48 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B57 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B69 DUP2 PUSH2 0x1AFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B84 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA1 JUMPI PUSH2 0x1BA0 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BAF DUP6 DUP3 DUP7 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1982 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD3 DUP2 PUSH2 0x1A5C JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF0 DUP2 PUSH2 0x1BCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0C JUMPI PUSH2 0x1C0B PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C1A DUP5 DUP3 DUP6 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C2C DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C47 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C63 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C72 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C83 DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA2 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CB1 DUP5 DUP3 DUP6 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC3 DUP2 PUSH2 0x1903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFA JUMPI PUSH2 0x1CF9 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D08 DUP5 DUP3 DUP6 ADD PUSH2 0x1982 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612077697468647261776572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D58 PUSH1 0x1A DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D63 DUP3 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D87 DUP2 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177206973206E6F7420617661696C61626C6500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC4 PUSH1 0x19 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCF DUP3 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF3 DUP2 PUSH2 0x1DB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457863656564206D6178696D756D20616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E30 PUSH1 0x15 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E3B DUP3 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E5F DUP2 PUSH2 0x1E23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E7B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0x1E88 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E9E DUP2 PUSH2 0x1BCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EBA JUMPI PUSH2 0x1EB9 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC8 DUP5 DUP3 DUP6 ADD PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F07 PUSH1 0x20 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F12 DUP3 PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F36 DUP2 PUSH2 0x1EFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F99 PUSH1 0x2F DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA4 DUP3 PUSH2 0x1F3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC8 DUP2 PUSH2 0x1F8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FDE DUP2 PUSH2 0x190D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FFA JUMPI PUSH2 0x1FF9 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2008 DUP5 DUP3 DUP6 ADD PUSH2 0x1FCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206163636F756E742062616C616E636500000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2047 PUSH1 0x1C DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2052 DUP3 PUSH2 0x2011 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2076 DUP2 PUSH2 0x203A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D9 PUSH1 0x26 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E4 DUP3 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2108 DUP2 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2124 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0x2131 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0x213E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2187 PUSH1 0x17 DUP4 PUSH2 0x2146 JUMP JUMPDEST SWAP2 POP PUSH2 0x2192 DUP3 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21AB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x21D5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E6 DUP3 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x21F0 DUP2 DUP6 PUSH2 0x2146 JUMP JUMPDEST SWAP4 POP PUSH2 0x2200 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21A8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2242 PUSH1 0x11 DUP4 PUSH2 0x2146 JUMP JUMPDEST SWAP2 POP PUSH2 0x224D DUP3 PUSH2 0x220C JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2263 DUP3 PUSH2 0x217A JUMP JUMPDEST SWAP2 POP PUSH2 0x226F DUP3 DUP6 PUSH2 0x21DB JUMP JUMPDEST SWAP2 POP PUSH2 0x227A DUP3 PUSH2 0x2235 JUMP JUMPDEST SWAP2 POP PUSH2 0x2286 DUP3 DUP5 PUSH2 0x21DB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22AE DUP3 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x22B8 DUP2 DUP6 PUSH2 0x1D11 JUMP JUMPDEST SWAP4 POP PUSH2 0x22C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x22D1 DUP2 PUSH2 0x2292 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F6 DUP2 DUP5 PUSH2 0x22A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2389 PUSH1 0x2A DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2394 DUP3 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B8 DUP2 PUSH2 0x237C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23F9 DUP3 PUSH2 0x1903 JUMP JUMPDEST SWAP2 POP PUSH2 0x2404 DUP4 PUSH2 0x1903 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x243D JUMPI PUSH2 0x243C PUSH2 0x23BF JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2453 DUP3 PUSH2 0x1903 JUMP JUMPDEST SWAP2 POP PUSH2 0x245E DUP4 PUSH2 0x1903 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2493 JUMPI PUSH2 0x2492 PUSH2 0x23BF JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24D8 DUP3 PUSH2 0x1903 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x24EC JUMPI PUSH2 0x24EB PUSH2 0x23BF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252D PUSH1 0x20 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2538 DUP3 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x255C DUP2 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256E DUP3 PUSH2 0x1903 JUMP JUMPDEST SWAP2 POP PUSH2 0x2579 DUP4 PUSH2 0x1903 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x258C JUMPI PUSH2 0x258B PUSH2 0x23BF JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2622 PUSH1 0x26 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x262D DUP3 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2651 DUP2 PUSH2 0x2615 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x268E PUSH1 0x1D DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2699 DUP3 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26BD DUP2 PUSH2 0x2681 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E5 DUP3 PUSH2 0x26C4 JUMP JUMPDEST PUSH2 0x26EF DUP2 DUP6 PUSH2 0x26CF JUMP JUMPDEST SWAP4 POP PUSH2 0x26FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21A8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2717 DUP3 DUP5 PUSH2 0x26DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xBC LOG3 0x4C ADDMOD SIGNEXTEND 0xD5 0xD0 0xD3 0xA6 TIMESTAMP 0xDB 0x28 0xD5 0x23 DUP4 PUSH1 0xEB 0xC 0xC8 LOG2 PUSH15 0x8A192D280514CFDDFAF164736F6C63 NUMBER STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"343:1312:0:-:0;;;886:75;;;;;;;;;;921:32:5;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;910:44:0;2072:4:1;921:18:0;;941:12;:10;;;:12;;:::i;:::-;910:10;;;:44;;:::i;:::-;343:1312;;640:96:9;693:7;719:10;712:17;;640:96;:::o;2270:187:5:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;6640:110:1:-;6718:25;6729:4;6735:7;6718:10;;;:25;;:::i;:::-;6640:110;;:::o;1978:166:2:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106;2129:7;2106:12;:18;2119:4;2106:18;;;;;;;;;;;:22;;;;;;:31;;;;:::i;:::-;;1978:166;;:::o;7244:233:1:-;7327:22;7335:4;7341:7;7327;;;:22;;:::i;:::-;7322:149;;7397:4;7365:6;:12;7372:4;7365:12;;;;;;;;;;;:20;;:29;7386:7;7365:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7447:12;:10;;;:12;;:::i;:::-;7420:40;;7438:7;7420:40;;7432:4;7420:40;;;;;;;;;;7322:149;7244:233;;:::o;7627:150:13:-;7697:4;7720:50;7725:3;:10;;7761:5;7745:23;;7737:32;;7720:4;;;:50;;:::i;:::-;7713:57;;7627:150;;;;:::o;2895:145:1:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;1712:404:13:-;1775:4;1796:21;1806:3;1811:5;1796:9;;;:21;;:::i;:::-;1791:319;;1833:3;:11;;1850:5;1833:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:3;:11;;:18;;;;1991:3;:12;;:19;2004:5;1991:19;;;;;;;;;;;:40;;;;2052:4;2045:11;;;;1791:319;2094:5;2087:12;;1712:404;;;;;:::o;3753:127::-;3826:4;3872:1;3849:3;:12;;:19;3862:5;3849:19;;;;;;;;;;;;:24;;3842:31;;3753:127;;;;:::o;343:1312:0:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_175":{"entryPoint":2494,"id":175,"parameterSlots":0,"returnSlots":0},"@WITHDRAWER_ROLE_21":{"entryPoint":2263,"id":21,"parameterSlots":0,"returnSlots":0},"@_add_1706":{"entryPoint":4169,"id":1706,"parameterSlots":2,"returnSlots":1},"@_at_1840":{"entryPoint":4818,"id":1840,"parameterSlots":2,"returnSlots":1},"@_callOptionalReturn_1096":{"entryPoint":4861,"id":1096,"parameterSlots":2,"returnSlots":0},"@_checkRole_240":{"entryPoint":3665,"id":240,"parameterSlots":1,"returnSlots":0},"@_checkRole_283":{"entryPoint":4387,"id":283,"parameterSlots":2,"returnSlots":0},"@_contains_1809":{"entryPoint":5077,"id":1809,"parameterSlots":2,"returnSlots":1},"@_grantRole_435":{"entryPoint":3263,"id":435,"parameterSlots":2,"returnSlots":0},"@_grantRole_567":{"entryPoint":3685,"id":567,"parameterSlots":2,"returnSlots":0},"@_length_1823":{"entryPoint":5060,"id":1823,"parameterSlots":1,"returnSlots":1},"@_msgSender_1404":{"entryPoint":3535,"id":1404,"parameterSlots":0,"returnSlots":1},"@_remove_1790":{"entryPoint":5684,"id":1790,"parameterSlots":2,"returnSlots":1},"@_revokeRole_466":{"entryPoint":4544,"id":466,"parameterSlots":2,"returnSlots":0},"@_revokeRole_591":{"entryPoint":3737,"id":591,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_794":{"entryPoint":3789,"id":794,"parameterSlots":1,"returnSlots":0},"@add_1992":{"entryPoint":3487,"id":1992,"parameterSlots":2,"returnSlots":1},"@at_2088":{"entryPoint":3985,"id":2088,"parameterSlots":2,"returnSlots":1},"@deposit_127":{"entryPoint":2520,"id":127,"parameterSlots":1,"returnSlots":0},"@functionCallWithValue_1256":{"entryPoint":5984,"id":1256,"parameterSlots":4,"returnSlots":1},"@functionCall_1186":{"entryPoint":5960,"id":1186,"parameterSlots":3,"returnSlots":1},"@getRoleAdmin_298":{"entryPoint":1778,"id":298,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_543":{"entryPoint":2806,"id":543,"parameterSlots":1,"returnSlots":1},"@getRoleMember_527":{"entryPoint":2340,"id":527,"parameterSlots":2,"returnSlots":1},"@grantRole_318":{"entryPoint":1810,"id":318,"parameterSlots":2,"returnSlots":0},"@hasRole_227":{"entryPoint":2387,"id":227,"parameterSlots":2,"returnSlots":1},"@isContract_1115":{"entryPoint":6260,"id":1115,"parameterSlots":1,"returnSlots":1},"@length_2061":{"entryPoint":4148,"id":2061,"parameterSlots":1,"returnSlots":1},"@maxWithdrawAmount_14":{"entryPoint":3257,"id":14,"parameterSlots":0,"returnSlots":0},"@owner_723":{"entryPoint":2299,"id":723,"parameterSlots":0,"returnSlots":1},"@remove_2019":{"entryPoint":4770,"id":2019,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_751":{"entryPoint":1974,"id":751,"parameterSlots":0,"returnSlots":0},"@renounceRole_361":{"entryPoint":1843,"id":361,"parameterSlots":2,"returnSlots":0},"@revokeRole_338":{"entryPoint":2842,"id":338,"parameterSlots":2,"returnSlots":0},"@safeTransferFrom_930":{"entryPoint":4011,"id":930,"parameterSlots":4,"returnSlots":0},"@setMaxWithdrawAmount_45":{"entryPoint":2875,"id":45,"parameterSlots":1,"returnSlots":0},"@setToken_58":{"entryPoint":1586,"id":58,"parameterSlots":1,"returnSlots":0},"@setWithdrawEnable_33":{"entryPoint":2110,"id":33,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1640":{"entryPoint":4281,"id":1640,"parameterSlots":1,"returnSlots":1},"@supportsInterface_208":{"entryPoint":3543,"id":208,"parameterSlots":1,"returnSlots":1},"@supportsInterface_508":{"entryPoint":1464,"id":508,"parameterSlots":1,"returnSlots":1},"@toHexString_1616":{"entryPoint":5112,"id":1616,"parameterSlots":2,"returnSlots":1},"@transferOwnership_774":{"entryPoint":3009,"id":774,"parameterSlots":1,"returnSlots":0},"@verifyCallResult_1391":{"entryPoint":6295,"id":1391,"parameterSlots":3,"returnSlots":1},"@withdrawEnable_16":{"entryPoint":2501,"id":16,"parameterSlots":0,"returnSlots":0},"@withdraw_97":{"entryPoint":956,"id":97,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address":{"entryPoint":6530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":7823,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":6942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$873":{"entryPoint":6843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":8143,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool":{"entryPoint":7158,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":6963,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":7050,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":7245,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$873":{"entryPoint":6864,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7309,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":6551,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7203,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6760,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7008,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8667,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b_to_t_string_memory_ptr_fromStack":{"entryPoint":7715,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":9504,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":8396,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack":{"entryPoint":9749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b_to_t_string_memory_ptr_fromStack":{"entryPoint":8250,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":7930,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack":{"entryPoint":7499,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62_to_t_string_memory_ptr_fromStack":{"entryPoint":7607,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":9857,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8570,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":9084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8757,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":8076,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7354,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8792,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":8463,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7782,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":7023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7750,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9539,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8431,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9784,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8285,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7965,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7642,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9892,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9119,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8111,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7369,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":9924,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8605,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9935,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7441,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8518,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9288,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":9198,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9571,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6489,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6748,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6909,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6615,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$873":{"entryPoint":6802,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6457,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6403,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":8616,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":9421,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9151,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":9623,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8958,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9374,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6398,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8850,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b":{"entryPoint":7674,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":9463,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":8317,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c":{"entryPoint":9670,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b":{"entryPoint":8209,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":7889,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73":{"entryPoint":7458,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62":{"entryPoint":7566,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":9816,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":8529,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd":{"entryPoint":9005,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":8716,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":7997,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6507,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7114,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":6919,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6659,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$873":{"entryPoint":6820,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6413,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:27172:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:32:14","statements":[{"nodeType":"YulAssignment","src":"389:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:77:14"},{"body":{"nodeType":"YulBlock","src":"460:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:14"},"nodeType":"YulFunctionCall","src":"519:12:14"},"nodeType":"YulExpressionStatement","src":"519:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:14"},"nodeType":"YulFunctionCall","src":"490:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:14"},"nodeType":"YulFunctionCall","src":"480:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:14"},"nodeType":"YulFunctionCall","src":"473:43:14"},"nodeType":"YulIf","src":"470:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:14","type":""}],"src":"417:122:14"},{"body":{"nodeType":"YulBlock","src":"597:87:14","statements":[{"nodeType":"YulAssignment","src":"607:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:14"},"nodeType":"YulFunctionCall","src":"616:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:14"},"nodeType":"YulFunctionCall","src":"645:33:14"},"nodeType":"YulExpressionStatement","src":"645:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:14","type":""}],"src":"545:139:14"},{"body":{"nodeType":"YulBlock","src":"735:81:14","statements":[{"nodeType":"YulAssignment","src":"745:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"760:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"767:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"756:3:14"},"nodeType":"YulFunctionCall","src":"756:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"745:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"717:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"727:7:14","type":""}],"src":"690:126:14"},{"body":{"nodeType":"YulBlock","src":"867:51:14","statements":[{"nodeType":"YulAssignment","src":"877:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"906:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"888:17:14"},"nodeType":"YulFunctionCall","src":"888:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"877:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"849:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"859:7:14","type":""}],"src":"822:96:14"},{"body":{"nodeType":"YulBlock","src":"967:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:14"},"nodeType":"YulFunctionCall","src":"1026:12:14"},"nodeType":"YulExpressionStatement","src":"1026:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"997:17:14"},"nodeType":"YulFunctionCall","src":"997:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:14"},"nodeType":"YulFunctionCall","src":"987:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:14"},"nodeType":"YulFunctionCall","src":"980:43:14"},"nodeType":"YulIf","src":"977:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:14","type":""}],"src":"924:122:14"},{"body":{"nodeType":"YulBlock","src":"1104:87:14","statements":[{"nodeType":"YulAssignment","src":"1114:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:14"},"nodeType":"YulFunctionCall","src":"1123:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1152:26:14"},"nodeType":"YulFunctionCall","src":"1152:33:14"},"nodeType":"YulExpressionStatement","src":"1152:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:14","type":""}],"src":"1052:139:14"},{"body":{"nodeType":"YulBlock","src":"1280:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:14"},"nodeType":"YulFunctionCall","src":"1328:79:14"},"nodeType":"YulExpressionStatement","src":"1328:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:14"},"nodeType":"YulFunctionCall","src":"1297:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:14"},"nodeType":"YulFunctionCall","src":"1293:32:14"},"nodeType":"YulIf","src":"1290:119:14"},{"nodeType":"YulBlock","src":"1419:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:14"},"nodeType":"YulFunctionCall","src":"1494:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1473:20:14"},"nodeType":"YulFunctionCall","src":"1473:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:14"}]}]},{"nodeType":"YulBlock","src":"1546:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:14"},"nodeType":"YulFunctionCall","src":"1622:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1601:20:14"},"nodeType":"YulFunctionCall","src":"1601:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:14","type":""}],"src":"1197:474:14"},{"body":{"nodeType":"YulBlock","src":"1721:105:14","statements":[{"nodeType":"YulAssignment","src":"1731:89:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1753:66:14","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:14"},"nodeType":"YulFunctionCall","src":"1742:78:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:14"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:14","type":""}],"src":"1677:149:14"},{"body":{"nodeType":"YulBlock","src":"1874:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"1930:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1939:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1942:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1932:6:14"},"nodeType":"YulFunctionCall","src":"1932:12:14"},"nodeType":"YulExpressionStatement","src":"1932:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1897:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1921:5:14"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"1904:16:14"},"nodeType":"YulFunctionCall","src":"1904:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1894:2:14"},"nodeType":"YulFunctionCall","src":"1894:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1887:6:14"},"nodeType":"YulFunctionCall","src":"1887:42:14"},"nodeType":"YulIf","src":"1884:62:14"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1867:5:14","type":""}],"src":"1832:120:14"},{"body":{"nodeType":"YulBlock","src":"2009:86:14","statements":[{"nodeType":"YulAssignment","src":"2019:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2041:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2028:12:14"},"nodeType":"YulFunctionCall","src":"2028:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2019:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2083:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2057:25:14"},"nodeType":"YulFunctionCall","src":"2057:32:14"},"nodeType":"YulExpressionStatement","src":"2057:32:14"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1987:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1995:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2003:5:14","type":""}],"src":"1958:137:14"},{"body":{"nodeType":"YulBlock","src":"2166:262:14","statements":[{"body":{"nodeType":"YulBlock","src":"2212:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2214:77:14"},"nodeType":"YulFunctionCall","src":"2214:79:14"},"nodeType":"YulExpressionStatement","src":"2214:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2187:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2196:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2183:3:14"},"nodeType":"YulFunctionCall","src":"2183:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2208:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2179:3:14"},"nodeType":"YulFunctionCall","src":"2179:32:14"},"nodeType":"YulIf","src":"2176:119:14"},{"nodeType":"YulBlock","src":"2305:116:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2320:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2334:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2324:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2349:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2383:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2394:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2379:3:14"},"nodeType":"YulFunctionCall","src":"2379:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2403:7:14"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2359:19:14"},"nodeType":"YulFunctionCall","src":"2359:52:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2349:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:14","type":""}],"src":"2101:327:14"},{"body":{"nodeType":"YulBlock","src":"2476:48:14","statements":[{"nodeType":"YulAssignment","src":"2486:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2511:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2504:6:14"},"nodeType":"YulFunctionCall","src":"2504:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2497:6:14"},"nodeType":"YulFunctionCall","src":"2497:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2486:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2458:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2468:7:14","type":""}],"src":"2434:90:14"},{"body":{"nodeType":"YulBlock","src":"2589:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2606:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2626:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2611:14:14"},"nodeType":"YulFunctionCall","src":"2611:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2599:6:14"},"nodeType":"YulFunctionCall","src":"2599:34:14"},"nodeType":"YulExpressionStatement","src":"2599:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2577:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2584:3:14","type":""}],"src":"2530:109:14"},{"body":{"nodeType":"YulBlock","src":"2737:118:14","statements":[{"nodeType":"YulAssignment","src":"2747:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2759:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2770:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2755:3:14"},"nodeType":"YulFunctionCall","src":"2755:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2747:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2821:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2834:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2845:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2830:3:14"},"nodeType":"YulFunctionCall","src":"2830:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2783:37:14"},"nodeType":"YulFunctionCall","src":"2783:65:14"},"nodeType":"YulExpressionStatement","src":"2783:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2709:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2721:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2732:4:14","type":""}],"src":"2645:210:14"},{"body":{"nodeType":"YulBlock","src":"2920:51:14","statements":[{"nodeType":"YulAssignment","src":"2930:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2959:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2941:17:14"},"nodeType":"YulFunctionCall","src":"2941:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2930:7:14"}]}]},"name":"cleanup_t_contract$_IERC20_$873","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2902:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2912:7:14","type":""}],"src":"2861:110:14"},{"body":{"nodeType":"YulBlock","src":"3034:93:14","statements":[{"body":{"nodeType":"YulBlock","src":"3105:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3114:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3117:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3107:6:14"},"nodeType":"YulFunctionCall","src":"3107:12:14"},"nodeType":"YulExpressionStatement","src":"3107:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:14"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$873","nodeType":"YulIdentifier","src":"3064:31:14"},"nodeType":"YulFunctionCall","src":"3064:38:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:14"},"nodeType":"YulFunctionCall","src":"3054:49:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:14"},"nodeType":"YulFunctionCall","src":"3047:57:14"},"nodeType":"YulIf","src":"3044:77:14"}]},"name":"validator_revert_t_contract$_IERC20_$873","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:14","type":""}],"src":"2977:150:14"},{"body":{"nodeType":"YulBlock","src":"3199:101:14","statements":[{"nodeType":"YulAssignment","src":"3209:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3231:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3218:12:14"},"nodeType":"YulFunctionCall","src":"3218:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3209:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3288:5:14"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$873","nodeType":"YulIdentifier","src":"3247:40:14"},"nodeType":"YulFunctionCall","src":"3247:47:14"},"nodeType":"YulExpressionStatement","src":"3247:47:14"}]},"name":"abi_decode_t_contract$_IERC20_$873","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3177:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"3185:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3193:5:14","type":""}],"src":"3133:167:14"},{"body":{"nodeType":"YulBlock","src":"3386:277:14","statements":[{"body":{"nodeType":"YulBlock","src":"3432:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3434:77:14"},"nodeType":"YulFunctionCall","src":"3434:79:14"},"nodeType":"YulExpressionStatement","src":"3434:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3407:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3416:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3403:3:14"},"nodeType":"YulFunctionCall","src":"3403:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3428:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3399:3:14"},"nodeType":"YulFunctionCall","src":"3399:32:14"},"nodeType":"YulIf","src":"3396:119:14"},{"nodeType":"YulBlock","src":"3525:131:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3540:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3554:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3544:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3569:77:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3618:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3629:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:14"},"nodeType":"YulFunctionCall","src":"3614:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3638:7:14"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$873","nodeType":"YulIdentifier","src":"3579:34:14"},"nodeType":"YulFunctionCall","src":"3579:67:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3569:6:14"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$873","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3356:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3367:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3379:6:14","type":""}],"src":"3306:357:14"},{"body":{"nodeType":"YulBlock","src":"3714:32:14","statements":[{"nodeType":"YulAssignment","src":"3724:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"3735:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3724:7:14"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3696:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3706:7:14","type":""}],"src":"3669:77:14"},{"body":{"nodeType":"YulBlock","src":"3795:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"3852:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3861:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3864:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3854:6:14"},"nodeType":"YulFunctionCall","src":"3854:12:14"},"nodeType":"YulExpressionStatement","src":"3854:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3818:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3843:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3825:17:14"},"nodeType":"YulFunctionCall","src":"3825:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3815:2:14"},"nodeType":"YulFunctionCall","src":"3815:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3808:6:14"},"nodeType":"YulFunctionCall","src":"3808:43:14"},"nodeType":"YulIf","src":"3805:63:14"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3788:5:14","type":""}],"src":"3752:122:14"},{"body":{"nodeType":"YulBlock","src":"3932:87:14","statements":[{"nodeType":"YulAssignment","src":"3942:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3964:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3951:12:14"},"nodeType":"YulFunctionCall","src":"3951:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3942:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4007:5:14"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"3980:26:14"},"nodeType":"YulFunctionCall","src":"3980:33:14"},"nodeType":"YulExpressionStatement","src":"3980:33:14"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3910:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"3918:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3926:5:14","type":""}],"src":"3880:139:14"},{"body":{"nodeType":"YulBlock","src":"4091:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"4137:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4139:77:14"},"nodeType":"YulFunctionCall","src":"4139:79:14"},"nodeType":"YulExpressionStatement","src":"4139:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4112:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4121:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4108:3:14"},"nodeType":"YulFunctionCall","src":"4108:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4133:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4104:3:14"},"nodeType":"YulFunctionCall","src":"4104:32:14"},"nodeType":"YulIf","src":"4101:119:14"},{"nodeType":"YulBlock","src":"4230:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4245:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4259:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4249:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4274:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4309:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4320:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4305:3:14"},"nodeType":"YulFunctionCall","src":"4305:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4329:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4284:20:14"},"nodeType":"YulFunctionCall","src":"4284:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4274:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4061:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4072:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4084:6:14","type":""}],"src":"4025:329:14"},{"body":{"nodeType":"YulBlock","src":"4425:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4442:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4465:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4447:17:14"},"nodeType":"YulFunctionCall","src":"4447:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:14"},"nodeType":"YulFunctionCall","src":"4435:37:14"},"nodeType":"YulExpressionStatement","src":"4435:37:14"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4413:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4420:3:14","type":""}],"src":"4360:118:14"},{"body":{"nodeType":"YulBlock","src":"4582:124:14","statements":[{"nodeType":"YulAssignment","src":"4592:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4604:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4615:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4600:3:14"},"nodeType":"YulFunctionCall","src":"4600:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4592:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4672:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4685:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4696:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4681:3:14"},"nodeType":"YulFunctionCall","src":"4681:17:14"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"4628:43:14"},"nodeType":"YulFunctionCall","src":"4628:71:14"},"nodeType":"YulExpressionStatement","src":"4628:71:14"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4554:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4566:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4577:4:14","type":""}],"src":"4484:222:14"},{"body":{"nodeType":"YulBlock","src":"4795:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"4841:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4843:77:14"},"nodeType":"YulFunctionCall","src":"4843:79:14"},"nodeType":"YulExpressionStatement","src":"4843:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4816:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4825:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4812:3:14"},"nodeType":"YulFunctionCall","src":"4812:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4837:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4808:3:14"},"nodeType":"YulFunctionCall","src":"4808:32:14"},"nodeType":"YulIf","src":"4805:119:14"},{"nodeType":"YulBlock","src":"4934:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4949:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4963:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4953:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4978:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5013:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5024:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5009:3:14"},"nodeType":"YulFunctionCall","src":"5009:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5033:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4988:20:14"},"nodeType":"YulFunctionCall","src":"4988:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4978:6:14"}]}]},{"nodeType":"YulBlock","src":"5061:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5076:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5090:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5080:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5106:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5141:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5152:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5137:3:14"},"nodeType":"YulFunctionCall","src":"5137:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5161:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5116:20:14"},"nodeType":"YulFunctionCall","src":"5116:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5106:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4757:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4768:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4780:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4788:6:14","type":""}],"src":"4712:474:14"},{"body":{"nodeType":"YulBlock","src":"5232:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"5286:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5295:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5298:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5288:6:14"},"nodeType":"YulFunctionCall","src":"5288:12:14"},"nodeType":"YulExpressionStatement","src":"5288:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5255:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5277:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5262:14:14"},"nodeType":"YulFunctionCall","src":"5262:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5252:2:14"},"nodeType":"YulFunctionCall","src":"5252:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5245:6:14"},"nodeType":"YulFunctionCall","src":"5245:40:14"},"nodeType":"YulIf","src":"5242:60:14"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5225:5:14","type":""}],"src":"5192:116:14"},{"body":{"nodeType":"YulBlock","src":"5363:84:14","statements":[{"nodeType":"YulAssignment","src":"5373:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5382:12:14"},"nodeType":"YulFunctionCall","src":"5382:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5373:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5435:5:14"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"5411:23:14"},"nodeType":"YulFunctionCall","src":"5411:30:14"},"nodeType":"YulExpressionStatement","src":"5411:30:14"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5341:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"5349:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5357:5:14","type":""}],"src":"5314:133:14"},{"body":{"nodeType":"YulBlock","src":"5516:260:14","statements":[{"body":{"nodeType":"YulBlock","src":"5562:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5564:77:14"},"nodeType":"YulFunctionCall","src":"5564:79:14"},"nodeType":"YulExpressionStatement","src":"5564:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5537:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5546:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5533:3:14"},"nodeType":"YulFunctionCall","src":"5533:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5558:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5529:3:14"},"nodeType":"YulFunctionCall","src":"5529:32:14"},"nodeType":"YulIf","src":"5526:119:14"},{"nodeType":"YulBlock","src":"5655:114:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5670:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5684:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5674:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5699:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5742:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:14"},"nodeType":"YulFunctionCall","src":"5727:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5751:7:14"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"5709:17:14"},"nodeType":"YulFunctionCall","src":"5709:50:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5699:6:14"}]}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5486:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5497:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5509:6:14","type":""}],"src":"5453:323:14"},{"body":{"nodeType":"YulBlock","src":"5847:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5864:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5887:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5869:17:14"},"nodeType":"YulFunctionCall","src":"5869:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5857:6:14"},"nodeType":"YulFunctionCall","src":"5857:37:14"},"nodeType":"YulExpressionStatement","src":"5857:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5835:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5842:3:14","type":""}],"src":"5782:118:14"},{"body":{"nodeType":"YulBlock","src":"6004:124:14","statements":[{"nodeType":"YulAssignment","src":"6014:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6026:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6037:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6022:3:14"},"nodeType":"YulFunctionCall","src":"6022:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6014:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6094:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6107:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6118:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6103:3:14"},"nodeType":"YulFunctionCall","src":"6103:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6050:43:14"},"nodeType":"YulFunctionCall","src":"6050:71:14"},"nodeType":"YulExpressionStatement","src":"6050:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5976:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5988:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5999:4:14","type":""}],"src":"5906:222:14"},{"body":{"nodeType":"YulBlock","src":"6217:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"6263:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6265:77:14"},"nodeType":"YulFunctionCall","src":"6265:79:14"},"nodeType":"YulExpressionStatement","src":"6265:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6238:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6247:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6234:3:14"},"nodeType":"YulFunctionCall","src":"6234:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6259:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6230:3:14"},"nodeType":"YulFunctionCall","src":"6230:32:14"},"nodeType":"YulIf","src":"6227:119:14"},{"nodeType":"YulBlock","src":"6356:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6371:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6385:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6375:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6400:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6435:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6446:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6431:3:14"},"nodeType":"YulFunctionCall","src":"6431:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6455:7:14"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6410:20:14"},"nodeType":"YulFunctionCall","src":"6410:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6400:6:14"}]}]},{"nodeType":"YulBlock","src":"6483:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6498:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6512:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6502:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6528:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6563:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6574:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6559:3:14"},"nodeType":"YulFunctionCall","src":"6559:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6583:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6538:20:14"},"nodeType":"YulFunctionCall","src":"6538:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6528:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6179:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6190:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6202:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6210:6:14","type":""}],"src":"6134:474:14"},{"body":{"nodeType":"YulBlock","src":"6680:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"6726:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6728:77:14"},"nodeType":"YulFunctionCall","src":"6728:79:14"},"nodeType":"YulExpressionStatement","src":"6728:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6701:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6710:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6697:3:14"},"nodeType":"YulFunctionCall","src":"6697:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6722:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6693:3:14"},"nodeType":"YulFunctionCall","src":"6693:32:14"},"nodeType":"YulIf","src":"6690:119:14"},{"nodeType":"YulBlock","src":"6819:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6834:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6848:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6838:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6863:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6898:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6909:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6894:3:14"},"nodeType":"YulFunctionCall","src":"6894:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6918:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6873:20:14"},"nodeType":"YulFunctionCall","src":"6873:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6863:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6650:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6661:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6673:6:14","type":""}],"src":"6614:329:14"},{"body":{"nodeType":"YulBlock","src":"7014:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7031:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7054:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7036:17:14"},"nodeType":"YulFunctionCall","src":"7036:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7024:6:14"},"nodeType":"YulFunctionCall","src":"7024:37:14"},"nodeType":"YulExpressionStatement","src":"7024:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7002:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7009:3:14","type":""}],"src":"6949:118:14"},{"body":{"nodeType":"YulBlock","src":"7171:124:14","statements":[{"nodeType":"YulAssignment","src":"7181:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7193:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7204:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7189:3:14"},"nodeType":"YulFunctionCall","src":"7189:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7181:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7261:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7274:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7285:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7270:3:14"},"nodeType":"YulFunctionCall","src":"7270:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7217:43:14"},"nodeType":"YulFunctionCall","src":"7217:71:14"},"nodeType":"YulExpressionStatement","src":"7217:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7143:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7155:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7166:4:14","type":""}],"src":"7073:222:14"},{"body":{"nodeType":"YulBlock","src":"7367:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"7413:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7415:77:14"},"nodeType":"YulFunctionCall","src":"7415:79:14"},"nodeType":"YulExpressionStatement","src":"7415:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7388:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7397:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7384:3:14"},"nodeType":"YulFunctionCall","src":"7384:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"7409:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7380:3:14"},"nodeType":"YulFunctionCall","src":"7380:32:14"},"nodeType":"YulIf","src":"7377:119:14"},{"nodeType":"YulBlock","src":"7506:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7521:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7535:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7525:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7550:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7585:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7596:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7581:3:14"},"nodeType":"YulFunctionCall","src":"7581:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7605:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7560:20:14"},"nodeType":"YulFunctionCall","src":"7560:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7550:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7337:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7348:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7360:6:14","type":""}],"src":"7301:329:14"},{"body":{"nodeType":"YulBlock","src":"7732:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7749:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7754:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7742:6:14"},"nodeType":"YulFunctionCall","src":"7742:19:14"},"nodeType":"YulExpressionStatement","src":"7742:19:14"},{"nodeType":"YulAssignment","src":"7770:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7789:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7794:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7785:3:14"},"nodeType":"YulFunctionCall","src":"7785:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7770:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7704:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"7709:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7720:11:14","type":""}],"src":"7636:169:14"},{"body":{"nodeType":"YulBlock","src":"7917:70:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7939:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7947:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7935:3:14"},"nodeType":"YulFunctionCall","src":"7935:14:14"},{"hexValue":"43616c6c6572206973206e6f7420612077697468647261776572","kind":"string","nodeType":"YulLiteral","src":"7951:28:14","type":"","value":"Caller is not a withdrawer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7928:6:14"},"nodeType":"YulFunctionCall","src":"7928:52:14"},"nodeType":"YulExpressionStatement","src":"7928:52:14"}]},"name":"store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7909:6:14","type":""}],"src":"7811:176:14"},{"body":{"nodeType":"YulBlock","src":"8139:220:14","statements":[{"nodeType":"YulAssignment","src":"8149:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8215:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8220:2:14","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8156:58:14"},"nodeType":"YulFunctionCall","src":"8156:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8149:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8321:3:14"}],"functionName":{"name":"store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73","nodeType":"YulIdentifier","src":"8232:88:14"},"nodeType":"YulFunctionCall","src":"8232:93:14"},"nodeType":"YulExpressionStatement","src":"8232:93:14"},{"nodeType":"YulAssignment","src":"8334:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8345:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8350:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8341:3:14"},"nodeType":"YulFunctionCall","src":"8341:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8334:3:14"}]}]},"name":"abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8127:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8135:3:14","type":""}],"src":"7993:366:14"},{"body":{"nodeType":"YulBlock","src":"8536:248:14","statements":[{"nodeType":"YulAssignment","src":"8546:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8558:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8569:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8554:3:14"},"nodeType":"YulFunctionCall","src":"8554:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8546:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8593:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8604:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8589:3:14"},"nodeType":"YulFunctionCall","src":"8589:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8612:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"8618:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8608:3:14"},"nodeType":"YulFunctionCall","src":"8608:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8582:6:14"},"nodeType":"YulFunctionCall","src":"8582:47:14"},"nodeType":"YulExpressionStatement","src":"8582:47:14"},{"nodeType":"YulAssignment","src":"8638:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8772:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8646:124:14"},"nodeType":"YulFunctionCall","src":"8646:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8638:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8516:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8531:4:14","type":""}],"src":"8365:419:14"},{"body":{"nodeType":"YulBlock","src":"8896:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8918:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8926:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8914:3:14"},"nodeType":"YulFunctionCall","src":"8914:14:14"},{"hexValue":"5769746864726177206973206e6f7420617661696c61626c65","kind":"string","nodeType":"YulLiteral","src":"8930:27:14","type":"","value":"Withdraw is not available"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8907:6:14"},"nodeType":"YulFunctionCall","src":"8907:51:14"},"nodeType":"YulExpressionStatement","src":"8907:51:14"}]},"name":"store_literal_in_memory_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8888:6:14","type":""}],"src":"8790:175:14"},{"body":{"nodeType":"YulBlock","src":"9117:220:14","statements":[{"nodeType":"YulAssignment","src":"9127:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9193:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9198:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9134:58:14"},"nodeType":"YulFunctionCall","src":"9134:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9127:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9299:3:14"}],"functionName":{"name":"store_literal_in_memory_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62","nodeType":"YulIdentifier","src":"9210:88:14"},"nodeType":"YulFunctionCall","src":"9210:93:14"},"nodeType":"YulExpressionStatement","src":"9210:93:14"},{"nodeType":"YulAssignment","src":"9312:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9323:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9328:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9319:3:14"},"nodeType":"YulFunctionCall","src":"9319:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9312:3:14"}]}]},"name":"abi_encode_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9105:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9113:3:14","type":""}],"src":"8971:366:14"},{"body":{"nodeType":"YulBlock","src":"9514:248:14","statements":[{"nodeType":"YulAssignment","src":"9524:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9536:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9547:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9532:3:14"},"nodeType":"YulFunctionCall","src":"9532:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9524:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9571:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9582:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9567:3:14"},"nodeType":"YulFunctionCall","src":"9567:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9590:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9596:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9586:3:14"},"nodeType":"YulFunctionCall","src":"9586:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9560:6:14"},"nodeType":"YulFunctionCall","src":"9560:47:14"},"nodeType":"YulExpressionStatement","src":"9560:47:14"},{"nodeType":"YulAssignment","src":"9616:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9750:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9624:124:14"},"nodeType":"YulFunctionCall","src":"9624:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9616:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9494:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9509:4:14","type":""}],"src":"9343:419:14"},{"body":{"nodeType":"YulBlock","src":"9874:65:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9896:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9904:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9892:3:14"},"nodeType":"YulFunctionCall","src":"9892:14:14"},{"hexValue":"457863656564206d6178696d756d20616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"9908:23:14","type":"","value":"Exceed maximum amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9885:6:14"},"nodeType":"YulFunctionCall","src":"9885:47:14"},"nodeType":"YulExpressionStatement","src":"9885:47:14"}]},"name":"store_literal_in_memory_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9866:6:14","type":""}],"src":"9768:171:14"},{"body":{"nodeType":"YulBlock","src":"10091:220:14","statements":[{"nodeType":"YulAssignment","src":"10101:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10167:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10172:2:14","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10108:58:14"},"nodeType":"YulFunctionCall","src":"10108:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10101:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10273:3:14"}],"functionName":{"name":"store_literal_in_memory_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b","nodeType":"YulIdentifier","src":"10184:88:14"},"nodeType":"YulFunctionCall","src":"10184:93:14"},"nodeType":"YulExpressionStatement","src":"10184:93:14"},{"nodeType":"YulAssignment","src":"10286:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10297:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10302:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10293:3:14"},"nodeType":"YulFunctionCall","src":"10293:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10286:3:14"}]}]},"name":"abi_encode_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10079:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10087:3:14","type":""}],"src":"9945:366:14"},{"body":{"nodeType":"YulBlock","src":"10488:248:14","statements":[{"nodeType":"YulAssignment","src":"10498:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10510:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10521:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10506:3:14"},"nodeType":"YulFunctionCall","src":"10506:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10498:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10545:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10556:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10541:3:14"},"nodeType":"YulFunctionCall","src":"10541:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10564:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10570:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10560:3:14"},"nodeType":"YulFunctionCall","src":"10560:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10534:6:14"},"nodeType":"YulFunctionCall","src":"10534:47:14"},"nodeType":"YulExpressionStatement","src":"10534:47:14"},{"nodeType":"YulAssignment","src":"10590:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10724:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10598:124:14"},"nodeType":"YulFunctionCall","src":"10598:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10590:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10468:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10483:4:14","type":""}],"src":"10317:419:14"},{"body":{"nodeType":"YulBlock","src":"10868:206:14","statements":[{"nodeType":"YulAssignment","src":"10878:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10890:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10901:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10886:3:14"},"nodeType":"YulFunctionCall","src":"10886:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10878:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10958:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10971:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10982:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10967:3:14"},"nodeType":"YulFunctionCall","src":"10967:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10914:43:14"},"nodeType":"YulFunctionCall","src":"10914:71:14"},"nodeType":"YulExpressionStatement","src":"10914:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11039:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11052:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11063:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11048:3:14"},"nodeType":"YulFunctionCall","src":"11048:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10995:43:14"},"nodeType":"YulFunctionCall","src":"10995:72:14"},"nodeType":"YulExpressionStatement","src":"10995:72:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10832:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10844:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10852:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10863:4:14","type":""}],"src":"10742:332:14"},{"body":{"nodeType":"YulBlock","src":"11140:77:14","statements":[{"nodeType":"YulAssignment","src":"11150:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11165:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11159:5:14"},"nodeType":"YulFunctionCall","src":"11159:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11150:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11205:5:14"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11181:23:14"},"nodeType":"YulFunctionCall","src":"11181:30:14"},"nodeType":"YulExpressionStatement","src":"11181:30:14"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11118:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"11126:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11134:5:14","type":""}],"src":"11080:137:14"},{"body":{"nodeType":"YulBlock","src":"11297:271:14","statements":[{"body":{"nodeType":"YulBlock","src":"11343:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11345:77:14"},"nodeType":"YulFunctionCall","src":"11345:79:14"},"nodeType":"YulExpressionStatement","src":"11345:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11318:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11327:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11314:3:14"},"nodeType":"YulFunctionCall","src":"11314:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"11339:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11310:3:14"},"nodeType":"YulFunctionCall","src":"11310:32:14"},"nodeType":"YulIf","src":"11307:119:14"},{"nodeType":"YulBlock","src":"11436:125:14","statements":[{"nodeType":"YulVariableDeclaration","src":"11451:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"11465:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11455:6:14","type":""}]},{"nodeType":"YulAssignment","src":"11480:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11523:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"11534:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11519:3:14"},"nodeType":"YulFunctionCall","src":"11519:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11543:7:14"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"11490:28:14"},"nodeType":"YulFunctionCall","src":"11490:61:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11480:6:14"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11267:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11278:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11290:6:14","type":""}],"src":"11223:345:14"},{"body":{"nodeType":"YulBlock","src":"11680:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11702:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11710:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11698:3:14"},"nodeType":"YulFunctionCall","src":"11698:14:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11714:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11691:6:14"},"nodeType":"YulFunctionCall","src":"11691:58:14"},"nodeType":"YulExpressionStatement","src":"11691:58:14"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11672:6:14","type":""}],"src":"11574:182:14"},{"body":{"nodeType":"YulBlock","src":"11908:220:14","statements":[{"nodeType":"YulAssignment","src":"11918:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11984:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11989:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11925:58:14"},"nodeType":"YulFunctionCall","src":"11925:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11918:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12090:3:14"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"12001:88:14"},"nodeType":"YulFunctionCall","src":"12001:93:14"},"nodeType":"YulExpressionStatement","src":"12001:93:14"},{"nodeType":"YulAssignment","src":"12103:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12114:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12119:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12110:3:14"},"nodeType":"YulFunctionCall","src":"12110:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12103:3:14"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11896:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11904:3:14","type":""}],"src":"11762:366:14"},{"body":{"nodeType":"YulBlock","src":"12305:248:14","statements":[{"nodeType":"YulAssignment","src":"12315:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12327:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12338:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12323:3:14"},"nodeType":"YulFunctionCall","src":"12323:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12315:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12362:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12373:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12358:3:14"},"nodeType":"YulFunctionCall","src":"12358:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12381:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12387:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12377:3:14"},"nodeType":"YulFunctionCall","src":"12377:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12351:6:14"},"nodeType":"YulFunctionCall","src":"12351:47:14"},"nodeType":"YulExpressionStatement","src":"12351:47:14"},{"nodeType":"YulAssignment","src":"12407:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12541:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12415:124:14"},"nodeType":"YulFunctionCall","src":"12415:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12407:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12285:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12300:4:14","type":""}],"src":"12134:419:14"},{"body":{"nodeType":"YulBlock","src":"12665:128:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12687:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12695:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12683:3:14"},"nodeType":"YulFunctionCall","src":"12683:14:14"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"12699:34:14","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12676:6:14"},"nodeType":"YulFunctionCall","src":"12676:58:14"},"nodeType":"YulExpressionStatement","src":"12676:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12755:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12763:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12751:3:14"},"nodeType":"YulFunctionCall","src":"12751:15:14"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"12768:17:14","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12744:6:14"},"nodeType":"YulFunctionCall","src":"12744:42:14"},"nodeType":"YulExpressionStatement","src":"12744:42:14"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12657:6:14","type":""}],"src":"12559:234:14"},{"body":{"nodeType":"YulBlock","src":"12945:220:14","statements":[{"nodeType":"YulAssignment","src":"12955:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13021:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13026:2:14","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12962:58:14"},"nodeType":"YulFunctionCall","src":"12962:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12955:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:14"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"13038:88:14"},"nodeType":"YulFunctionCall","src":"13038:93:14"},"nodeType":"YulExpressionStatement","src":"13038:93:14"},{"nodeType":"YulAssignment","src":"13140:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13151:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13156:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13147:3:14"},"nodeType":"YulFunctionCall","src":"13147:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13140:3:14"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12933:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12941:3:14","type":""}],"src":"12799:366:14"},{"body":{"nodeType":"YulBlock","src":"13342:248:14","statements":[{"nodeType":"YulAssignment","src":"13352:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13364:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13375:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13360:3:14"},"nodeType":"YulFunctionCall","src":"13360:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13352:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13399:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13410:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13395:3:14"},"nodeType":"YulFunctionCall","src":"13395:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13418:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13424:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13414:3:14"},"nodeType":"YulFunctionCall","src":"13414:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13388:6:14"},"nodeType":"YulFunctionCall","src":"13388:47:14"},"nodeType":"YulExpressionStatement","src":"13388:47:14"},{"nodeType":"YulAssignment","src":"13444:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13578:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13452:124:14"},"nodeType":"YulFunctionCall","src":"13452:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13444:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13322:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13337:4:14","type":""}],"src":"13171:419:14"},{"body":{"nodeType":"YulBlock","src":"13659:80:14","statements":[{"nodeType":"YulAssignment","src":"13669:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13684:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13678:5:14"},"nodeType":"YulFunctionCall","src":"13678:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13669:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13727:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"13700:26:14"},"nodeType":"YulFunctionCall","src":"13700:33:14"},"nodeType":"YulExpressionStatement","src":"13700:33:14"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13637:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"13645:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13653:5:14","type":""}],"src":"13596:143:14"},{"body":{"nodeType":"YulBlock","src":"13822:274:14","statements":[{"body":{"nodeType":"YulBlock","src":"13868:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13870:77:14"},"nodeType":"YulFunctionCall","src":"13870:79:14"},"nodeType":"YulExpressionStatement","src":"13870:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13843:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13852:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13839:3:14"},"nodeType":"YulFunctionCall","src":"13839:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"13864:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13835:3:14"},"nodeType":"YulFunctionCall","src":"13835:32:14"},"nodeType":"YulIf","src":"13832:119:14"},{"nodeType":"YulBlock","src":"13961:128:14","statements":[{"nodeType":"YulVariableDeclaration","src":"13976:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"13990:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13980:6:14","type":""}]},{"nodeType":"YulAssignment","src":"14005:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14051:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"14062:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14047:3:14"},"nodeType":"YulFunctionCall","src":"14047:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14071:7:14"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"14015:31:14"},"nodeType":"YulFunctionCall","src":"14015:64:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14005:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13792:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13803:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13815:6:14","type":""}],"src":"13745:351:14"},{"body":{"nodeType":"YulBlock","src":"14208:72:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14230:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14238:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14226:3:14"},"nodeType":"YulFunctionCall","src":"14226:14:14"},{"hexValue":"496e73756666696369656e74206163636f756e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"14242:30:14","type":"","value":"Insufficient account balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14219:6:14"},"nodeType":"YulFunctionCall","src":"14219:54:14"},"nodeType":"YulExpressionStatement","src":"14219:54:14"}]},"name":"store_literal_in_memory_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14200:6:14","type":""}],"src":"14102:178:14"},{"body":{"nodeType":"YulBlock","src":"14432:220:14","statements":[{"nodeType":"YulAssignment","src":"14442:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14508:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14513:2:14","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14449:58:14"},"nodeType":"YulFunctionCall","src":"14449:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14442:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14614:3:14"}],"functionName":{"name":"store_literal_in_memory_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b","nodeType":"YulIdentifier","src":"14525:88:14"},"nodeType":"YulFunctionCall","src":"14525:93:14"},"nodeType":"YulExpressionStatement","src":"14525:93:14"},{"nodeType":"YulAssignment","src":"14627:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14638:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14643:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14634:3:14"},"nodeType":"YulFunctionCall","src":"14634:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14627:3:14"}]}]},"name":"abi_encode_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14420:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14428:3:14","type":""}],"src":"14286:366:14"},{"body":{"nodeType":"YulBlock","src":"14829:248:14","statements":[{"nodeType":"YulAssignment","src":"14839:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14851:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14862:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14847:3:14"},"nodeType":"YulFunctionCall","src":"14847:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14839:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14886:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14897:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14882:3:14"},"nodeType":"YulFunctionCall","src":"14882:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14905:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14911:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14901:3:14"},"nodeType":"YulFunctionCall","src":"14901:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14875:6:14"},"nodeType":"YulFunctionCall","src":"14875:47:14"},"nodeType":"YulExpressionStatement","src":"14875:47:14"},{"nodeType":"YulAssignment","src":"14931:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15065:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14939:124:14"},"nodeType":"YulFunctionCall","src":"14939:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14931:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14809:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14824:4:14","type":""}],"src":"14658:419:14"},{"body":{"nodeType":"YulBlock","src":"15189:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15211:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15219:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15207:3:14"},"nodeType":"YulFunctionCall","src":"15207:14:14"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"15223:34:14","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15200:6:14"},"nodeType":"YulFunctionCall","src":"15200:58:14"},"nodeType":"YulExpressionStatement","src":"15200:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15279:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15287:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15275:3:14"},"nodeType":"YulFunctionCall","src":"15275:15:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"15292:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15268:6:14"},"nodeType":"YulFunctionCall","src":"15268:33:14"},"nodeType":"YulExpressionStatement","src":"15268:33:14"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15181:6:14","type":""}],"src":"15083:225:14"},{"body":{"nodeType":"YulBlock","src":"15460:220:14","statements":[{"nodeType":"YulAssignment","src":"15470:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15536:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"15541:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15477:58:14"},"nodeType":"YulFunctionCall","src":"15477:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15470:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15642:3:14"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"15553:88:14"},"nodeType":"YulFunctionCall","src":"15553:93:14"},"nodeType":"YulExpressionStatement","src":"15553:93:14"},{"nodeType":"YulAssignment","src":"15655:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15666:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"15671:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15662:3:14"},"nodeType":"YulFunctionCall","src":"15662:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15655:3:14"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15448:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15456:3:14","type":""}],"src":"15314:366:14"},{"body":{"nodeType":"YulBlock","src":"15857:248:14","statements":[{"nodeType":"YulAssignment","src":"15867:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15879:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15890:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15875:3:14"},"nodeType":"YulFunctionCall","src":"15875:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15867:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15914:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15925:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15910:3:14"},"nodeType":"YulFunctionCall","src":"15910:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15933:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15939:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15929:3:14"},"nodeType":"YulFunctionCall","src":"15929:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15903:6:14"},"nodeType":"YulFunctionCall","src":"15903:47:14"},"nodeType":"YulExpressionStatement","src":"15903:47:14"},{"nodeType":"YulAssignment","src":"15959:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16093:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15967:124:14"},"nodeType":"YulFunctionCall","src":"15967:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15959:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15837:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15852:4:14","type":""}],"src":"15686:419:14"},{"body":{"nodeType":"YulBlock","src":"16265:288:14","statements":[{"nodeType":"YulAssignment","src":"16275:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16287:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16298:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16283:3:14"},"nodeType":"YulFunctionCall","src":"16283:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16275:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16355:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16368:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16379:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16364:3:14"},"nodeType":"YulFunctionCall","src":"16364:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16311:43:14"},"nodeType":"YulFunctionCall","src":"16311:71:14"},"nodeType":"YulExpressionStatement","src":"16311:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16436:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16449:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16460:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16445:3:14"},"nodeType":"YulFunctionCall","src":"16445:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16392:43:14"},"nodeType":"YulFunctionCall","src":"16392:72:14"},"nodeType":"YulExpressionStatement","src":"16392:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16518:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16531:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16542:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16527:3:14"},"nodeType":"YulFunctionCall","src":"16527:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16474:43:14"},"nodeType":"YulFunctionCall","src":"16474:72:14"},"nodeType":"YulExpressionStatement","src":"16474:72:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16221:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16233:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16241:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16249:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16260:4:14","type":""}],"src":"16111:442:14"},{"body":{"nodeType":"YulBlock","src":"16673:34:14","statements":[{"nodeType":"YulAssignment","src":"16683:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"16698:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16683:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16645:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"16650:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16661:11:14","type":""}],"src":"16559:148:14"},{"body":{"nodeType":"YulBlock","src":"16819:67:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16841:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16849:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16837:3:14"},"nodeType":"YulFunctionCall","src":"16837:14:14"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"16853:25:14","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16830:6:14"},"nodeType":"YulFunctionCall","src":"16830:49:14"},"nodeType":"YulExpressionStatement","src":"16830:49:14"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16811:6:14","type":""}],"src":"16713:173:14"},{"body":{"nodeType":"YulBlock","src":"17056:238:14","statements":[{"nodeType":"YulAssignment","src":"17066:92:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17150:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17155:2:14","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17073:76:14"},"nodeType":"YulFunctionCall","src":"17073:85:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17066:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17256:3:14"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"17167:88:14"},"nodeType":"YulFunctionCall","src":"17167:93:14"},"nodeType":"YulExpressionStatement","src":"17167:93:14"},{"nodeType":"YulAssignment","src":"17269:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17280:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17285:2:14","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17276:3:14"},"nodeType":"YulFunctionCall","src":"17276:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17269:3:14"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17044:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17052:3:14","type":""}],"src":"16892:402:14"},{"body":{"nodeType":"YulBlock","src":"17359:40:14","statements":[{"nodeType":"YulAssignment","src":"17370:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17386:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17380:5:14"},"nodeType":"YulFunctionCall","src":"17380:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17370:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17342:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17352:6:14","type":""}],"src":"17300:99:14"},{"body":{"nodeType":"YulBlock","src":"17454:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"17464:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"17473:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17468:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"17533:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17558:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"17563:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17554:3:14"},"nodeType":"YulFunctionCall","src":"17554:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17577:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"17582:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17573:3:14"},"nodeType":"YulFunctionCall","src":"17573:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17567:5:14"},"nodeType":"YulFunctionCall","src":"17567:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17547:6:14"},"nodeType":"YulFunctionCall","src":"17547:39:14"},"nodeType":"YulExpressionStatement","src":"17547:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17494:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"17497:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17491:2:14"},"nodeType":"YulFunctionCall","src":"17491:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17505:19:14","statements":[{"nodeType":"YulAssignment","src":"17507:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17516:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"17519:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17512:3:14"},"nodeType":"YulFunctionCall","src":"17512:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17507:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"17487:3:14","statements":[]},"src":"17483:113:14"},{"body":{"nodeType":"YulBlock","src":"17630:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17680:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"17685:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17676:3:14"},"nodeType":"YulFunctionCall","src":"17676:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"17694:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17669:6:14"},"nodeType":"YulFunctionCall","src":"17669:27:14"},"nodeType":"YulExpressionStatement","src":"17669:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17611:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"17614:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17608:2:14"},"nodeType":"YulFunctionCall","src":"17608:13:14"},"nodeType":"YulIf","src":"17605:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17436:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17441:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"17446:6:14","type":""}],"src":"17405:307:14"},{"body":{"nodeType":"YulBlock","src":"17828:267:14","statements":[{"nodeType":"YulVariableDeclaration","src":"17838:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17885:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17852:32:14"},"nodeType":"YulFunctionCall","src":"17852:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17842:6:14","type":""}]},{"nodeType":"YulAssignment","src":"17900:96:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17984:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"17989:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17907:76:14"},"nodeType":"YulFunctionCall","src":"17907:89:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17900:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18031:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"18038:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18027:3:14"},"nodeType":"YulFunctionCall","src":"18027:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"18045:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"18050:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"18005:21:14"},"nodeType":"YulFunctionCall","src":"18005:52:14"},"nodeType":"YulExpressionStatement","src":"18005:52:14"},{"nodeType":"YulAssignment","src":"18066:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18077:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"18082:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18073:3:14"},"nodeType":"YulFunctionCall","src":"18073:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18066:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17809:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17816:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17824:3:14","type":""}],"src":"17718:377:14"},{"body":{"nodeType":"YulBlock","src":"18207:61:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18229:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"18237:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18225:3:14"},"nodeType":"YulFunctionCall","src":"18225:14:14"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"18241:19:14","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18218:6:14"},"nodeType":"YulFunctionCall","src":"18218:43:14"},"nodeType":"YulExpressionStatement","src":"18218:43:14"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18199:6:14","type":""}],"src":"18101:167:14"},{"body":{"nodeType":"YulBlock","src":"18438:238:14","statements":[{"nodeType":"YulAssignment","src":"18448:92:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18532:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18537:2:14","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18455:76:14"},"nodeType":"YulFunctionCall","src":"18455:85:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18448:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18638:3:14"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"18549:88:14"},"nodeType":"YulFunctionCall","src":"18549:93:14"},"nodeType":"YulExpressionStatement","src":"18549:93:14"},{"nodeType":"YulAssignment","src":"18651:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18662:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18667:2:14","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18658:3:14"},"nodeType":"YulFunctionCall","src":"18658:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18651:3:14"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18426:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18434:3:14","type":""}],"src":"18274:402:14"},{"body":{"nodeType":"YulBlock","src":"19068:581:14","statements":[{"nodeType":"YulAssignment","src":"19079:155:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19230:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19086:142:14"},"nodeType":"YulFunctionCall","src":"19086:148:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19079:3:14"}]},{"nodeType":"YulAssignment","src":"19244:102:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19333:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"19342:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19251:81:14"},"nodeType":"YulFunctionCall","src":"19251:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19244:3:14"}]},{"nodeType":"YulAssignment","src":"19356:155:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19507:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19363:142:14"},"nodeType":"YulFunctionCall","src":"19363:148:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19356:3:14"}]},{"nodeType":"YulAssignment","src":"19521:102:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19610:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"19619:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19528:81:14"},"nodeType":"YulFunctionCall","src":"19528:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19521:3:14"}]},{"nodeType":"YulAssignment","src":"19633:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"19640:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19633:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19039:3:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19045:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19053:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19064:3:14","type":""}],"src":"18682:967:14"},{"body":{"nodeType":"YulBlock","src":"19703:54:14","statements":[{"nodeType":"YulAssignment","src":"19713:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19731:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"19738:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19727:3:14"},"nodeType":"YulFunctionCall","src":"19727:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19747:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19743:3:14"},"nodeType":"YulFunctionCall","src":"19743:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19723:3:14"},"nodeType":"YulFunctionCall","src":"19723:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19713:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19686:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"19696:6:14","type":""}],"src":"19655:102:14"},{"body":{"nodeType":"YulBlock","src":"19855:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"19865:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19912:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19879:32:14"},"nodeType":"YulFunctionCall","src":"19879:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19869:6:14","type":""}]},{"nodeType":"YulAssignment","src":"19927:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19993:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"19998:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19934:58:14"},"nodeType":"YulFunctionCall","src":"19934:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19927:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20040:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"20047:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20036:3:14"},"nodeType":"YulFunctionCall","src":"20036:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"20054:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"20059:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"20014:21:14"},"nodeType":"YulFunctionCall","src":"20014:52:14"},"nodeType":"YulExpressionStatement","src":"20014:52:14"},{"nodeType":"YulAssignment","src":"20075:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20086:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20113:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"20091:21:14"},"nodeType":"YulFunctionCall","src":"20091:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20082:3:14"},"nodeType":"YulFunctionCall","src":"20082:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20075:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19836:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19843:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19851:3:14","type":""}],"src":"19763:364:14"},{"body":{"nodeType":"YulBlock","src":"20251:195:14","statements":[{"nodeType":"YulAssignment","src":"20261:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20273:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20284:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20269:3:14"},"nodeType":"YulFunctionCall","src":"20269:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20261:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20308:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20319:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20304:3:14"},"nodeType":"YulFunctionCall","src":"20304:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20327:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"20333:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20323:3:14"},"nodeType":"YulFunctionCall","src":"20323:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20297:6:14"},"nodeType":"YulFunctionCall","src":"20297:47:14"},"nodeType":"YulExpressionStatement","src":"20297:47:14"},{"nodeType":"YulAssignment","src":"20353:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20425:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"20434:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20361:63:14"},"nodeType":"YulFunctionCall","src":"20361:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20353:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20223:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20235:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20246:4:14","type":""}],"src":"20133:313:14"},{"body":{"nodeType":"YulBlock","src":"20480:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20497:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20500:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20490:6:14"},"nodeType":"YulFunctionCall","src":"20490:88:14"},"nodeType":"YulExpressionStatement","src":"20490:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20594:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20597:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20587:6:14"},"nodeType":"YulFunctionCall","src":"20587:15:14"},"nodeType":"YulExpressionStatement","src":"20587:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20618:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20621:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20611:6:14"},"nodeType":"YulFunctionCall","src":"20611:15:14"},"nodeType":"YulExpressionStatement","src":"20611:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20452:180:14"},{"body":{"nodeType":"YulBlock","src":"20744:123:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20766:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20774:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20762:3:14"},"nodeType":"YulFunctionCall","src":"20762:14:14"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"20778:34:14","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20755:6:14"},"nodeType":"YulFunctionCall","src":"20755:58:14"},"nodeType":"YulExpressionStatement","src":"20755:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20834:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20842:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20830:3:14"},"nodeType":"YulFunctionCall","src":"20830:15:14"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"20847:12:14","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20823:6:14"},"nodeType":"YulFunctionCall","src":"20823:37:14"},"nodeType":"YulExpressionStatement","src":"20823:37:14"}]},"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20736:6:14","type":""}],"src":"20638:229:14"},{"body":{"nodeType":"YulBlock","src":"21019:220:14","statements":[{"nodeType":"YulAssignment","src":"21029:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21095:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"21100:2:14","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21036:58:14"},"nodeType":"YulFunctionCall","src":"21036:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21029:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21201:3:14"}],"functionName":{"name":"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","nodeType":"YulIdentifier","src":"21112:88:14"},"nodeType":"YulFunctionCall","src":"21112:93:14"},"nodeType":"YulExpressionStatement","src":"21112:93:14"},{"nodeType":"YulAssignment","src":"21214:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21225:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"21230:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21221:3:14"},"nodeType":"YulFunctionCall","src":"21221:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21214:3:14"}]}]},"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21007:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21015:3:14","type":""}],"src":"20873:366:14"},{"body":{"nodeType":"YulBlock","src":"21416:248:14","statements":[{"nodeType":"YulAssignment","src":"21426:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21438:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21449:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21434:3:14"},"nodeType":"YulFunctionCall","src":"21434:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21426:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21473:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21484:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21469:3:14"},"nodeType":"YulFunctionCall","src":"21469:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21492:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"21498:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21488:3:14"},"nodeType":"YulFunctionCall","src":"21488:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21462:6:14"},"nodeType":"YulFunctionCall","src":"21462:47:14"},"nodeType":"YulExpressionStatement","src":"21462:47:14"},{"nodeType":"YulAssignment","src":"21518:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21652:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21526:124:14"},"nodeType":"YulFunctionCall","src":"21526:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21518:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21396:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21411:4:14","type":""}],"src":"21245:419:14"},{"body":{"nodeType":"YulBlock","src":"21698:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21715:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21718:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21708:6:14"},"nodeType":"YulFunctionCall","src":"21708:88:14"},"nodeType":"YulExpressionStatement","src":"21708:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21812:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21815:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21805:6:14"},"nodeType":"YulFunctionCall","src":"21805:15:14"},"nodeType":"YulExpressionStatement","src":"21805:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21836:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21839:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21829:6:14"},"nodeType":"YulFunctionCall","src":"21829:15:14"},"nodeType":"YulExpressionStatement","src":"21829:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21670:180:14"},{"body":{"nodeType":"YulBlock","src":"21904:300:14","statements":[{"nodeType":"YulAssignment","src":"21914:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21937:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21919:17:14"},"nodeType":"YulFunctionCall","src":"21919:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21914:1:14"}]},{"nodeType":"YulAssignment","src":"21948:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21971:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21953:17:14"},"nodeType":"YulFunctionCall","src":"21953:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21948:1:14"}]},{"body":{"nodeType":"YulBlock","src":"22146:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22148:16:14"},"nodeType":"YulFunctionCall","src":"22148:18:14"},"nodeType":"YulExpressionStatement","src":"22148:18:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22058:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22051:6:14"},"nodeType":"YulFunctionCall","src":"22051:9:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22044:6:14"},"nodeType":"YulFunctionCall","src":"22044:17:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22066:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22073:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"22141:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22069:3:14"},"nodeType":"YulFunctionCall","src":"22069:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22063:2:14"},"nodeType":"YulFunctionCall","src":"22063:81:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22040:3:14"},"nodeType":"YulFunctionCall","src":"22040:105:14"},"nodeType":"YulIf","src":"22037:131:14"},{"nodeType":"YulAssignment","src":"22178:20:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22193:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"22196:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22189:3:14"},"nodeType":"YulFunctionCall","src":"22189:9:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"22178:7:14"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21887:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"21890:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"21896:7:14","type":""}],"src":"21856:348:14"},{"body":{"nodeType":"YulBlock","src":"22254:261:14","statements":[{"nodeType":"YulAssignment","src":"22264:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22287:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22269:17:14"},"nodeType":"YulFunctionCall","src":"22269:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22264:1:14"}]},{"nodeType":"YulAssignment","src":"22298:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22321:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22303:17:14"},"nodeType":"YulFunctionCall","src":"22303:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22298:1:14"}]},{"body":{"nodeType":"YulBlock","src":"22461:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22463:16:14"},"nodeType":"YulFunctionCall","src":"22463:18:14"},"nodeType":"YulExpressionStatement","src":"22463:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22382:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22389:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"22457:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22385:3:14"},"nodeType":"YulFunctionCall","src":"22385:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22379:2:14"},"nodeType":"YulFunctionCall","src":"22379:81:14"},"nodeType":"YulIf","src":"22376:107:14"},{"nodeType":"YulAssignment","src":"22493:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22504:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"22507:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22500:3:14"},"nodeType":"YulFunctionCall","src":"22500:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22493:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22241:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"22244:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"22250:3:14","type":""}],"src":"22210:305:14"},{"body":{"nodeType":"YulBlock","src":"22549:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22566:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22569:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22559:6:14"},"nodeType":"YulFunctionCall","src":"22559:88:14"},"nodeType":"YulExpressionStatement","src":"22559:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22663:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22666:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22656:6:14"},"nodeType":"YulFunctionCall","src":"22656:15:14"},"nodeType":"YulExpressionStatement","src":"22656:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22687:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22690:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22680:6:14"},"nodeType":"YulFunctionCall","src":"22680:15:14"},"nodeType":"YulExpressionStatement","src":"22680:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"22521:180:14"},{"body":{"nodeType":"YulBlock","src":"22750:128:14","statements":[{"nodeType":"YulAssignment","src":"22760:33:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22787:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22769:17:14"},"nodeType":"YulFunctionCall","src":"22769:24:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22760:5:14"}]},{"body":{"nodeType":"YulBlock","src":"22821:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22823:16:14"},"nodeType":"YulFunctionCall","src":"22823:18:14"},"nodeType":"YulExpressionStatement","src":"22823:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22808:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"22815:4:14","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22805:2:14"},"nodeType":"YulFunctionCall","src":"22805:15:14"},"nodeType":"YulIf","src":"22802:41:14"},{"nodeType":"YulAssignment","src":"22852:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22863:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"22870:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22859:3:14"},"nodeType":"YulFunctionCall","src":"22859:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22852:3:14"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22736:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22746:3:14","type":""}],"src":"22707:171:14"},{"body":{"nodeType":"YulBlock","src":"22990:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23012:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"23020:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23008:3:14"},"nodeType":"YulFunctionCall","src":"23008:14:14"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"23024:34:14","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23001:6:14"},"nodeType":"YulFunctionCall","src":"23001:58:14"},"nodeType":"YulExpressionStatement","src":"23001:58:14"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22982:6:14","type":""}],"src":"22884:182:14"},{"body":{"nodeType":"YulBlock","src":"23218:220:14","statements":[{"nodeType":"YulAssignment","src":"23228:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23294:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23299:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23235:58:14"},"nodeType":"YulFunctionCall","src":"23235:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23228:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23400:3:14"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"23311:88:14"},"nodeType":"YulFunctionCall","src":"23311:93:14"},"nodeType":"YulExpressionStatement","src":"23311:93:14"},{"nodeType":"YulAssignment","src":"23413:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23424:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23429:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23420:3:14"},"nodeType":"YulFunctionCall","src":"23420:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23413:3:14"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23206:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23214:3:14","type":""}],"src":"23072:366:14"},{"body":{"nodeType":"YulBlock","src":"23615:248:14","statements":[{"nodeType":"YulAssignment","src":"23625:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23637:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23648:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23633:3:14"},"nodeType":"YulFunctionCall","src":"23633:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23625:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23672:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23683:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23668:3:14"},"nodeType":"YulFunctionCall","src":"23668:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23691:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"23697:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23687:3:14"},"nodeType":"YulFunctionCall","src":"23687:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23661:6:14"},"nodeType":"YulFunctionCall","src":"23661:47:14"},"nodeType":"YulExpressionStatement","src":"23661:47:14"},{"nodeType":"YulAssignment","src":"23717:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23851:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23725:124:14"},"nodeType":"YulFunctionCall","src":"23725:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23717:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23595:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23610:4:14","type":""}],"src":"23444:419:14"},{"body":{"nodeType":"YulBlock","src":"23914:146:14","statements":[{"nodeType":"YulAssignment","src":"23924:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23947:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23929:17:14"},"nodeType":"YulFunctionCall","src":"23929:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23924:1:14"}]},{"nodeType":"YulAssignment","src":"23958:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23981:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23963:17:14"},"nodeType":"YulFunctionCall","src":"23963:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23958:1:14"}]},{"body":{"nodeType":"YulBlock","src":"24005:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24007:16:14"},"nodeType":"YulFunctionCall","src":"24007:18:14"},"nodeType":"YulExpressionStatement","src":"24007:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23999:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"24002:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23996:2:14"},"nodeType":"YulFunctionCall","src":"23996:8:14"},"nodeType":"YulIf","src":"23993:34:14"},{"nodeType":"YulAssignment","src":"24037:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24049:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"24052:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24045:3:14"},"nodeType":"YulFunctionCall","src":"24045:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"24037:4:14"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23900:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"23903:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23909:4:14","type":""}],"src":"23869:191:14"},{"body":{"nodeType":"YulBlock","src":"24094:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24111:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24114:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24104:6:14"},"nodeType":"YulFunctionCall","src":"24104:88:14"},"nodeType":"YulExpressionStatement","src":"24104:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24208:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24211:4:14","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24201:6:14"},"nodeType":"YulFunctionCall","src":"24201:15:14"},"nodeType":"YulExpressionStatement","src":"24201:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24232:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24235:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24225:6:14"},"nodeType":"YulFunctionCall","src":"24225:15:14"},"nodeType":"YulExpressionStatement","src":"24225:15:14"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"24066:180:14"},{"body":{"nodeType":"YulBlock","src":"24358:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24380:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"24388:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24376:3:14"},"nodeType":"YulFunctionCall","src":"24376:14:14"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"24392:34:14","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24369:6:14"},"nodeType":"YulFunctionCall","src":"24369:58:14"},"nodeType":"YulExpressionStatement","src":"24369:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24448:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"24456:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24444:3:14"},"nodeType":"YulFunctionCall","src":"24444:15:14"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"24461:8:14","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24437:6:14"},"nodeType":"YulFunctionCall","src":"24437:33:14"},"nodeType":"YulExpressionStatement","src":"24437:33:14"}]},"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24350:6:14","type":""}],"src":"24252:225:14"},{"body":{"nodeType":"YulBlock","src":"24629:220:14","statements":[{"nodeType":"YulAssignment","src":"24639:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24705:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"24710:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24646:58:14"},"nodeType":"YulFunctionCall","src":"24646:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24639:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24811:3:14"}],"functionName":{"name":"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","nodeType":"YulIdentifier","src":"24722:88:14"},"nodeType":"YulFunctionCall","src":"24722:93:14"},"nodeType":"YulExpressionStatement","src":"24722:93:14"},{"nodeType":"YulAssignment","src":"24824:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24835:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"24840:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24831:3:14"},"nodeType":"YulFunctionCall","src":"24831:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24824:3:14"}]}]},"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24617:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24625:3:14","type":""}],"src":"24483:366:14"},{"body":{"nodeType":"YulBlock","src":"25026:248:14","statements":[{"nodeType":"YulAssignment","src":"25036:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25048:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25059:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25044:3:14"},"nodeType":"YulFunctionCall","src":"25044:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25036:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25083:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25094:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25079:3:14"},"nodeType":"YulFunctionCall","src":"25079:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25102:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"25108:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25098:3:14"},"nodeType":"YulFunctionCall","src":"25098:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25072:6:14"},"nodeType":"YulFunctionCall","src":"25072:47:14"},"nodeType":"YulExpressionStatement","src":"25072:47:14"},{"nodeType":"YulAssignment","src":"25128:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25262:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25136:124:14"},"nodeType":"YulFunctionCall","src":"25136:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25128:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25006:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25021:4:14","type":""}],"src":"24855:419:14"},{"body":{"nodeType":"YulBlock","src":"25386:73:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25408:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"25416:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25404:3:14"},"nodeType":"YulFunctionCall","src":"25404:14:14"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"25420:31:14","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25397:6:14"},"nodeType":"YulFunctionCall","src":"25397:55:14"},"nodeType":"YulExpressionStatement","src":"25397:55:14"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25378:6:14","type":""}],"src":"25280:179:14"},{"body":{"nodeType":"YulBlock","src":"25611:220:14","statements":[{"nodeType":"YulAssignment","src":"25621:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25687:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"25692:2:14","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25628:58:14"},"nodeType":"YulFunctionCall","src":"25628:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25621:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25793:3:14"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nodeType":"YulIdentifier","src":"25704:88:14"},"nodeType":"YulFunctionCall","src":"25704:93:14"},"nodeType":"YulExpressionStatement","src":"25704:93:14"},{"nodeType":"YulAssignment","src":"25806:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25817:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"25822:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25813:3:14"},"nodeType":"YulFunctionCall","src":"25813:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25806:3:14"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25599:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25607:3:14","type":""}],"src":"25465:366:14"},{"body":{"nodeType":"YulBlock","src":"26008:248:14","statements":[{"nodeType":"YulAssignment","src":"26018:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26030:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26041:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26026:3:14"},"nodeType":"YulFunctionCall","src":"26026:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26018:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26065:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"26076:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26061:3:14"},"nodeType":"YulFunctionCall","src":"26061:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26084:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"26090:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26080:3:14"},"nodeType":"YulFunctionCall","src":"26080:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26054:6:14"},"nodeType":"YulFunctionCall","src":"26054:47:14"},"nodeType":"YulExpressionStatement","src":"26054:47:14"},{"nodeType":"YulAssignment","src":"26110:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26244:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26118:124:14"},"nodeType":"YulFunctionCall","src":"26118:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26110:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25988:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26003:4:14","type":""}],"src":"25837:419:14"},{"body":{"nodeType":"YulBlock","src":"26320:40:14","statements":[{"nodeType":"YulAssignment","src":"26331:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26347:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26341:5:14"},"nodeType":"YulFunctionCall","src":"26341:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26331:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26303:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"26313:6:14","type":""}],"src":"26262:98:14"},{"body":{"nodeType":"YulBlock","src":"26479:34:14","statements":[{"nodeType":"YulAssignment","src":"26489:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"26504:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"26489:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26451:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"26456:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"26467:11:14","type":""}],"src":"26366:147:14"},{"body":{"nodeType":"YulBlock","src":"26627:265:14","statements":[{"nodeType":"YulVariableDeclaration","src":"26637:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26683:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"26651:31:14"},"nodeType":"YulFunctionCall","src":"26651:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26641:6:14","type":""}]},{"nodeType":"YulAssignment","src":"26698:95:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26781:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"26786:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26705:75:14"},"nodeType":"YulFunctionCall","src":"26705:88:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26698:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26828:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"26835:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26824:3:14"},"nodeType":"YulFunctionCall","src":"26824:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"26842:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"26847:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"26802:21:14"},"nodeType":"YulFunctionCall","src":"26802:52:14"},"nodeType":"YulExpressionStatement","src":"26802:52:14"},{"nodeType":"YulAssignment","src":"26863:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26874:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"26879:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26870:3:14"},"nodeType":"YulFunctionCall","src":"26870:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26863:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26608:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26615:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26623:3:14","type":""}],"src":"26519:373:14"},{"body":{"nodeType":"YulBlock","src":"27032:137:14","statements":[{"nodeType":"YulAssignment","src":"27043:100:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27130:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"27139:3:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27050:79:14"},"nodeType":"YulFunctionCall","src":"27050:93:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27043:3:14"}]},{"nodeType":"YulAssignment","src":"27153:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"27160:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27153:3:14"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27011:3:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27017:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27028:3:14","type":""}],"src":"26898:271:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC20_$873(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$873(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$873(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$873(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$873(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$873(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$873(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not a withdrawer\")\n\n    }\n\n    function abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9c2bac833b266d0e48505ed79d1c94d3d8ba9ee61750b62acbb0de659fdb4f73_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw is not available\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc5a900c572906c21a816bea245da8be08895684622793ed47a77b679bc2dd62_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceed maximum amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0399134d13afbb19b3ec1f59c5ece45948cb59cdd2129ef4f10ad8afd031149b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient account balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6dc2872929ec456da43d82cfe6ed080a99e1da9b8c86f9f47020a0c55dc85b8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012b5760003560e01c80639010d07c116100ad578063ca15c87311610071578063ca15c8731461031a578063d547741f1461034a578063df74e02814610366578063f2fde38b14610382578063f516440c1461039e5761012b565b80639010d07c1461026257806391d1485414610292578063a217fddf146102c2578063b5b68afe146102e0578063b6b55f25146102fe5761012b565b806336568abe116100f457806336568abe146101e4578063715018a614610200578063827a560b1461020a57806385f438c1146102265780638da5cb5b146102445761012b565b8062f714ce1461013057806301ffc9a71461014c578063144fa6d71461017c578063248a9ca3146101985780632f2ff15d146101c8575b600080fd5b61014a60048036038101906101459190611997565b6103bc565b005b61016660048036038101906101619190611a2f565b6105b8565b6040516101739190611a77565b60405180910390f35b61019660048036038101906101919190611ad0565b610632565b005b6101b260048036038101906101ad9190611b33565b6106f2565b6040516101bf9190611b6f565b60405180910390f35b6101e260048036038101906101dd9190611b8a565b610712565b005b6101fe60048036038101906101f99190611b8a565b610733565b005b6102086107b6565b005b610224600480360381019061021f9190611bf6565b61083e565b005b61022e6108d7565b60405161023b9190611b6f565b60405180910390f35b61024c6108fb565b6040516102599190611c32565b60405180910390f35b61027c60048036038101906102779190611c4d565b610924565b6040516102899190611c32565b60405180910390f35b6102ac60048036038101906102a79190611b8a565b610953565b6040516102b99190611a77565b60405180910390f35b6102ca6109be565b6040516102d79190611b6f565b60405180910390f35b6102e86109c5565b6040516102f59190611a77565b60405180910390f35b61031860048036038101906103139190611c8d565b6109d8565b005b610334600480360381019061032f9190611b33565b610af6565b6040516103419190611cc9565b60405180910390f35b610364600480360381019061035f9190611b8a565b610b1a565b005b610380600480360381019061037b9190611c8d565b610b3b565b005b61039c60048036038101906103979190611ce4565b610bc1565b005b6103a6610cb9565b6040516103b39190611cc9565b60405180910390f35b6103c4610dcf565b73ffffffffffffffffffffffffffffffffffffffff166103e26108fb565b73ffffffffffffffffffffffffffffffffffffffff16148061043157506104307f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e461042b610dcf565b610953565b5b610470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611d6e565b60405180910390fd5b600560009054906101000a900460ff166104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b690611dda565b60405180910390fd5b600454821115610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fb90611e46565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401610561929190611e66565b602060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b39190611ea4565b505050565b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061062b575061062a82610dd7565b5b9050919050565b61063a610dcf565b73ffffffffffffffffffffffffffffffffffffffff166106586108fb565b73ffffffffffffffffffffffffffffffffffffffff16146106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a590611f1d565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060016000838152602001908152602001600020600101549050919050565b61071b826106f2565b61072481610e51565b61072e8383610e65565b505050565b61073b610dcf565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079f90611faf565b60405180910390fd5b6107b28282610e99565b5050565b6107be610dcf565b73ffffffffffffffffffffffffffffffffffffffff166107dc6108fb565b73ffffffffffffffffffffffffffffffffffffffff1614610832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082990611f1d565b60405180910390fd5b61083c6000610ecd565b565b610846610dcf565b73ffffffffffffffffffffffffffffffffffffffff166108646108fb565b73ffffffffffffffffffffffffffffffffffffffff16146108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190611f1d565b60405180910390fd5b80600560006101000a81548160ff02191690831515021790555050565b7f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061094b8260026000868152602001908152602001600020610f9190919063ffffffff16565b905092915050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b600560009054906101000a900460ff1681565b80600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a349190611c32565b60206040518083038186803b158015610a4c57600080fd5b505afa158015610a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a849190611fe4565b1015610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc9061205d565b60405180910390fd5b610af3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610fab565b50565b6000610b1360026000848152602001908152602001600020611034565b9050919050565b610b23826106f2565b610b2c81610e51565b610b368383610e99565b505050565b610b43610dcf565b73ffffffffffffffffffffffffffffffffffffffff16610b616108fb565b73ffffffffffffffffffffffffffffffffffffffff1614610bb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bae90611f1d565b60405180910390fd5b8060048190555050565b610bc9610dcf565b73ffffffffffffffffffffffffffffffffffffffff16610be76108fb565b73ffffffffffffffffffffffffffffffffffffffff1614610c3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3490611f1d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca4906120ef565b60405180910390fd5b610cb681610ecd565b50565b60045481565b610cc98282610953565b610d9b57600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d40610dcf565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000610dc7836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611049565b905092915050565b600033905090565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610e4a5750610e49826110b9565b5b9050919050565b610e6281610e5d610dcf565b611123565b50565b610e6f8282610cbf565b610e948160026000858152602001908152602001600020610d9f90919063ffffffff16565b505050565b610ea382826111c0565b610ec881600260008581526020019081526020016000206112a290919063ffffffff16565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610fa083600001836112d2565b60001c905092915050565b61102e846323b872dd60e01b858585604051602401610fcc9392919061210f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112fd565b50505050565b6000611042826000016113c4565b9050919050565b600061105583836113d5565b6110ae5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506110b3565b600090505b92915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61112d8282610953565b6111bc576111528173ffffffffffffffffffffffffffffffffffffffff1660146113f8565b6111608360001c60206113f8565b604051602001611171929190612258565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b391906122dc565b60405180910390fd5b5050565b6111ca8282610953565b1561129e5760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611243610dcf565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60006112ca836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611634565b905092915050565b60008260000182815481106112ea576112e96122fe565b5b9060005260206000200154905092915050565b600061135f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117489092919063ffffffff16565b90506000815111156113bf578080602001905181019061137f9190611ea4565b6113be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b59061239f565b60405180910390fd5b5b505050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60606000600283600261140b91906123ee565b6114159190612448565b67ffffffffffffffff81111561142e5761142d61249e565b5b6040519080825280601f01601f1916602001820160405280156114605781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611498576114976122fe565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106114fc576114fb6122fe565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261153c91906123ee565b6115469190612448565b90505b60018111156115e6577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110611588576115876122fe565b5b1a60f81b82828151811061159f5761159e6122fe565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806115df906124cd565b9050611549565b506000841461162a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162190612543565b60405180910390fd5b8091505092915050565b6000808360010160008481526020019081526020016000205490506000811461173c5760006001826116669190612563565b905060006001866000018054905061167e9190612563565b90508181146116ed57600086600001828154811061169f5761169e6122fe565b5b90600052602060002001549050808760000184815481106116c3576116c26122fe565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061170157611700612597565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611742565b60009150505b92915050565b60606117578484600085611760565b90509392505050565b6060824710156117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179c90612638565b60405180910390fd5b6117ae85611874565b6117ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e4906126a4565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611816919061270b565b60006040518083038185875af1925050503d8060008114611853576040519150601f19603f3d011682016040523d82523d6000602084013e611858565b606091505b5091509150611868828286611897565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156118a7578290506118f7565b6000835111156118ba5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ee91906122dc565b60405180910390fd5b9392505050565b600080fd5b6000819050919050565b61191681611903565b811461192157600080fd5b50565b6000813590506119338161190d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061196482611939565b9050919050565b61197481611959565b811461197f57600080fd5b50565b6000813590506119918161196b565b92915050565b600080604083850312156119ae576119ad6118fe565b5b60006119bc85828601611924565b92505060206119cd85828601611982565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a0c816119d7565b8114611a1757600080fd5b50565b600081359050611a2981611a03565b92915050565b600060208284031215611a4557611a446118fe565b5b6000611a5384828501611a1a565b91505092915050565b60008115159050919050565b611a7181611a5c565b82525050565b6000602082019050611a8c6000830184611a68565b92915050565b6000611a9d82611959565b9050919050565b611aad81611a92565b8114611ab857600080fd5b50565b600081359050611aca81611aa4565b92915050565b600060208284031215611ae657611ae56118fe565b5b6000611af484828501611abb565b91505092915050565b6000819050919050565b611b1081611afd565b8114611b1b57600080fd5b50565b600081359050611b2d81611b07565b92915050565b600060208284031215611b4957611b486118fe565b5b6000611b5784828501611b1e565b91505092915050565b611b6981611afd565b82525050565b6000602082019050611b846000830184611b60565b92915050565b60008060408385031215611ba157611ba06118fe565b5b6000611baf85828601611b1e565b9250506020611bc085828601611982565b9150509250929050565b611bd381611a5c565b8114611bde57600080fd5b50565b600081359050611bf081611bca565b92915050565b600060208284031215611c0c57611c0b6118fe565b5b6000611c1a84828501611be1565b91505092915050565b611c2c81611959565b82525050565b6000602082019050611c476000830184611c23565b92915050565b60008060408385031215611c6457611c636118fe565b5b6000611c7285828601611b1e565b9250506020611c8385828601611924565b9150509250929050565b600060208284031215611ca357611ca26118fe565b5b6000611cb184828501611924565b91505092915050565b611cc381611903565b82525050565b6000602082019050611cde6000830184611cba565b92915050565b600060208284031215611cfa57611cf96118fe565b5b6000611d0884828501611982565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420612077697468647261776572000000000000600082015250565b6000611d58601a83611d11565b9150611d6382611d22565b602082019050919050565b60006020820190508181036000830152611d8781611d4b565b9050919050565b7f5769746864726177206973206e6f7420617661696c61626c6500000000000000600082015250565b6000611dc4601983611d11565b9150611dcf82611d8e565b602082019050919050565b60006020820190508181036000830152611df381611db7565b9050919050565b7f457863656564206d6178696d756d20616d6f756e740000000000000000000000600082015250565b6000611e30601583611d11565b9150611e3b82611dfa565b602082019050919050565b60006020820190508181036000830152611e5f81611e23565b9050919050565b6000604082019050611e7b6000830185611c23565b611e886020830184611cba565b9392505050565b600081519050611e9e81611bca565b92915050565b600060208284031215611eba57611eb96118fe565b5b6000611ec884828501611e8f565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611f07602083611d11565b9150611f1282611ed1565b602082019050919050565b60006020820190508181036000830152611f3681611efa565b9050919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611f99602f83611d11565b9150611fa482611f3d565b604082019050919050565b60006020820190508181036000830152611fc881611f8c565b9050919050565b600081519050611fde8161190d565b92915050565b600060208284031215611ffa57611ff96118fe565b5b600061200884828501611fcf565b91505092915050565b7f496e73756666696369656e74206163636f756e742062616c616e636500000000600082015250565b6000612047601c83611d11565b915061205282612011565b602082019050919050565b600060208201905081810360008301526120768161203a565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006120d9602683611d11565b91506120e48261207d565b604082019050919050565b60006020820190508181036000830152612108816120cc565b9050919050565b60006060820190506121246000830186611c23565b6121316020830185611c23565b61213e6040830184611cba565b949350505050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000612187601783612146565b915061219282612151565b601782019050919050565b600081519050919050565b60005b838110156121c65780820151818401526020810190506121ab565b838111156121d5576000848401525b50505050565b60006121e68261219d565b6121f08185612146565b93506122008185602086016121a8565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000612242601183612146565b915061224d8261220c565b601182019050919050565b60006122638261217a565b915061226f82856121db565b915061227a82612235565b915061228682846121db565b91508190509392505050565b6000601f19601f8301169050919050565b60006122ae8261219d565b6122b88185611d11565b93506122c88185602086016121a8565b6122d181612292565b840191505092915050565b600060208201905081810360008301526122f681846122a3565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612389602a83611d11565b91506123948261232d565b604082019050919050565b600060208201905081810360008301526123b88161237c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123f982611903565b915061240483611903565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561243d5761243c6123bf565b5b828202905092915050565b600061245382611903565b915061245e83611903565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612493576124926123bf565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006124d882611903565b915060008214156124ec576124eb6123bf565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061252d602083611d11565b9150612538826124f7565b602082019050919050565b6000602082019050818103600083015261255c81612520565b9050919050565b600061256e82611903565b915061257983611903565b92508282101561258c5761258b6123bf565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612622602683611d11565b915061262d826125c6565b604082019050919050565b6000602082019050818103600083015261265181612615565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061268e601d83611d11565b915061269982612658565b602082019050919050565b600060208201905081810360008301526126bd81612681565b9050919050565b600081519050919050565b600081905092915050565b60006126e5826126c4565b6126ef81856126cf565b93506126ff8185602086016121a8565b80840191505092915050565b600061271782846126da565b91508190509291505056fea2646970667358221220c6bca34c080bd5d0d3a642db28d5238360eb0cc8a26e8a192d280514cfddfaf164736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9010D07C GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xDF74E028 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xF516440C EQ PUSH2 0x39E JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x9010D07C EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xB5B68AFE EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2FE JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x827A560B EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x85F438C1 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x244 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1B8A JUMP JUMPDEST PUSH2 0x712 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1B8A JUMP JUMPDEST PUSH2 0x733 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH2 0x7B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1B8A JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x1B8A JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E2 PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x431 JUMPI POP PUSH2 0x430 PUSH32 0x10DAC8C06A04BEC0B551627DAD28BC00D6516B0CAACD1C7B345FCDB5211334E4 PUSH2 0x42B PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST JUMPDEST PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP3 GT ISZERO PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FB SWAP1 PUSH2 0x1E46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x561 SWAP3 SWAP2 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x62B JUMPI POP PUSH2 0x62A DUP3 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x63A PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x658 PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71B DUP3 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x724 DUP2 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x72E DUP4 DUP4 PUSH2 0xE65 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x73B PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 DUP3 DUP3 PUSH2 0xE99 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7BE PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7DC PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x829 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83C PUSH1 0x0 PUSH2 0xECD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x846 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x864 PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x10DAC8C06A04BEC0B551627DAD28BC00D6516B0CAACD1C7B345FCDB5211334E4 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94B DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xF91 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x1FE4 JUMP JUMPDEST LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABC SWAP1 PUSH2 0x205D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xFAB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB13 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB23 DUP3 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xB2C DUP2 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xB36 DUP4 DUP4 PUSH2 0xE99 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB43 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB61 PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAE SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xBC9 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE7 PUSH2 0x8FB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC34 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA4 SWAP1 PUSH2 0x20EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP2 PUSH2 0xECD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCC9 DUP3 DUP3 PUSH2 0x953 JUMP JUMPDEST PUSH2 0xD9B JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD40 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC7 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1049 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xE4A JUMPI POP PUSH2 0xE49 DUP3 PUSH2 0x10B9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE62 DUP2 PUSH2 0xE5D PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x1123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE6F DUP3 DUP3 PUSH2 0xCBF JUMP JUMPDEST PUSH2 0xE94 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0xD9F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xEA3 DUP3 DUP3 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0xEC8 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x12A2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA0 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102E DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xFCC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x210F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12FD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1042 DUP3 PUSH1 0x0 ADD PUSH2 0x13C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1055 DUP4 DUP4 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x10AE JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112D DUP3 DUP3 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x11BC JUMPI PUSH2 0x1152 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x1160 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1171 SWAP3 SWAP2 SWAP1 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11CA DUP3 DUP3 PUSH2 0x953 JUMP JUMPDEST ISZERO PUSH2 0x129E JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1243 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CA DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1634 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12EA JUMPI PUSH2 0x12E9 PUSH2 0x22FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1748 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x13BF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x137F SWAP2 SWAP1 PUSH2 0x1EA4 JUMP JUMPDEST PUSH2 0x13BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B5 SWAP1 PUSH2 0x239F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x140B SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x2448 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x142E JUMPI PUSH2 0x142D PUSH2 0x249E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1460 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1498 JUMPI PUSH2 0x1497 PUSH2 0x22FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x14FC JUMPI PUSH2 0x14FB PUSH2 0x22FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x153C SWAP2 SWAP1 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x1546 SWAP2 SWAP1 PUSH2 0x2448 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x15E6 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1588 JUMPI PUSH2 0x1587 PUSH2 0x22FE JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x159F JUMPI PUSH2 0x159E PUSH2 0x22FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x15DF SWAP1 PUSH2 0x24CD JUMP JUMPDEST SWAP1 POP PUSH2 0x1549 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1621 SWAP1 PUSH2 0x2543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x173C JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1666 SWAP2 SWAP1 PUSH2 0x2563 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x167E SWAP2 SWAP1 PUSH2 0x2563 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x16ED JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x169F JUMPI PUSH2 0x169E PUSH2 0x22FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x16C3 JUMPI PUSH2 0x16C2 PUSH2 0x22FE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x1701 JUMPI PUSH2 0x1700 PUSH2 0x2597 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1742 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1757 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1760 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179C SWAP1 PUSH2 0x2638 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17AE DUP6 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x17ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E4 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1816 SWAP2 SWAP1 PUSH2 0x270B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1853 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1868 DUP3 DUP3 DUP7 PUSH2 0x1897 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x18A7 JUMPI DUP3 SWAP1 POP PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x18BA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1916 DUP2 PUSH2 0x1903 JUMP JUMPDEST DUP2 EQ PUSH2 0x1921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1933 DUP2 PUSH2 0x190D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1964 DUP3 PUSH2 0x1939 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1974 DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP2 EQ PUSH2 0x197F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1991 DUP2 PUSH2 0x196B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AE JUMPI PUSH2 0x19AD PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BC DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19CD DUP6 DUP3 DUP7 ADD PUSH2 0x1982 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0C DUP2 PUSH2 0x19D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A29 DUP2 PUSH2 0x1A03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A53 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A71 DUP2 PUSH2 0x1A5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9D DUP3 PUSH2 0x1959 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAD DUP2 PUSH2 0x1A92 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACA DUP2 PUSH2 0x1AA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE6 JUMPI PUSH2 0x1AE5 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x1AFD JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2D DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH2 0x1B48 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B57 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B69 DUP2 PUSH2 0x1AFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B84 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA1 JUMPI PUSH2 0x1BA0 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BAF DUP6 DUP3 DUP7 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1982 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD3 DUP2 PUSH2 0x1A5C JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF0 DUP2 PUSH2 0x1BCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0C JUMPI PUSH2 0x1C0B PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C1A DUP5 DUP3 DUP6 ADD PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C2C DUP2 PUSH2 0x1959 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C47 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C64 JUMPI PUSH2 0x1C63 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C72 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C83 DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA2 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CB1 DUP5 DUP3 DUP6 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC3 DUP2 PUSH2 0x1903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CFA JUMPI PUSH2 0x1CF9 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D08 DUP5 DUP3 DUP6 ADD PUSH2 0x1982 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420612077697468647261776572000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D58 PUSH1 0x1A DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D63 DUP3 PUSH2 0x1D22 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D87 DUP2 PUSH2 0x1D4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177206973206E6F7420617661696C61626C6500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC4 PUSH1 0x19 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DCF DUP3 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF3 DUP2 PUSH2 0x1DB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x457863656564206D6178696D756D20616D6F756E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E30 PUSH1 0x15 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E3B DUP3 PUSH2 0x1DFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E5F DUP2 PUSH2 0x1E23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E7B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0x1E88 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E9E DUP2 PUSH2 0x1BCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EBA JUMPI PUSH2 0x1EB9 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC8 DUP5 DUP3 DUP6 ADD PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F07 PUSH1 0x20 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F12 DUP3 PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F36 DUP2 PUSH2 0x1EFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F99 PUSH1 0x2F DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA4 DUP3 PUSH2 0x1F3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC8 DUP2 PUSH2 0x1F8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FDE DUP2 PUSH2 0x190D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FFA JUMPI PUSH2 0x1FF9 PUSH2 0x18FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2008 DUP5 DUP3 DUP6 ADD PUSH2 0x1FCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206163636F756E742062616C616E636500000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2047 PUSH1 0x1C DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2052 DUP3 PUSH2 0x2011 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2076 DUP2 PUSH2 0x203A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D9 PUSH1 0x26 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E4 DUP3 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2108 DUP2 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2124 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0x2131 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0x213E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2187 PUSH1 0x17 DUP4 PUSH2 0x2146 JUMP JUMPDEST SWAP2 POP PUSH2 0x2192 DUP3 PUSH2 0x2151 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21AB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x21D5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E6 DUP3 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x21F0 DUP2 DUP6 PUSH2 0x2146 JUMP JUMPDEST SWAP4 POP PUSH2 0x2200 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21A8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2242 PUSH1 0x11 DUP4 PUSH2 0x2146 JUMP JUMPDEST SWAP2 POP PUSH2 0x224D DUP3 PUSH2 0x220C JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2263 DUP3 PUSH2 0x217A JUMP JUMPDEST SWAP2 POP PUSH2 0x226F DUP3 DUP6 PUSH2 0x21DB JUMP JUMPDEST SWAP2 POP PUSH2 0x227A DUP3 PUSH2 0x2235 JUMP JUMPDEST SWAP2 POP PUSH2 0x2286 DUP3 DUP5 PUSH2 0x21DB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22AE DUP3 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x22B8 DUP2 DUP6 PUSH2 0x1D11 JUMP JUMPDEST SWAP4 POP PUSH2 0x22C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0x22D1 DUP2 PUSH2 0x2292 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22F6 DUP2 DUP5 PUSH2 0x22A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2389 PUSH1 0x2A DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2394 DUP3 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B8 DUP2 PUSH2 0x237C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23F9 DUP3 PUSH2 0x1903 JUMP JUMPDEST SWAP2 POP PUSH2 0x2404 DUP4 PUSH2 0x1903 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x243D JUMPI PUSH2 0x243C PUSH2 0x23BF JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2453 DUP3 PUSH2 0x1903 JUMP JUMPDEST SWAP2 POP PUSH2 0x245E DUP4 PUSH2 0x1903 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2493 JUMPI PUSH2 0x2492 PUSH2 0x23BF JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24D8 DUP3 PUSH2 0x1903 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x24EC JUMPI PUSH2 0x24EB PUSH2 0x23BF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252D PUSH1 0x20 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2538 DUP3 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x255C DUP2 PUSH2 0x2520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256E DUP3 PUSH2 0x1903 JUMP JUMPDEST SWAP2 POP PUSH2 0x2579 DUP4 PUSH2 0x1903 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x258C JUMPI PUSH2 0x258B PUSH2 0x23BF JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2622 PUSH1 0x26 DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x262D DUP3 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2651 DUP2 PUSH2 0x2615 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x268E PUSH1 0x1D DUP4 PUSH2 0x1D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x2699 DUP3 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26BD DUP2 PUSH2 0x2681 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E5 DUP3 PUSH2 0x26C4 JUMP JUMPDEST PUSH2 0x26EF DUP2 DUP6 PUSH2 0x26CF JUMP JUMPDEST SWAP4 POP PUSH2 0x26FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21A8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2717 DUP3 DUP5 PUSH2 0x26DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xBC LOG3 0x4C ADDMOD SIGNEXTEND 0xD5 0xD0 0xD3 0xA6 TIMESTAMP 0xDB 0x28 0xD5 0x23 DUP4 PUSH1 0xEB 0xC 0xC8 LOG2 PUSH15 0x8A192D280514CFDDFAF164736F6C63 NUMBER STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"343:1312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;966:269;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;634:212:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;800:81:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4391:129:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5787:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:5;;;:::i;:::-;;573:103:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;496:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1431:151:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:145:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:26:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1241:252;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1750:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5149:147:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;681:114:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;426:32:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;966:269;1553:12;:10;:12::i;:::-;1542:23;;:7;:5;:7::i;:::-;:23;;;:62;;;;1567:37;538:28;1591:12;:10;:12::i;:::-;1567:7;:37::i;:::-;1542:62;1534:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;1078:14:::1;;;;;;;;;;;1070:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1148:17;;1139:7;:26;;1131:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1200:5;;;;;;;;;;;:14;;;1215:3;1220:7;1200:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;966:269:::0;;:::o;634:212:2:-;719:4;757:42;742:57;;;:11;:57;;;;:97;;;;803:36;827:11;803:23;:36::i;:::-;742:97;735:104;;634:212;;;:::o;800:81:0:-;1259:12:5;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;868:6:0::1;860:5;;:14;;;;;;;;;;;;;;;;;;800:81:::0;:::o;4391:129:1:-;4465:7;4491:6;:12;4498:4;4491:12;;;;;;;;;;;:22;;;4484:29;;4391:129;;;:::o;4770:145::-;4853:18;4866:4;4853:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4883:25:::1;4894:4;4900:7;4883:10;:25::i;:::-;4770:145:::0;;;:::o;5787:214::-;5893:12;:10;:12::i;:::-;5882:23;;:7;:23;;;5874:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5968:26;5980:4;5986:7;5968:11;:26::i;:::-;5787:214;;:::o;1668:101:5:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;573:103:0:-;1259:12:5;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;660:9:0::1;643:14;;:26;;;;;;;;;;;;;;;;;;573:103:::0;:::o;496:70::-;538:28;496:70;:::o;1036:85:5:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1431:151:2:-;1521:7;1547:28;1569:5;1547:12;:18;1560:4;1547:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1540:35;;1431:151;;;;:::o;2895:145:1:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;2027:49::-;2072:4;2027:49;;;:::o;464:26:0:-;;;;;;;;;;;;;:::o;1241:252::-;1346:7;1315:5;;;;;;;;;;;:15;;;1331:10;1315:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;1294:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;1417:69;1444:5;;;;;;;;;;;1451:10;1471:4;1478:7;1417:26;:69::i;:::-;1241:252;:::o;1750:140:2:-;1830:7;1856:27;:12;:18;1869:4;1856:18;;;;;;;;;;;:25;:27::i;:::-;1849:34;;1750:140;;;:::o;5149:147:1:-;5233:18;5246:4;5233:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5263:26:::1;5275:4;5281:7;5263:11;:26::i;:::-;5149:147:::0;;;:::o;681:114:0:-;1259:12:5;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;778:10:0::1;758:17;:30;;;;681:114:::0;:::o;1918:198:5:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;426:32:0:-;;;;:::o;7244:233:1:-;7327:22;7335:4;7341:7;7327;:22::i;:::-;7322:149;;7397:4;7365:6;:12;7372:4;7365:12;;;;;;;;;;;:20;;:29;7386:7;7365:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7447:12;:10;:12::i;:::-;7420:40;;7438:7;7420:40;;7432:4;7420:40;;;;;;;;;;7322:149;7244:233;;:::o;7627:150:13:-;7697:4;7720:50;7725:3;:10;;7761:5;7745:23;;7737:32;;7720:4;:50::i;:::-;7713:57;;7627:150;;;;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;2606:202:1:-;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;3334:103::-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;1978:166:2:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106;2129:7;2106:12;:18;2119:4;2106:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;1978:166;;:::o;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:34;2389:7;2363:12;:18;2376:4;2363:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2233:171;;:::o;2270:187:5:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;8885:156:13:-;8959:7;9009:22;9013:3;:10;;9025:5;9009:3;:22::i;:::-;9001:31;;8978:56;;8885:156;;;;:::o;912:241:7:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;8428:115:13:-;8491:7;8517:19;8525:3;:10;;8517:7;:19::i;:::-;8510:26;;8428:115;;;:::o;1712:404::-;1775:4;1796:21;1806:3;1811:5;1796:9;:21::i;:::-;1791:319;;1833:3;:11;;1850:5;1833:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:3;:11;;:18;;;;1991:3;:12;;:19;2004:5;1991:19;;;;;;;;;;;:40;;;;2052:4;2045:11;;;;1791:319;2094:5;2087:12;;1712:404;;;;;:::o;829:155:11:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3718:492:1:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;3989:41;;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4121:13;;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:349;;;;;;;;;;;:::i;:::-;;;;;;;;3801:403;3718:492;;:::o;7602:234::-;7685:22;7693:4;7699:7;7685;:22::i;:::-;7681:149;;;7755:5;7723:6;:12;7730:4;7723:12;;;;;;;;;;;:20;;:29;7744:7;7723:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7806:12;:10;:12::i;:::-;7779:40;;7797:7;7779:40;;7791:4;7779:40;;;;;;;;;;7681:149;7602:234;;:::o;7945:156:13:-;8018:4;8041:53;8049:3;:10;;8085:5;8069:23;;8061:32;;8041:7;:53::i;:::-;8034:60;;7945:156;;;;:::o;4410:118::-;4477:7;4503:3;:11;;4515:5;4503:18;;;;;;;;:::i;:::-;;;;;;;;;;4496:25;;4410:118;;;;:::o;3207:706:7:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3277:636;3207:706;;:::o;3961:107:13:-;4017:7;4043:3;:11;;:18;;;;4036:25;;3961:107;;;:::o;3753:127::-;3826:4;3872:1;3849:3;:12;;:19;3862:5;3849:19;;;;;;;;;;;;:24;;3842:31;;3753:127;;;;:::o;1588:441:10:-;1663:13;1688:19;1733:1;1724:6;1720:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:47;;1745:15;:6;1752:1;1745:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1770;:6;1777:1;1770:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1800:9;1825:1;1816:6;1812:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;1866:12;1887:3;1879:5;:11;1866:25;;;;;;;:::i;:::-;;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1915:1;1905:11;;;;;1835:3;;;;:::i;:::-;;;1795:132;;;;1953:1;1944:5;:10;1936:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2015:6;2001:21;;;1588:441;;;;:::o;2284:1388:13:-;2350:4;2466:18;2487:3;:12;;:19;2500:5;2487:19;;;;;;;;;;;;2466:40;;2535:1;2521:10;:15;2517:1149;;2890:21;2927:1;2914:10;:14;;;;:::i;:::-;2890:38;;2942:17;2983:1;2962:3;:11;;:18;;;;:22;;;;:::i;:::-;2942:42;;3016:13;3003:9;:26;2999:398;;3049:17;3069:3;:11;;3081:9;3069:22;;;;;;;;:::i;:::-;;;;;;;;;;3049:42;;3220:9;3191:3;:11;;3203:13;3191:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3329:10;3303:3;:12;;:23;3316:9;3303:23;;;;;;;;;;;:36;;;;3031:366;2999:398;3475:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3567:3;:12;;:19;3580:5;3567:19;;;;;;;;;;;3560:26;;;3608:4;3601:11;;;;;;;2517:1149;3650:5;3643:12;;;2284:1388;;;;;:::o;3861:223:8:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;88:117:14:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:149::-;1713:7;1753:66;1746:5;1742:78;1731:89;;1677:149;;;:::o;1832:120::-;1904:23;1921:5;1904:23;:::i;:::-;1897:5;1894:34;1884:62;;1942:1;1939;1932:12;1884:62;1832:120;:::o;1958:137::-;2003:5;2041:6;2028:20;2019:29;;2057:32;2083:5;2057:32;:::i;:::-;1958:137;;;;:::o;2101:327::-;2159:6;2208:2;2196:9;2187:7;2183:23;2179:32;2176:119;;;2214:79;;:::i;:::-;2176:119;2334:1;2359:52;2403:7;2394:6;2383:9;2379:22;2359:52;:::i;:::-;2349:62;;2305:116;2101:327;;;;:::o;2434:90::-;2468:7;2511:5;2504:13;2497:21;2486:32;;2434:90;;;:::o;2530:109::-;2611:21;2626:5;2611:21;:::i;:::-;2606:3;2599:34;2530:109;;:::o;2645:210::-;2732:4;2770:2;2759:9;2755:18;2747:26;;2783:65;2845:1;2834:9;2830:17;2821:6;2783:65;:::i;:::-;2645:210;;;;:::o;2861:110::-;2912:7;2941:24;2959:5;2941:24;:::i;:::-;2930:35;;2861:110;;;:::o;2977:150::-;3064:38;3096:5;3064:38;:::i;:::-;3057:5;3054:49;3044:77;;3117:1;3114;3107:12;3044:77;2977:150;:::o;3133:167::-;3193:5;3231:6;3218:20;3209:29;;3247:47;3288:5;3247:47;:::i;:::-;3133:167;;;;:::o;3306:357::-;3379:6;3428:2;3416:9;3407:7;3403:23;3399:32;3396:119;;;3434:79;;:::i;:::-;3396:119;3554:1;3579:67;3638:7;3629:6;3618:9;3614:22;3579:67;:::i;:::-;3569:77;;3525:131;3306:357;;;;:::o;3669:77::-;3706:7;3735:5;3724:16;;3669:77;;;:::o;3752:122::-;3825:24;3843:5;3825:24;:::i;:::-;3818:5;3815:35;3805:63;;3864:1;3861;3854:12;3805:63;3752:122;:::o;3880:139::-;3926:5;3964:6;3951:20;3942:29;;3980:33;4007:5;3980:33;:::i;:::-;3880:139;;;;:::o;4025:329::-;4084:6;4133:2;4121:9;4112:7;4108:23;4104:32;4101:119;;;4139:79;;:::i;:::-;4101:119;4259:1;4284:53;4329:7;4320:6;4309:9;4305:22;4284:53;:::i;:::-;4274:63;;4230:117;4025:329;;;;:::o;4360:118::-;4447:24;4465:5;4447:24;:::i;:::-;4442:3;4435:37;4360:118;;:::o;4484:222::-;4577:4;4615:2;4604:9;4600:18;4592:26;;4628:71;4696:1;4685:9;4681:17;4672:6;4628:71;:::i;:::-;4484:222;;;;:::o;4712:474::-;4780:6;4788;4837:2;4825:9;4816:7;4812:23;4808:32;4805:119;;;4843:79;;:::i;:::-;4805:119;4963:1;4988:53;5033:7;5024:6;5013:9;5009:22;4988:53;:::i;:::-;4978:63;;4934:117;5090:2;5116:53;5161:7;5152:6;5141:9;5137:22;5116:53;:::i;:::-;5106:63;;5061:118;4712:474;;;;;:::o;5192:116::-;5262:21;5277:5;5262:21;:::i;:::-;5255:5;5252:32;5242:60;;5298:1;5295;5288:12;5242:60;5192:116;:::o;5314:133::-;5357:5;5395:6;5382:20;5373:29;;5411:30;5435:5;5411:30;:::i;:::-;5314:133;;;;:::o;5453:323::-;5509:6;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:50;5751:7;5742:6;5731:9;5727:22;5709:50;:::i;:::-;5699:60;;5655:114;5453:323;;;;:::o;5782:118::-;5869:24;5887:5;5869:24;:::i;:::-;5864:3;5857:37;5782:118;;:::o;5906:222::-;5999:4;6037:2;6026:9;6022:18;6014:26;;6050:71;6118:1;6107:9;6103:17;6094:6;6050:71;:::i;:::-;5906:222;;;;:::o;6134:474::-;6202:6;6210;6259:2;6247:9;6238:7;6234:23;6230:32;6227:119;;;6265:79;;:::i;:::-;6227:119;6385:1;6410:53;6455:7;6446:6;6435:9;6431:22;6410:53;:::i;:::-;6400:63;;6356:117;6512:2;6538:53;6583:7;6574:6;6563:9;6559:22;6538:53;:::i;:::-;6528:63;;6483:118;6134:474;;;;;:::o;6614:329::-;6673:6;6722:2;6710:9;6701:7;6697:23;6693:32;6690:119;;;6728:79;;:::i;:::-;6690:119;6848:1;6873:53;6918:7;6909:6;6898:9;6894:22;6873:53;:::i;:::-;6863:63;;6819:117;6614:329;;;;:::o;6949:118::-;7036:24;7054:5;7036:24;:::i;:::-;7031:3;7024:37;6949:118;;:::o;7073:222::-;7166:4;7204:2;7193:9;7189:18;7181:26;;7217:71;7285:1;7274:9;7270:17;7261:6;7217:71;:::i;:::-;7073:222;;;;:::o;7301:329::-;7360:6;7409:2;7397:9;7388:7;7384:23;7380:32;7377:119;;;7415:79;;:::i;:::-;7377:119;7535:1;7560:53;7605:7;7596:6;7585:9;7581:22;7560:53;:::i;:::-;7550:63;;7506:117;7301:329;;;;:::o;7636:169::-;7720:11;7754:6;7749:3;7742:19;7794:4;7789:3;7785:14;7770:29;;7636:169;;;;:::o;7811:176::-;7951:28;7947:1;7939:6;7935:14;7928:52;7811:176;:::o;7993:366::-;8135:3;8156:67;8220:2;8215:3;8156:67;:::i;:::-;8149:74;;8232:93;8321:3;8232:93;:::i;:::-;8350:2;8345:3;8341:12;8334:19;;7993:366;;;:::o;8365:419::-;8531:4;8569:2;8558:9;8554:18;8546:26;;8618:9;8612:4;8608:20;8604:1;8593:9;8589:17;8582:47;8646:131;8772:4;8646:131;:::i;:::-;8638:139;;8365:419;;;:::o;8790:175::-;8930:27;8926:1;8918:6;8914:14;8907:51;8790:175;:::o;8971:366::-;9113:3;9134:67;9198:2;9193:3;9134:67;:::i;:::-;9127:74;;9210:93;9299:3;9210:93;:::i;:::-;9328:2;9323:3;9319:12;9312:19;;8971:366;;;:::o;9343:419::-;9509:4;9547:2;9536:9;9532:18;9524:26;;9596:9;9590:4;9586:20;9582:1;9571:9;9567:17;9560:47;9624:131;9750:4;9624:131;:::i;:::-;9616:139;;9343:419;;;:::o;9768:171::-;9908:23;9904:1;9896:6;9892:14;9885:47;9768:171;:::o;9945:366::-;10087:3;10108:67;10172:2;10167:3;10108:67;:::i;:::-;10101:74;;10184:93;10273:3;10184:93;:::i;:::-;10302:2;10297:3;10293:12;10286:19;;9945:366;;;:::o;10317:419::-;10483:4;10521:2;10510:9;10506:18;10498:26;;10570:9;10564:4;10560:20;10556:1;10545:9;10541:17;10534:47;10598:131;10724:4;10598:131;:::i;:::-;10590:139;;10317:419;;;:::o;10742:332::-;10863:4;10901:2;10890:9;10886:18;10878:26;;10914:71;10982:1;10971:9;10967:17;10958:6;10914:71;:::i;:::-;10995:72;11063:2;11052:9;11048:18;11039:6;10995:72;:::i;:::-;10742:332;;;;;:::o;11080:137::-;11134:5;11165:6;11159:13;11150:22;;11181:30;11205:5;11181:30;:::i;:::-;11080:137;;;;:::o;11223:345::-;11290:6;11339:2;11327:9;11318:7;11314:23;11310:32;11307:119;;;11345:79;;:::i;:::-;11307:119;11465:1;11490:61;11543:7;11534:6;11523:9;11519:22;11490:61;:::i;:::-;11480:71;;11436:125;11223:345;;;;:::o;11574:182::-;11714:34;11710:1;11702:6;11698:14;11691:58;11574:182;:::o;11762:366::-;11904:3;11925:67;11989:2;11984:3;11925:67;:::i;:::-;11918:74;;12001:93;12090:3;12001:93;:::i;:::-;12119:2;12114:3;12110:12;12103:19;;11762:366;;;:::o;12134:419::-;12300:4;12338:2;12327:9;12323:18;12315:26;;12387:9;12381:4;12377:20;12373:1;12362:9;12358:17;12351:47;12415:131;12541:4;12415:131;:::i;:::-;12407:139;;12134:419;;;:::o;12559:234::-;12699:34;12695:1;12687:6;12683:14;12676:58;12768:17;12763:2;12755:6;12751:15;12744:42;12559:234;:::o;12799:366::-;12941:3;12962:67;13026:2;13021:3;12962:67;:::i;:::-;12955:74;;13038:93;13127:3;13038:93;:::i;:::-;13156:2;13151:3;13147:12;13140:19;;12799:366;;;:::o;13171:419::-;13337:4;13375:2;13364:9;13360:18;13352:26;;13424:9;13418:4;13414:20;13410:1;13399:9;13395:17;13388:47;13452:131;13578:4;13452:131;:::i;:::-;13444:139;;13171:419;;;:::o;13596:143::-;13653:5;13684:6;13678:13;13669:22;;13700:33;13727:5;13700:33;:::i;:::-;13596:143;;;;:::o;13745:351::-;13815:6;13864:2;13852:9;13843:7;13839:23;13835:32;13832:119;;;13870:79;;:::i;:::-;13832:119;13990:1;14015:64;14071:7;14062:6;14051:9;14047:22;14015:64;:::i;:::-;14005:74;;13961:128;13745:351;;;;:::o;14102:178::-;14242:30;14238:1;14230:6;14226:14;14219:54;14102:178;:::o;14286:366::-;14428:3;14449:67;14513:2;14508:3;14449:67;:::i;:::-;14442:74;;14525:93;14614:3;14525:93;:::i;:::-;14643:2;14638:3;14634:12;14627:19;;14286:366;;;:::o;14658:419::-;14824:4;14862:2;14851:9;14847:18;14839:26;;14911:9;14905:4;14901:20;14897:1;14886:9;14882:17;14875:47;14939:131;15065:4;14939:131;:::i;:::-;14931:139;;14658:419;;;:::o;15083:225::-;15223:34;15219:1;15211:6;15207:14;15200:58;15292:8;15287:2;15279:6;15275:15;15268:33;15083:225;:::o;15314:366::-;15456:3;15477:67;15541:2;15536:3;15477:67;:::i;:::-;15470:74;;15553:93;15642:3;15553:93;:::i;:::-;15671:2;15666:3;15662:12;15655:19;;15314:366;;;:::o;15686:419::-;15852:4;15890:2;15879:9;15875:18;15867:26;;15939:9;15933:4;15929:20;15925:1;15914:9;15910:17;15903:47;15967:131;16093:4;15967:131;:::i;:::-;15959:139;;15686:419;;;:::o;16111:442::-;16260:4;16298:2;16287:9;16283:18;16275:26;;16311:71;16379:1;16368:9;16364:17;16355:6;16311:71;:::i;:::-;16392:72;16460:2;16449:9;16445:18;16436:6;16392:72;:::i;:::-;16474;16542:2;16531:9;16527:18;16518:6;16474:72;:::i;:::-;16111:442;;;;;;:::o;16559:148::-;16661:11;16698:3;16683:18;;16559:148;;;;:::o;16713:173::-;16853:25;16849:1;16841:6;16837:14;16830:49;16713:173;:::o;16892:402::-;17052:3;17073:85;17155:2;17150:3;17073:85;:::i;:::-;17066:92;;17167:93;17256:3;17167:93;:::i;:::-;17285:2;17280:3;17276:12;17269:19;;16892:402;;;:::o;17300:99::-;17352:6;17386:5;17380:12;17370:22;;17300:99;;;:::o;17405:307::-;17473:1;17483:113;17497:6;17494:1;17491:13;17483:113;;;17582:1;17577:3;17573:11;17567:18;17563:1;17558:3;17554:11;17547:39;17519:2;17516:1;17512:10;17507:15;;17483:113;;;17614:6;17611:1;17608:13;17605:101;;;17694:1;17685:6;17680:3;17676:16;17669:27;17605:101;17454:258;17405:307;;;:::o;17718:377::-;17824:3;17852:39;17885:5;17852:39;:::i;:::-;17907:89;17989:6;17984:3;17907:89;:::i;:::-;17900:96;;18005:52;18050:6;18045:3;18038:4;18031:5;18027:16;18005:52;:::i;:::-;18082:6;18077:3;18073:16;18066:23;;17828:267;17718:377;;;;:::o;18101:167::-;18241:19;18237:1;18229:6;18225:14;18218:43;18101:167;:::o;18274:402::-;18434:3;18455:85;18537:2;18532:3;18455:85;:::i;:::-;18448:92;;18549:93;18638:3;18549:93;:::i;:::-;18667:2;18662:3;18658:12;18651:19;;18274:402;;;:::o;18682:967::-;19064:3;19086:148;19230:3;19086:148;:::i;:::-;19079:155;;19251:95;19342:3;19333:6;19251:95;:::i;:::-;19244:102;;19363:148;19507:3;19363:148;:::i;:::-;19356:155;;19528:95;19619:3;19610:6;19528:95;:::i;:::-;19521:102;;19640:3;19633:10;;18682:967;;;;;:::o;19655:102::-;19696:6;19747:2;19743:7;19738:2;19731:5;19727:14;19723:28;19713:38;;19655:102;;;:::o;19763:364::-;19851:3;19879:39;19912:5;19879:39;:::i;:::-;19934:71;19998:6;19993:3;19934:71;:::i;:::-;19927:78;;20014:52;20059:6;20054:3;20047:4;20040:5;20036:16;20014:52;:::i;:::-;20091:29;20113:6;20091:29;:::i;:::-;20086:3;20082:39;20075:46;;19855:272;19763:364;;;;:::o;20133:313::-;20246:4;20284:2;20273:9;20269:18;20261:26;;20333:9;20327:4;20323:20;20319:1;20308:9;20304:17;20297:47;20361:78;20434:4;20425:6;20361:78;:::i;:::-;20353:86;;20133:313;;;;:::o;20452:180::-;20500:77;20497:1;20490:88;20597:4;20594:1;20587:15;20621:4;20618:1;20611:15;20638:229;20778:34;20774:1;20766:6;20762:14;20755:58;20847:12;20842:2;20834:6;20830:15;20823:37;20638:229;:::o;20873:366::-;21015:3;21036:67;21100:2;21095:3;21036:67;:::i;:::-;21029:74;;21112:93;21201:3;21112:93;:::i;:::-;21230:2;21225:3;21221:12;21214:19;;20873:366;;;:::o;21245:419::-;21411:4;21449:2;21438:9;21434:18;21426:26;;21498:9;21492:4;21488:20;21484:1;21473:9;21469:17;21462:47;21526:131;21652:4;21526:131;:::i;:::-;21518:139;;21245:419;;;:::o;21670:180::-;21718:77;21715:1;21708:88;21815:4;21812:1;21805:15;21839:4;21836:1;21829:15;21856:348;21896:7;21919:20;21937:1;21919:20;:::i;:::-;21914:25;;21953:20;21971:1;21953:20;:::i;:::-;21948:25;;22141:1;22073:66;22069:74;22066:1;22063:81;22058:1;22051:9;22044:17;22040:105;22037:131;;;22148:18;;:::i;:::-;22037:131;22196:1;22193;22189:9;22178:20;;21856:348;;;;:::o;22210:305::-;22250:3;22269:20;22287:1;22269:20;:::i;:::-;22264:25;;22303:20;22321:1;22303:20;:::i;:::-;22298:25;;22457:1;22389:66;22385:74;22382:1;22379:81;22376:107;;;22463:18;;:::i;:::-;22376:107;22507:1;22504;22500:9;22493:16;;22210:305;;;;:::o;22521:180::-;22569:77;22566:1;22559:88;22666:4;22663:1;22656:15;22690:4;22687:1;22680:15;22707:171;22746:3;22769:24;22787:5;22769:24;:::i;:::-;22760:33;;22815:4;22808:5;22805:15;22802:41;;;22823:18;;:::i;:::-;22802:41;22870:1;22863:5;22859:13;22852:20;;22707:171;;;:::o;22884:182::-;23024:34;23020:1;23012:6;23008:14;23001:58;22884:182;:::o;23072:366::-;23214:3;23235:67;23299:2;23294:3;23235:67;:::i;:::-;23228:74;;23311:93;23400:3;23311:93;:::i;:::-;23429:2;23424:3;23420:12;23413:19;;23072:366;;;:::o;23444:419::-;23610:4;23648:2;23637:9;23633:18;23625:26;;23697:9;23691:4;23687:20;23683:1;23672:9;23668:17;23661:47;23725:131;23851:4;23725:131;:::i;:::-;23717:139;;23444:419;;;:::o;23869:191::-;23909:4;23929:20;23947:1;23929:20;:::i;:::-;23924:25;;23963:20;23981:1;23963:20;:::i;:::-;23958:25;;24002:1;23999;23996:8;23993:34;;;24007:18;;:::i;:::-;23993:34;24052:1;24049;24045:9;24037:17;;23869:191;;;;:::o;24066:180::-;24114:77;24111:1;24104:88;24211:4;24208:1;24201:15;24235:4;24232:1;24225:15;24252:225;24392:34;24388:1;24380:6;24376:14;24369:58;24461:8;24456:2;24448:6;24444:15;24437:33;24252:225;:::o;24483:366::-;24625:3;24646:67;24710:2;24705:3;24646:67;:::i;:::-;24639:74;;24722:93;24811:3;24722:93;:::i;:::-;24840:2;24835:3;24831:12;24824:19;;24483:366;;;:::o;24855:419::-;25021:4;25059:2;25048:9;25044:18;25036:26;;25108:9;25102:4;25098:20;25094:1;25083:9;25079:17;25072:47;25136:131;25262:4;25136:131;:::i;:::-;25128:139;;24855:419;;;:::o;25280:179::-;25420:31;25416:1;25408:6;25404:14;25397:55;25280:179;:::o;25465:366::-;25607:3;25628:67;25692:2;25687:3;25628:67;:::i;:::-;25621:74;;25704:93;25793:3;25704:93;:::i;:::-;25822:2;25817:3;25813:12;25806:19;;25465:366;;;:::o;25837:419::-;26003:4;26041:2;26030:9;26026:18;26018:26;;26090:9;26084:4;26080:20;26076:1;26065:9;26061:17;26054:47;26118:131;26244:4;26118:131;:::i;:::-;26110:139;;25837:419;;;:::o;26262:98::-;26313:6;26347:5;26341:12;26331:22;;26262:98;;;:::o;26366:147::-;26467:11;26504:3;26489:18;;26366:147;;;;:::o;26519:373::-;26623:3;26651:38;26683:5;26651:38;:::i;:::-;26705:88;26786:6;26781:3;26705:88;:::i;:::-;26698:95;;26802:52;26847:6;26842:3;26835:4;26828:5;26824:16;26802:52;:::i;:::-;26879:6;26874:3;26870:16;26863:23;;26627:265;26519:373;;;;:::o;26898:271::-;27028:3;27050:93;27139:3;27130:6;27050:93;:::i;:::-;27043:100;;27160:3;27153:10;;26898:271;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","WITHDRAWER_ROLE()":"85f438c1","deposit(uint256)":"b6b55f25","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","maxWithdrawAmount()":"f516440c","owner()":"8da5cb5b","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setMaxWithdrawAmount(uint256)":"df74e028","setToken(address)":"144fa6d7","setWithdrawEnable(bool)":"827a560b","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","withdraw(uint256,address)":"00f714ce","withdrawEnable()":"b5b68afe"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWithdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxWithdrawAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnable\",\"type\":\"bool\"}],\"name\":\"setWithdrawEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Vault.sol\":{\"keccak256\":\"0x8d25ccb1cbaeccb7e7eb1f174ea3dcd1da2f4a567e48083bf0e3bd0e4929e402\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://06c69968c4bdc2f968861af48a774a335ec27f05576b5f115d73b21bf993095a\",\"dweb:/ipfs/Qme4WDcsCzk6r4ajVmS7USNFL3pZXLhkAGCGwZvtS79hak\"]},\"openzeppelin-solidity/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"openzeppelin-solidity/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"openzeppelin-solidity/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"openzeppelin-solidity/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"openzeppelin-solidity/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"openzeppelin-solidity/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/access/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"openzeppelin-solidity/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"openzeppelin-solidity/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"openzeppelin-solidity/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"openzeppelin-solidity/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/access/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"openzeppelin-solidity/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220101aa03170fda4e3b91a47f7bd4c992ac34424fa31fb4ca9d1037cc611da0e2e64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT BYTE LOG0 BALANCE PUSH17 0xFDA4E3B91A47F7BD4C992AC34424FA31FB 0x4C 0xA9 0xD1 SUB PUSH29 0xC611DA0E2E64736F6C6343000809003300000000000000000000000000 ","sourceMap":"645:3270:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220101aa03170fda4e3b91a47f7bd4c992ac34424fa31fb4ca9d1037cc611da0e2e64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT BYTE LOG0 BALANCE PUSH17 0xFDA4E3B91A47F7BD4C992AC34424FA31FB 0x4C 0xA9 0xD1 SUB PUSH29 0xC611DA0E2E64736F6C6343000809003300000000000000000000000000 ","sourceMap":"645:3270:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220751d537f58bf99198a8898d0a45bdd7cd1e024e8e135ec56db00734e02aecb5764736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x1D537F58BF99198A8898D0A45BDD7CD1E024E8E135EC JUMP 0xDB STOP PUSH20 0x4E02AECB5764736F6C6343000809003300000000 ","sourceMap":"194:8061:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220751d537f58bf99198a8898d0a45bdd7cd1e024e8e135ec56db00734e02aecb5764736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x1D537F58BF99198A8898D0A45BDD7CD1E024E8E135EC JUMP 0xDB STOP PUSH20 0x4E02AECB5764736F6C6343000809003300000000 ","sourceMap":"194:8061:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f35f1a631be1dedacb7fff176baec3731fed926796fb3ebe420a4b39eb1157e264736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0x5F BYTE PUSH4 0x1BE1DEDA 0xCB PUSH32 0xFF176BAEC3731FED926796FB3EBE420A4B39EB1157E264736F6C634300080900 CALLER ","sourceMap":"146:1885:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f35f1a631be1dedacb7fff176baec3731fed926796fb3ebe420a4b39eb1157e264736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0x5F BYTE PUSH4 0x1BE1DEDA 0xCB PUSH32 0xFF176BAEC3731FED926796FB3EBE420A4B39EB1157E264736F6C634300080900 CALLER ","sourceMap":"146:1885:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"openzeppelin-solidity/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037de2c9bcf2fef1641046337d5962b3a54d8a82625a0e703961c189abd9255cd64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xDE 0x2C SWAP12 0xCF 0x2F 0xEF AND COINBASE DIV PUSH4 0x37D5962B GASPRICE SLOAD 0xD8 0xA8 0x26 0x25 LOG0 0xE7 SUB SWAP7 SHR XOR SWAP11 0xBD SWAP3 SSTORE 0xCD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"827:11368:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037de2c9bcf2fef1641046337d5962b3a54d8a82625a0e703961c189abd9255cd64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xDE 0x2C SWAP12 0xCF 0x2F 0xEF AND COINBASE DIV PUSH4 0x37D5962B GASPRICE SLOAD 0xD8 0xA8 0x26 0x25 LOG0 0xE7 SUB SWAP7 SHR XOR SWAP11 0xBD SWAP3 SSTORE 0xCD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"827:11368:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]}},\"version\":1}"}}}}}